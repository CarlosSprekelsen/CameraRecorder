{"ImportPath":"github.com/camerarecorder/mediamtx-camera-service-go/internal/logging.test","Action":"build-output","Output":"# github.com/camerarecorder/mediamtx-camera-service-go/internal/logging\n"}
{"ImportPath":"github.com/camerarecorder/mediamtx-camera-service-go/internal/logging.test","Action":"build-output","Output":"/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/logging/test_helpers_test.go:158:1: wrong signature for TestLogLevels, must be: func TestLogLevels(t *testing.T)\n"}
{"ImportPath":"github.com/camerarecorder/mediamtx-camera-service-go/internal/logging.test","Action":"build-fail"}
{"Time":"2025-10-04T21:53:45.542368697+04:00","Action":"start","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/logging"}
{"Time":"2025-10-04T21:53:45.542474991+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/logging","Output":"FAIL\tgithub.com/camerarecorder/mediamtx-camera-service-go/internal/logging [setup failed]\n"}
{"Time":"2025-10-04T21:53:45.542497936+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/logging","Elapsed":0,"FailedBuild":"github.com/camerarecorder/mediamtx-camera-service-go/internal/logging.test"}
{"ImportPath":"./...","Action":"build-output","Output":"# ./...\n"}
{"ImportPath":"./...","Action":"build-output","Output":"pattern ./...: directory pkg/mod/github.com/davecgh/go-spew@v1.1.2-0.20180830191138-d8f796af33cc/spew outside main module or its selected dependencies\n"}
{"ImportPath":"./...","Action":"build-fail"}
{"Time":"2025-10-04T21:53:45.62424549+04:00","Action":"start","Package":"./..."}
{"Time":"2025-10-04T21:53:45.624300546+04:00","Action":"output","Package":"./...","Output":"FAIL\t./... [setup failed]\n"}
{"Time":"2025-10-04T21:53:45.624317954+04:00","Action":"fail","Package":"./...","Elapsed":0,"FailedBuild":"./..."}
{"Time":"2025-10-04T21:53:52.558783845+04:00","Action":"start","Package":"github.com/camerarecorder/mediamtx-camera-service-go"}
{"Time":"2025-10-04T21:53:52.564204268+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go","Output":"\tgithub.com/camerarecorder/mediamtx-camera-service-go\t\tcoverage: 0.0% of statements\n"}
{"Time":"2025-10-04T21:53:52.570505147+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go","Elapsed":0.012}
{"Time":"2025-10-04T21:53:52.570583122+04:00","Action":"start","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/cli"}
{"Time":"2025-10-04T21:53:52.576266417+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/cli","Output":"\tgithub.com/camerarecorder/mediamtx-camera-service-go/cmd/cli\t\tcoverage: 0.0% of statements\n"}
{"Time":"2025-10-04T21:53:52.58340287+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/cli","Elapsed":0.013}
{"Time":"2025-10-04T21:53:52.583488589+04:00","Action":"start","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/jwt-generator"}
{"Time":"2025-10-04T21:53:52.588875134+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/jwt-generator","Output":"\tgithub.com/camerarecorder/mediamtx-camera-service-go/cmd/jwt-generator\t\tcoverage: 0.0% of statements\n"}
{"Time":"2025-10-04T21:53:52.594632829+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/jwt-generator","Elapsed":0.011}
{"Time":"2025-10-04T21:53:53.335931838+04:00","Action":"start","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server"}
{"Time":"2025-10-04T21:53:53.336886124+04:00","Action":"start","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera"}
{"Time":"2025-10-04T21:53:53.337164985+04:00","Action":"start","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common"}
{"Time":"2025-10-04T21:53:53.353837977+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_StartupShutdown"}
{"Time":"2025-10-04T21:53:53.353837992+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_RaceConditionDetection"}
{"Time":"2025-10-04T21:53:53.354039961+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_RaceConditionDetection","Output":"=== RUN   TestBoundedWorkerPool_RaceConditionDetection\n"}
{"Time":"2025-10-04T21:53:53.354123947+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_RaceConditionDetection","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:53:53.353909832+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_InterfaceCompliance"}
{"Time":"2025-10-04T21:53:53.35415082+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_InterfaceCompliance","Output":"=== RUN   TestStoppable_InterfaceCompliance\n"}
{"Time":"2025-10-04T21:53:53.354199844+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_InterfaceCompliance","Output":"--- PASS: TestStoppable_InterfaceCompliance (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.354228652+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_InterfaceCompliance","Elapsed":0}
{"Time":"2025-10-04T21:53:53.35424954+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_GracefulShutdown"}
{"Time":"2025-10-04T21:53:53.354261281+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_GracefulShutdown","Output":"=== RUN   TestStoppable_GracefulShutdown\n"}
{"Time":"2025-10-04T21:53:53.354272556+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_GracefulShutdown/successful_shutdown"}
{"Time":"2025-10-04T21:53:53.35428176+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_GracefulShutdown/successful_shutdown","Output":"=== RUN   TestStoppable_GracefulShutdown/successful_shutdown\n"}
{"Time":"2025-10-04T21:53:53.354297724+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_GracefulShutdown/successful_shutdown","Output":"--- PASS: TestStoppable_GracefulShutdown/successful_shutdown (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.354314384+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_GracefulShutdown/successful_shutdown","Elapsed":0}
{"Time":"2025-10-04T21:53:53.3543302+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_GracefulShutdown/shutdown_with_error"}
{"Time":"2025-10-04T21:53:53.354341609+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_GracefulShutdown/shutdown_with_error","Output":"=== RUN   TestStoppable_GracefulShutdown/shutdown_with_error\n"}
{"Time":"2025-10-04T21:53:53.354354161+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_GracefulShutdown/shutdown_with_error","Output":"--- PASS: TestStoppable_GracefulShutdown/shutdown_with_error (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.354364861+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_GracefulShutdown/shutdown_with_error","Elapsed":0}
{"Time":"2025-10-04T21:53:53.354376221+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_GracefulShutdown/shutdown_with_context_cancellation"}
{"Time":"2025-10-04T21:53:53.354395964+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_GracefulShutdown/shutdown_with_context_cancellation","Output":"=== RUN   TestStoppable_GracefulShutdown/shutdown_with_context_cancellation\n"}
{"Time":"2025-10-04T21:53:53.354416523+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_GracefulShutdown/shutdown_with_context_cancellation","Output":"--- PASS: TestStoppable_GracefulShutdown/shutdown_with_context_cancellation (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.354432219+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_GracefulShutdown/shutdown_with_context_cancellation","Elapsed":0}
{"Time":"2025-10-04T21:53:53.354444142+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_GracefulShutdown/shutdown_with_timeout"}
{"Time":"2025-10-04T21:53:53.354456151+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_GracefulShutdown/shutdown_with_timeout","Output":"=== RUN   TestStoppable_GracefulShutdown/shutdown_with_timeout\n"}
{"Time":"2025-10-04T21:53:53.354628217+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_StartupShutdown","Output":"=== RUN   TestMain_StartupShutdown\n"}
{"Time":"2025-10-04T21:53:53.354694065+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_StartupShutdown","Output":"=== PAUSE TestMain_StartupShutdown\n"}
{"Time":"2025-10-04T21:53:53.35470845+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_StartupShutdown"}
{"Time":"2025-10-04T21:53:53.354722433+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_SignalHandling"}
{"Time":"2025-10-04T21:53:53.35473186+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_SignalHandling","Output":"=== RUN   TestMain_SignalHandling\n"}
{"Time":"2025-10-04T21:53:53.354742936+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_SignalHandling","Output":"=== PAUSE TestMain_SignalHandling\n"}
{"Time":"2025-10-04T21:53:53.35475374+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_SignalHandling"}
{"Time":"2025-10-04T21:53:53.354768681+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ContextHandling"}
{"Time":"2025-10-04T21:53:53.354777793+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ContextHandling","Output":"=== RUN   TestMain_ContextHandling\n"}
{"Time":"2025-10-04T21:53:53.35478854+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ContextHandling","Output":"=== PAUSE TestMain_ContextHandling\n"}
{"Time":"2025-10-04T21:53:53.354799403+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ContextHandling"}
{"Time":"2025-10-04T21:53:53.354814434+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ConfigurationPath"}
{"Time":"2025-10-04T21:53:53.354825815+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ConfigurationPath","Output":"=== RUN   TestMain_ConfigurationPath\n"}
{"Time":"2025-10-04T21:53:53.354856446+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ConfigurationPath","Output":"=== PAUSE TestMain_ConfigurationPath\n"}
{"Time":"2025-10-04T21:53:53.354869906+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ConfigurationPath"}
{"Time":"2025-10-04T21:53:53.354880624+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ServiceInitialization"}
{"Time":"2025-10-04T21:53:53.354890246+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ServiceInitialization","Output":"=== RUN   TestMain_ServiceInitialization\n"}
{"Time":"2025-10-04T21:53:53.354900727+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ServiceInitialization","Output":"=== PAUSE TestMain_ServiceInitialization\n"}
{"Time":"2025-10-04T21:53:53.3549152+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ServiceInitialization"}
{"Time":"2025-10-04T21:53:53.354927181+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ErrorHandling"}
{"Time":"2025-10-04T21:53:53.354937482+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ErrorHandling","Output":"=== RUN   TestMain_ErrorHandling\n"}
{"Time":"2025-10-04T21:53:53.35494885+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ErrorHandling","Output":"=== PAUSE TestMain_ErrorHandling\n"}
{"Time":"2025-10-04T21:53:53.354956863+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ErrorHandling"}
{"Time":"2025-10-04T21:53:53.354967213+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ShutdownHandling"}
{"Time":"2025-10-04T21:53:53.354976772+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ShutdownHandling","Output":"=== RUN   TestMain_ShutdownHandling\n"}
{"Time":"2025-10-04T21:53:53.35499047+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ShutdownHandling","Output":"=== PAUSE TestMain_ShutdownHandling\n"}
{"Time":"2025-10-04T21:53:53.355006174+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ShutdownHandling"}
{"Time":"2025-10-04T21:53:53.35501776+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_LoggingMessages"}
{"Time":"2025-10-04T21:53:53.35502684+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_LoggingMessages","Output":"=== RUN   TestMain_LoggingMessages\n"}
{"Time":"2025-10-04T21:53:53.355036538+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_LoggingMessages","Output":"=== PAUSE TestMain_LoggingMessages\n"}
{"Time":"2025-10-04T21:53:53.355045382+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_LoggingMessages"}
{"Time":"2025-10-04T21:53:53.358366174+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ComponentDependencies"}
{"Time":"2025-10-04T21:53:53.358428352+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ComponentDependencies","Output":"=== RUN   TestMain_ComponentDependencies\n"}
{"Time":"2025-10-04T21:53:53.358445108+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ComponentDependencies","Output":"=== PAUSE TestMain_ComponentDependencies\n"}
{"Time":"2025-10-04T21:53:53.358469359+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ComponentDependencies"}
{"Time":"2025-10-04T21:53:53.358479642+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ConfigurationValidation"}
{"Time":"2025-10-04T21:53:53.358487538+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ConfigurationValidation","Output":"=== RUN   TestMain_ConfigurationValidation\n"}
{"Time":"2025-10-04T21:53:53.358496499+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ConfigurationValidation","Output":"=== PAUSE TestMain_ConfigurationValidation\n"}
{"Time":"2025-10-04T21:53:53.358504212+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ConfigurationValidation"}
{"Time":"2025-10-04T21:53:53.358512672+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_SignalNotification"}
{"Time":"2025-10-04T21:53:53.358530077+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_SignalNotification","Output":"=== RUN   TestMain_SignalNotification\n"}
{"Time":"2025-10-04T21:53:53.358539829+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_SignalNotification","Output":"=== PAUSE TestMain_SignalNotification\n"}
{"Time":"2025-10-04T21:53:53.358547719+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_SignalNotification"}
{"Time":"2025-10-04T21:53:53.358558675+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_StartupShutdown"}
{"Time":"2025-10-04T21:53:53.35856628+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_StartupShutdown","Output":"=== CONT  TestMain_StartupShutdown\n"}
{"Time":"2025-10-04T21:53:53.358576177+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ShutdownHandling"}
{"Time":"2025-10-04T21:53:53.358583703+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ShutdownHandling","Output":"=== CONT  TestMain_ShutdownHandling\n"}
{"Time":"2025-10-04T21:53:53.358599478+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ShutdownHandling","Output":"--- PASS: TestMain_ShutdownHandling (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.358608614+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ShutdownHandling","Elapsed":0}
{"Time":"2025-10-04T21:53:53.358618891+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_SignalNotification"}
{"Time":"2025-10-04T21:53:53.358626059+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_SignalNotification","Output":"=== CONT  TestMain_SignalNotification\n"}
{"Time":"2025-10-04T21:53:53.358634052+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ConfigurationValidation"}
{"Time":"2025-10-04T21:53:53.358642296+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ConfigurationValidation","Output":"=== CONT  TestMain_ConfigurationValidation\n"}
{"Time":"2025-10-04T21:53:53.358651648+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ConfigurationValidation","Output":"--- PASS: TestMain_ConfigurationValidation (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.358668111+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ConfigurationValidation","Elapsed":0}
{"Time":"2025-10-04T21:53:53.358677631+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ComponentDependencies"}
{"Time":"2025-10-04T21:53:53.35868491+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ComponentDependencies","Output":"=== CONT  TestMain_ComponentDependencies\n"}
{"Time":"2025-10-04T21:53:53.358694445+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ComponentDependencies","Output":"--- PASS: TestMain_ComponentDependencies (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.358703257+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ComponentDependencies","Elapsed":0}
{"Time":"2025-10-04T21:53:53.358711141+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_LoggingMessages"}
{"Time":"2025-10-04T21:53:53.35871817+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_LoggingMessages","Output":"=== CONT  TestMain_LoggingMessages\n"}
{"Time":"2025-10-04T21:53:53.35872723+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_LoggingMessages","Output":"--- PASS: TestMain_LoggingMessages (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.358736033+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_LoggingMessages","Elapsed":0}
{"Time":"2025-10-04T21:53:53.358743964+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ConfigurationPath"}
{"Time":"2025-10-04T21:53:53.358751553+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ConfigurationPath","Output":"=== CONT  TestMain_ConfigurationPath\n"}
{"Time":"2025-10-04T21:53:53.358760585+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ConfigurationPath","Output":"--- PASS: TestMain_ConfigurationPath (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.358769377+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ConfigurationPath","Elapsed":0}
{"Time":"2025-10-04T21:53:53.35877699+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ErrorHandling"}
{"Time":"2025-10-04T21:53:53.358784079+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ErrorHandling","Output":"=== CONT  TestMain_ErrorHandling\n"}
{"Time":"2025-10-04T21:53:53.358793196+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ErrorHandling","Output":"--- PASS: TestMain_ErrorHandling (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.358801834+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ErrorHandling","Elapsed":0}
{"Time":"2025-10-04T21:53:53.358809513+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ServiceInitialization"}
{"Time":"2025-10-04T21:53:53.358816862+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ServiceInitialization","Output":"=== CONT  TestMain_ServiceInitialization\n"}
{"Time":"2025-10-04T21:53:53.358825814+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ServiceInitialization","Output":"--- PASS: TestMain_ServiceInitialization (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.358840665+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ServiceInitialization","Elapsed":0}
{"Time":"2025-10-04T21:53:53.358849561+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ContextHandling"}
{"Time":"2025-10-04T21:53:53.358857165+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ContextHandling","Output":"=== CONT  TestMain_ContextHandling\n"}
{"Time":"2025-10-04T21:53:53.358865691+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_SignalHandling"}
{"Time":"2025-10-04T21:53:53.358876788+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_SignalHandling","Output":"=== CONT  TestMain_SignalHandling\n"}
{"Time":"2025-10-04T21:53:53.358886276+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_StartupShutdown","Output":"--- PASS: TestMain_StartupShutdown (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.365054391+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_RaceConditionDetection","Output":"time=\"2025-10-04 21:53:53\" level=warning msg=\"Task timed out in worker pool\"\n"}
{"Time":"2025-10-04T21:53:53.365853296+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_RaceConditionDetection","Output":"time=\"2025-10-04 21:53:53\" level=warning msg=\"Task timed out in worker pool\"\n"}
{"Time":"2025-10-04T21:53:53.365920481+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_RaceConditionDetection","Output":"time=\"2025-10-04 21:53:53\" level=warning msg=\"Task timed out in worker pool\"\n"}
{"Time":"2025-10-04T21:53:53.369587866+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_StartupShutdown","Elapsed":0}
{"Time":"2025-10-04T21:53:53.369686168+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_SignalHandling","Output":"--- PASS: TestMain_SignalHandling (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.369705076+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_SignalHandling","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.369734416+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_SignalNotification","Output":"--- PASS: TestMain_SignalNotification (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.404025688+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_GracefulShutdown/shutdown_with_timeout","Output":"--- PASS: TestStoppable_GracefulShutdown/shutdown_with_timeout (0.05s)\n"}
{"Time":"2025-10-04T21:53:53.404110996+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_GracefulShutdown/shutdown_with_timeout","Elapsed":0.05}
{"Time":"2025-10-04T21:53:53.404132881+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_GracefulShutdown/double_stop_handling"}
{"Time":"2025-10-04T21:53:53.404151077+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_GracefulShutdown/double_stop_handling","Output":"=== RUN   TestStoppable_GracefulShutdown/double_stop_handling\n"}
{"Time":"2025-10-04T21:53:53.404185575+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_GracefulShutdown/double_stop_handling","Output":"--- PASS: TestStoppable_GracefulShutdown/double_stop_handling (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.404200052+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_GracefulShutdown/double_stop_handling","Elapsed":0}
{"Time":"2025-10-04T21:53:53.404227952+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_GracefulShutdown","Output":"--- PASS: TestStoppable_GracefulShutdown (0.05s)\n"}
{"Time":"2025-10-04T21:53:53.404246455+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_GracefulShutdown","Elapsed":0.05}
{"Time":"2025-10-04T21:53:53.404260102+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_ConcurrentAccess"}
{"Time":"2025-10-04T21:53:53.404270765+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_ConcurrentAccess","Output":"=== RUN   TestStoppable_ConcurrentAccess\n"}
{"Time":"2025-10-04T21:53:53.404286742+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_ConcurrentAccess/concurrent_stop_calls"}
{"Time":"2025-10-04T21:53:53.404298337+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_ConcurrentAccess/concurrent_stop_calls","Output":"=== RUN   TestStoppable_ConcurrentAccess/concurrent_stop_calls\n"}
{"Time":"2025-10-04T21:53:53.414773289+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_ConcurrentAccess/concurrent_stop_calls","Output":"--- PASS: TestStoppable_ConcurrentAccess/concurrent_stop_calls (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.415115046+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_ConcurrentAccess/concurrent_stop_calls","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.415153828+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_ConcurrentAccess/concurrent_is_running_checks"}
{"Time":"2025-10-04T21:53:53.415168013+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_ConcurrentAccess/concurrent_is_running_checks","Output":"=== RUN   TestStoppable_ConcurrentAccess/concurrent_is_running_checks\n"}
{"Time":"2025-10-04T21:53:53.461279511+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_SignalNotification","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.461369406+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ContextHandling","Output":"--- PASS: TestMain_ContextHandling (0.10s)\n"}
{"Time":"2025-10-04T21:53:53.461387895+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Test":"TestMain_ContextHandling","Elapsed":0.1}
{"Time":"2025-10-04T21:53:53.461398569+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Output":"PASS\n"}
{"Time":"2025-10-04T21:53:53.467447915+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Output":"coverage: 0.0% of statements in ./...\n"}
{"Time":"2025-10-04T21:53:53.50886165+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Output":"ok  \tgithub.com/camerarecorder/mediamtx-camera-service-go/cmd/server\t0.167s\tcoverage: 0.0% of statements in ./...\n"}
{"Time":"2025-10-04T21:53:53.509075447+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/cmd/server","Elapsed":0.173}
{"Time":"2025-10-04T21:53:53.511069753+04:00","Action":"start","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config"}
{"Time":"2025-10-04T21:53:53.518870892+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig"}
{"Time":"2025-10-04T21:53:53.51895276+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig","Output":"=== RUN   TestConfigManager_LoadConfig\n"}
{"Time":"2025-10-04T21:53:53.519484396+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig/Valid_YAML"}
{"Time":"2025-10-04T21:53:53.519644788+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig/Valid_YAML","Output":"=== RUN   TestConfigManager_LoadConfig/Valid_YAML\n"}
{"Time":"2025-10-04T21:53:53.520935416+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig/Valid_YAML","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.529307165+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig/Valid_YAML","Output":"    config_manager_test.go:89: \n"}
{"Time":"2025-10-04T21:53:53.529390504+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig/Valid_YAML","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:89\n"}
{"Time":"2025-10-04T21:53:53.529406711+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig/Valid_YAML","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:53.529417736+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig/Valid_YAML","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:53.529428794+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig/Valid_YAML","Output":"        \tTest:       \tTestConfigManager_LoadConfig/Valid_YAML\n"}
{"Time":"2025-10-04T21:53:53.529438394+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig/Valid_YAML","Output":"        \tMessages:   \tShould load valid configuration successfully\n"}
{"Time":"2025-10-04T21:53:53.529458276+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig/Valid_YAML","Output":"--- FAIL: TestConfigManager_LoadConfig/Valid_YAML (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.529470542+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig/Valid_YAML","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.529499017+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig/Invalid_YAML"}
{"Time":"2025-10-04T21:53:53.529526522+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig/Invalid_YAML","Output":"=== RUN   TestConfigManager_LoadConfig/Invalid_YAML\n"}
{"Time":"2025-10-04T21:53:53.529538223+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig/Invalid_YAML","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.530615446+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig/Invalid_YAML","Output":"--- PASS: TestConfigManager_LoadConfig/Invalid_YAML (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.533310206+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig/Invalid_YAML","Elapsed":0}
{"Time":"2025-10-04T21:53:53.533394645+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig/Invalid_Port"}
{"Time":"2025-10-04T21:53:53.533411244+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig/Invalid_Port","Output":"=== RUN   TestConfigManager_LoadConfig/Invalid_Port\n"}
{"Time":"2025-10-04T21:53:53.533426257+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig/Invalid_Port","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.537297178+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig/Invalid_Port","Output":"--- PASS: TestConfigManager_LoadConfig/Invalid_Port (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.53779309+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig/Invalid_Port","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.538181444+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig/Missing_Server"}
{"Time":"2025-10-04T21:53:53.538417217+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig/Missing_Server","Output":"=== RUN   TestConfigManager_LoadConfig/Missing_Server\n"}
{"Time":"2025-10-04T21:53:53.541080628+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig/Missing_Server","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.544602214+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig/Missing_Server","Output":"--- PASS: TestConfigManager_LoadConfig/Missing_Server (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.545103381+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig/Missing_Server","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.545386312+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig/Empty_Config"}
{"Time":"2025-10-04T21:53:53.545416144+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig/Empty_Config","Output":"=== RUN   TestConfigManager_LoadConfig/Empty_Config\n"}
{"Time":"2025-10-04T21:53:53.546252589+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig/Empty_Config","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.547497118+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig/Empty_Config","Output":"--- PASS: TestConfigManager_LoadConfig/Empty_Config (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.54758176+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig/Empty_Config","Elapsed":0}
{"Time":"2025-10-04T21:53:53.547607302+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig","Output":"--- FAIL: TestConfigManager_LoadConfig (0.03s)\n"}
{"Time":"2025-10-04T21:53:53.54762246+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig","Elapsed":0.03}
{"Time":"2025-10-04T21:53:53.547638347+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig_MissingFile"}
{"Time":"2025-10-04T21:53:53.547650516+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig_MissingFile","Output":"=== RUN   TestConfigManager_LoadConfig_MissingFile\n"}
{"Time":"2025-10-04T21:53:53.547661426+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig_MissingFile","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.547675486+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig_MissingFile","Output":"--- PASS: TestConfigManager_LoadConfig_MissingFile (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.547686568+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoadConfig_MissingFile","Elapsed":0}
{"Time":"2025-10-04T21:53:53.54769739+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_EnvironmentOverrides"}
{"Time":"2025-10-04T21:53:53.547708201+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_EnvironmentOverrides","Output":"=== RUN   TestConfigManager_EnvironmentOverrides\n"}
{"Time":"2025-10-04T21:53:53.550506539+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_ConcurrentAccess/concurrent_is_running_checks","Output":"--- PASS: TestStoppable_ConcurrentAccess/concurrent_is_running_checks (0.14s)\n"}
{"Time":"2025-10-04T21:53:53.550588849+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_ConcurrentAccess/concurrent_is_running_checks","Elapsed":0.14}
{"Time":"2025-10-04T21:53:53.550614553+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_ConcurrentAccess","Output":"--- PASS: TestStoppable_ConcurrentAccess (0.15s)\n"}
{"Time":"2025-10-04T21:53:53.550629004+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_ConcurrentAccess","Elapsed":0.15}
{"Time":"2025-10-04T21:53:53.550641328+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_RealWorldScenarios"}
{"Time":"2025-10-04T21:53:53.550650977+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_RealWorldScenarios","Output":"=== RUN   TestStoppable_RealWorldScenarios\n"}
{"Time":"2025-10-04T21:53:53.550707332+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_RealWorldScenarios/service_with_cleanup_work"}
{"Time":"2025-10-04T21:53:53.550723334+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_RealWorldScenarios/service_with_cleanup_work","Output":"=== RUN   TestStoppable_RealWorldScenarios/service_with_cleanup_work\n"}
{"Time":"2025-10-04T21:53:53.550748692+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_EnvironmentOverrides","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.555284068+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_EnvironmentOverrides","Output":"    config_manager_test.go:125: \n"}
{"Time":"2025-10-04T21:53:53.555368918+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_EnvironmentOverrides","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:125\n"}
{"Time":"2025-10-04T21:53:53.555396652+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_EnvironmentOverrides","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:53.555414324+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_EnvironmentOverrides","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:53.555432667+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_EnvironmentOverrides","Output":"        \tTest:       \tTestConfigManager_EnvironmentOverrides\n"}
{"Time":"2025-10-04T21:53:53.555445167+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_EnvironmentOverrides","Output":"        \tMessages:   \tShould load configuration with environment overrides\n"}
{"Time":"2025-10-04T21:53:53.556000572+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_EnvironmentOverrides","Output":"--- FAIL: TestConfigManager_EnvironmentOverrides (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.556345179+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_EnvironmentOverrides","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.556609567+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ThreadSafeAccess"}
{"Time":"2025-10-04T21:53:53.556776164+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ThreadSafeAccess","Output":"=== RUN   TestConfigManager_ThreadSafeAccess\n"}
{"Time":"2025-10-04T21:53:53.557615689+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ThreadSafeAccess","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.569051039+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ThreadSafeAccess","Output":"    config_manager_test.go:142: \n"}
{"Time":"2025-10-04T21:53:53.569334188+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ThreadSafeAccess","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:142\n"}
{"Time":"2025-10-04T21:53:53.569359579+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ThreadSafeAccess","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:53.569376558+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ThreadSafeAccess","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:53.569389046+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ThreadSafeAccess","Output":"        \tTest:       \tTestConfigManager_ThreadSafeAccess\n"}
{"Time":"2025-10-04T21:53:53.56941663+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ThreadSafeAccess","Output":"--- FAIL: TestConfigManager_ThreadSafeAccess (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.569431067+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ThreadSafeAccess","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.569447174+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_HotReload"}
{"Time":"2025-10-04T21:53:53.569456881+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_HotReload","Output":"=== RUN   TestConfigManager_HotReload\n"}
{"Time":"2025-10-04T21:53:53.570504621+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_HotReload","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.580965841+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_HotReload","Output":"    config_manager_test.go:177: \n"}
{"Time":"2025-10-04T21:53:53.581975412+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_HotReload","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:177\n"}
{"Time":"2025-10-04T21:53:53.582038375+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_HotReload","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:53.582058451+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_HotReload","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:53.58209454+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_HotReload","Output":"        \tTest:       \tTestConfigManager_HotReload\n"}
{"Time":"2025-10-04T21:53:53.582110378+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_HotReload","Output":"        \tMessages:   \tShould load configuration with hot reload enabled\n"}
{"Time":"2025-10-04T21:53:53.582620727+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_HotReload","Output":"--- FAIL: TestConfigManager_HotReload (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.584567683+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_HotReload","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.584624904+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_UpdateCallbacks"}
{"Time":"2025-10-04T21:53:53.584638448+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_UpdateCallbacks","Output":"=== RUN   TestConfigManager_UpdateCallbacks\n"}
{"Time":"2025-10-04T21:53:53.584652047+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_UpdateCallbacks","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.589674847+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_UpdateCallbacks","Output":"    config_manager_test.go:204: \n"}
{"Time":"2025-10-04T21:53:53.589763454+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_UpdateCallbacks","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:204\n"}
{"Time":"2025-10-04T21:53:53.589783075+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_UpdateCallbacks","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:53.589796449+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_UpdateCallbacks","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:53.589809178+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_UpdateCallbacks","Output":"        \tTest:       \tTestConfigManager_UpdateCallbacks\n"}
{"Time":"2025-10-04T21:53:53.590428402+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_UpdateCallbacks","Output":"--- FAIL: TestConfigManager_UpdateCallbacks (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.592089557+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_UpdateCallbacks","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.592191313+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoggingConfigurationUpdates"}
{"Time":"2025-10-04T21:53:53.592226722+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoggingConfigurationUpdates","Output":"=== RUN   TestConfigManager_LoggingConfigurationUpdates\n"}
{"Time":"2025-10-04T21:53:53.59225132+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoggingConfigurationUpdates","Output":"=== PAUSE TestConfigManager_LoggingConfigurationUpdates\n"}
{"Time":"2025-10-04T21:53:53.592263923+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoggingConfigurationUpdates"}
{"Time":"2025-10-04T21:53:53.592275989+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_SaveConfig"}
{"Time":"2025-10-04T21:53:53.592285758+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_SaveConfig","Output":"=== RUN   TestConfigManager_SaveConfig\n"}
{"Time":"2025-10-04T21:53:53.592296203+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_SaveConfig","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.597665585+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_SaveConfig","Output":"    config_manager_test.go:292: \n"}
{"Time":"2025-10-04T21:53:53.597941992+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_SaveConfig","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:292\n"}
{"Time":"2025-10-04T21:53:53.597972436+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_SaveConfig","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:53.597989002+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_SaveConfig","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:53.598002431+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_SaveConfig","Output":"        \tTest:       \tTestConfigManager_SaveConfig\n"}
{"Time":"2025-10-04T21:53:53.598578945+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_SaveConfig","Output":"--- FAIL: TestConfigManager_SaveConfig (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.599145798+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_SaveConfig","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.599826635+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration"}
{"Time":"2025-10-04T21:53:53.599889137+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration","Output":"=== RUN   TestConfigManager_ReloadConfiguration\n"}
{"Time":"2025-10-04T21:53:53.599915269+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.601031469+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_RealWorldScenarios/service_with_cleanup_work","Output":"--- PASS: TestStoppable_RealWorldScenarios/service_with_cleanup_work (0.05s)\n"}
{"Time":"2025-10-04T21:53:53.601104778+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_RealWorldScenarios/service_with_cleanup_work","Elapsed":0.05}
{"Time":"2025-10-04T21:53:53.601124891+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_RealWorldScenarios/service_that_ignores_context"}
{"Time":"2025-10-04T21:53:53.601133914+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_RealWorldScenarios/service_that_ignores_context","Output":"=== RUN   TestStoppable_RealWorldScenarios/service_that_ignores_context\n"}
{"Time":"2025-10-04T21:53:53.608284945+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration","Output":"    config_manager_test.go:312: \n"}
{"Time":"2025-10-04T21:53:53.608369346+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:312\n"}
{"Time":"2025-10-04T21:53:53.608386016+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:53.608400017+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:53.608411456+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration","Output":"        \tTest:       \tTestConfigManager_ReloadConfiguration\n"}
{"Time":"2025-10-04T21:53:53.608420992+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration","Output":"        \tMessages:   \tShould load initial configuration\n"}
{"Time":"2025-10-04T21:53:53.608946562+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration","Output":"--- FAIL: TestConfigManager_ReloadConfiguration (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.610235486+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.610311863+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_Stop"}
{"Time":"2025-10-04T21:53:53.610349072+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_Stop","Output":"=== RUN   TestConfigManager_Stop\n"}
{"Time":"2025-10-04T21:53:53.61036596+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_Stop","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.616536927+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_Stop","Output":"    config_manager_test.go:349: \n"}
{"Time":"2025-10-04T21:53:53.616621255+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_Stop","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:349\n"}
{"Time":"2025-10-04T21:53:53.616639553+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_Stop","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:53.616653509+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_Stop","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:53.616666275+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_Stop","Output":"        \tTest:       \tTestConfigManager_Stop\n"}
{"Time":"2025-10-04T21:53:53.616676352+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_Stop","Output":"        \tMessages:   \tShould load configuration with hot reload\n"}
{"Time":"2025-10-04T21:53:53.619612851+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_Stop","Output":"--- FAIL: TestConfigManager_Stop (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.619694239+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_Stop","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.619717609+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_FileWatching"}
{"Time":"2025-10-04T21:53:53.61972813+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_FileWatching","Output":"=== RUN   TestConfigManager_FileWatching\n"}
{"Time":"2025-10-04T21:53:53.61974569+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_FileWatching","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.624057071+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_FileWatching","Output":"    config_manager_test.go:384: \n"}
{"Time":"2025-10-04T21:53:53.624143362+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_FileWatching","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:384\n"}
{"Time":"2025-10-04T21:53:53.624180304+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_FileWatching","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:53.624193386+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_FileWatching","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:53.624232568+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_FileWatching","Output":"        \tTest:       \tTestConfigManager_FileWatching\n"}
{"Time":"2025-10-04T21:53:53.624245912+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_FileWatching","Output":"        \tMessages:   \tShould load configuration with hot reload\n"}
{"Time":"2025-10-04T21:53:53.624808719+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_FileWatching","Output":"--- FAIL: TestConfigManager_FileWatching (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.625255087+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_FileWatching","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.625297269+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown"}
{"Time":"2025-10-04T21:53:53.625312261+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown","Output":"=== RUN   TestConfigManager_ContextAwareShutdown\n"}
{"Time":"2025-10-04T21:53:53.625495568+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/graceful_shutdown_with_context"}
{"Time":"2025-10-04T21:53:53.625514708+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/graceful_shutdown_with_context","Output":"=== RUN   TestConfigManager_ContextAwareShutdown/graceful_shutdown_with_context\n"}
{"Time":"2025-10-04T21:53:53.626262224+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/graceful_shutdown_with_context","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.632109216+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/graceful_shutdown_with_context","Output":"    config_manager_test.go:420: \n"}
{"Time":"2025-10-04T21:53:53.632620185+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/graceful_shutdown_with_context","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:420\n"}
{"Time":"2025-10-04T21:53:53.634563057+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/graceful_shutdown_with_context","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:53.634653701+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/graceful_shutdown_with_context","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:53.634669866+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/graceful_shutdown_with_context","Output":"        \tTest:       \tTestConfigManager_ContextAwareShutdown/graceful_shutdown_with_context\n"}
{"Time":"2025-10-04T21:53:53.634680139+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/graceful_shutdown_with_context","Output":"        \tMessages:   \tConfig should load successfully\n"}
{"Time":"2025-10-04T21:53:53.63471578+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/graceful_shutdown_with_context","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Stopping configuration manager\"\n"}
{"Time":"2025-10-04T21:53:53.63472949+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/graceful_shutdown_with_context","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Configuration manager stopped\"\n"}
{"Time":"2025-10-04T21:53:53.634750462+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/graceful_shutdown_with_context","Output":"--- FAIL: TestConfigManager_ContextAwareShutdown/graceful_shutdown_with_context (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.634761867+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/graceful_shutdown_with_context","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.634777869+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/shutdown_with_cancelled_context"}
{"Time":"2025-10-04T21:53:53.63478689+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/shutdown_with_cancelled_context","Output":"=== RUN   TestConfigManager_ContextAwareShutdown/shutdown_with_cancelled_context\n"}
{"Time":"2025-10-04T21:53:53.634795736+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/shutdown_with_cancelled_context","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.651814602+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/shutdown_with_cancelled_context","Output":"    config_manager_test.go:446: \n"}
{"Time":"2025-10-04T21:53:53.651901336+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/shutdown_with_cancelled_context","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:446\n"}
{"Time":"2025-10-04T21:53:53.651936894+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/shutdown_with_cancelled_context","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:53.651950446+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/shutdown_with_cancelled_context","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:53.651961892+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/shutdown_with_cancelled_context","Output":"        \tTest:       \tTestConfigManager_ContextAwareShutdown/shutdown_with_cancelled_context\n"}
{"Time":"2025-10-04T21:53:53.651971226+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/shutdown_with_cancelled_context","Output":"        \tMessages:   \tConfig should load successfully\n"}
{"Time":"2025-10-04T21:53:53.651980944+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/shutdown_with_cancelled_context","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Stopping configuration manager\"\n"}
{"Time":"2025-10-04T21:53:53.651996946+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/shutdown_with_cancelled_context","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Configuration manager stopped\"\n"}
{"Time":"2025-10-04T21:53:53.652021563+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/shutdown_with_cancelled_context","Output":"--- FAIL: TestConfigManager_ContextAwareShutdown/shutdown_with_cancelled_context (0.02s)\n"}
{"Time":"2025-10-04T21:53:53.652032836+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/shutdown_with_cancelled_context","Elapsed":0.02}
{"Time":"2025-10-04T21:53:53.652049601+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/shutdown_timeout_handling"}
{"Time":"2025-10-04T21:53:53.652059697+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/shutdown_timeout_handling","Output":"=== RUN   TestConfigManager_ContextAwareShutdown/shutdown_timeout_handling\n"}
{"Time":"2025-10-04T21:53:53.652069039+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/shutdown_timeout_handling","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.65273392+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_RealWorldScenarios/service_that_ignores_context","Output":"--- PASS: TestStoppable_RealWorldScenarios/service_that_ignores_context (0.05s)\n"}
{"Time":"2025-10-04T21:53:53.652790201+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_RealWorldScenarios/service_that_ignores_context","Elapsed":0.05}
{"Time":"2025-10-04T21:53:53.652826763+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_RealWorldScenarios","Output":"--- PASS: TestStoppable_RealWorldScenarios (0.10s)\n"}
{"Time":"2025-10-04T21:53:53.652846469+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStoppable_RealWorldScenarios","Elapsed":0.1}
{"Time":"2025-10-04T21:53:53.652859952+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStopWithTimeout"}
{"Time":"2025-10-04T21:53:53.65287886+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStopWithTimeout","Output":"=== RUN   TestStopWithTimeout\n"}
{"Time":"2025-10-04T21:53:53.652892938+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStopWithTimeout/successful_stop_with_timeout"}
{"Time":"2025-10-04T21:53:53.652902581+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStopWithTimeout/successful_stop_with_timeout","Output":"=== RUN   TestStopWithTimeout/successful_stop_with_timeout\n"}
{"Time":"2025-10-04T21:53:53.652915031+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStopWithTimeout/successful_stop_with_timeout","Output":"--- PASS: TestStopWithTimeout/successful_stop_with_timeout (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.652927286+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStopWithTimeout/successful_stop_with_timeout","Elapsed":0}
{"Time":"2025-10-04T21:53:53.652939043+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStopWithTimeout/stop_with_timeout_error"}
{"Time":"2025-10-04T21:53:53.65294885+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStopWithTimeout/stop_with_timeout_error","Output":"=== RUN   TestStopWithTimeout/stop_with_timeout_error\n"}
{"Time":"2025-10-04T21:53:53.652961273+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStopWithTimeout/stop_with_timeout_error","Output":"--- PASS: TestStopWithTimeout/stop_with_timeout_error (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.652973184+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStopWithTimeout/stop_with_timeout_error","Elapsed":0}
{"Time":"2025-10-04T21:53:53.652992952+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStopWithTimeout/stop_with_timeout_exceeds"}
{"Time":"2025-10-04T21:53:53.653003448+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStopWithTimeout/stop_with_timeout_exceeds","Output":"=== RUN   TestStopWithTimeout/stop_with_timeout_exceeds\n"}
{"Time":"2025-10-04T21:53:53.662869794+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/shutdown_timeout_handling","Output":"    config_manager_test.go:475: \n"}
{"Time":"2025-10-04T21:53:53.662957392+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/shutdown_timeout_handling","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:475\n"}
{"Time":"2025-10-04T21:53:53.662973963+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/shutdown_timeout_handling","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:53.663005558+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/shutdown_timeout_handling","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:53.66302059+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/shutdown_timeout_handling","Output":"        \tTest:       \tTestConfigManager_ContextAwareShutdown/shutdown_timeout_handling\n"}
{"Time":"2025-10-04T21:53:53.663032156+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/shutdown_timeout_handling","Output":"        \tMessages:   \tConfig should load successfully\n"}
{"Time":"2025-10-04T21:53:53.663042673+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/shutdown_timeout_handling","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Stopping configuration manager\"\n"}
{"Time":"2025-10-04T21:53:53.66385736+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/shutdown_timeout_handling","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Configuration manager stopped\"\n"}
{"Time":"2025-10-04T21:53:53.663994778+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/shutdown_timeout_handling","Output":"--- FAIL: TestConfigManager_ContextAwareShutdown/shutdown_timeout_handling (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.664085951+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/shutdown_timeout_handling","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.66418385+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/double_stop_handling"}
{"Time":"2025-10-04T21:53:53.664201342+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/double_stop_handling","Output":"=== RUN   TestConfigManager_ContextAwareShutdown/double_stop_handling\n"}
{"Time":"2025-10-04T21:53:53.666811302+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/double_stop_handling","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.676740107+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/double_stop_handling","Output":"    config_manager_test.go:500: \n"}
{"Time":"2025-10-04T21:53:53.67682551+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/double_stop_handling","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:500\n"}
{"Time":"2025-10-04T21:53:53.67686348+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/double_stop_handling","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:53.676878888+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/double_stop_handling","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:53.676893285+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/double_stop_handling","Output":"        \tTest:       \tTestConfigManager_ContextAwareShutdown/double_stop_handling\n"}
{"Time":"2025-10-04T21:53:53.676926516+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/double_stop_handling","Output":"        \tMessages:   \tConfig should load successfully\n"}
{"Time":"2025-10-04T21:53:53.676950296+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/double_stop_handling","Output":"--- FAIL: TestConfigManager_ContextAwareShutdown/double_stop_handling (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.676962909+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/double_stop_handling","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.677027604+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/stop_without_load"}
{"Time":"2025-10-04T21:53:53.677041104+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/stop_without_load","Output":"=== RUN   TestConfigManager_ContextAwareShutdown/stop_without_load\n"}
{"Time":"2025-10-04T21:53:53.6770519+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/stop_without_load","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Stopping configuration manager\"\n"}
{"Time":"2025-10-04T21:53:53.677062541+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/stop_without_load","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Configuration manager stopped\"\n"}
{"Time":"2025-10-04T21:53:53.677076538+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/stop_without_load","Output":"--- PASS: TestConfigManager_ContextAwareShutdown/stop_without_load (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.677089347+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown/stop_without_load","Elapsed":0}
{"Time":"2025-10-04T21:53:53.677102182+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown","Output":"--- FAIL: TestConfigManager_ContextAwareShutdown (0.05s)\n"}
{"Time":"2025-10-04T21:53:53.677113093+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ContextAwareShutdown","Elapsed":0.05}
{"Time":"2025-10-04T21:53:53.677133263+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_GetLogger"}
{"Time":"2025-10-04T21:53:53.677143609+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_GetLogger","Output":"=== RUN   TestConfigManager_GetLogger\n"}
{"Time":"2025-10-04T21:53:53.677154994+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_GetLogger/get_logger_returns_valid_logger"}
{"Time":"2025-10-04T21:53:53.677165379+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_GetLogger/get_logger_returns_valid_logger","Output":"=== RUN   TestConfigManager_GetLogger/get_logger_returns_valid_logger\n"}
{"Time":"2025-10-04T21:53:53.677177751+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_GetLogger/get_logger_returns_valid_logger","Output":"--- PASS: TestConfigManager_GetLogger/get_logger_returns_valid_logger (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.677190549+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_GetLogger/get_logger_returns_valid_logger","Elapsed":0}
{"Time":"2025-10-04T21:53:53.67720611+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_GetLogger/get_logger_returns_same_instance"}
{"Time":"2025-10-04T21:53:53.677239351+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_GetLogger/get_logger_returns_same_instance","Output":"=== RUN   TestConfigManager_GetLogger/get_logger_returns_same_instance\n"}
{"Time":"2025-10-04T21:53:53.677255089+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_GetLogger/get_logger_returns_same_instance","Output":"--- PASS: TestConfigManager_GetLogger/get_logger_returns_same_instance (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.677266457+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_GetLogger/get_logger_returns_same_instance","Elapsed":0}
{"Time":"2025-10-04T21:53:53.677276663+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_GetLogger/get_logger_works_without_config_loaded"}
{"Time":"2025-10-04T21:53:53.677285536+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_GetLogger/get_logger_works_without_config_loaded","Output":"=== RUN   TestConfigManager_GetLogger/get_logger_works_without_config_loaded\n"}
{"Time":"2025-10-04T21:53:53.677296505+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_GetLogger/get_logger_works_without_config_loaded","Output":"--- PASS: TestConfigManager_GetLogger/get_logger_works_without_config_loaded (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.677307228+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_GetLogger/get_logger_works_without_config_loaded","Elapsed":0}
{"Time":"2025-10-04T21:53:53.677318809+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_GetLogger/get_logger_works_after_config_loaded"}
{"Time":"2025-10-04T21:53:53.677328874+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_GetLogger/get_logger_works_after_config_loaded","Output":"=== RUN   TestConfigManager_GetLogger/get_logger_works_after_config_loaded\n"}
{"Time":"2025-10-04T21:53:53.677347441+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_GetLogger/get_logger_works_after_config_loaded","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.691328972+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_GetLogger/get_logger_works_after_config_loaded","Output":"    config_manager_test.go:577: \n"}
{"Time":"2025-10-04T21:53:53.691418035+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_GetLogger/get_logger_works_after_config_loaded","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:577\n"}
{"Time":"2025-10-04T21:53:53.69143388+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_GetLogger/get_logger_works_after_config_loaded","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:53.691445154+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_GetLogger/get_logger_works_after_config_loaded","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:53.691458514+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_GetLogger/get_logger_works_after_config_loaded","Output":"        \tTest:       \tTestConfigManager_GetLogger/get_logger_works_after_config_loaded\n"}
{"Time":"2025-10-04T21:53:53.691469155+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_GetLogger/get_logger_works_after_config_loaded","Output":"        \tMessages:   \tConfig should load successfully\n"}
{"Time":"2025-10-04T21:53:53.691490395+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_GetLogger/get_logger_works_after_config_loaded","Output":"--- FAIL: TestConfigManager_GetLogger/get_logger_works_after_config_loaded (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.691504422+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_GetLogger/get_logger_works_after_config_loaded","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.691522966+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_GetLogger","Output":"--- FAIL: TestConfigManager_GetLogger (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.691534594+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_GetLogger","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.691546838+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases"}
{"Time":"2025-10-04T21:53:53.691561386+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_EdgeCases\n"}
{"Time":"2025-10-04T21:53:53.691593934+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_host_empty"}
{"Time":"2025-10-04T21:53:53.691616393+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_host_empty","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_host_empty\n"}
{"Time":"2025-10-04T21:53:53.691628232+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_host_empty","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.705317565+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStopWithTimeout/stop_with_timeout_exceeds","Output":"--- PASS: TestStopWithTimeout/stop_with_timeout_exceeds (0.05s)\n"}
{"Time":"2025-10-04T21:53:53.705407276+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStopWithTimeout/stop_with_timeout_exceeds","Elapsed":0.05}
{"Time":"2025-10-04T21:53:53.70543097+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStopWithTimeout","Output":"--- PASS: TestStopWithTimeout (0.05s)\n"}
{"Time":"2025-10-04T21:53:53.705445561+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Test":"TestStopWithTimeout","Elapsed":0.05}
{"Time":"2025-10-04T21:53:53.705457354+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Output":"PASS\n"}
{"Time":"2025-10-04T21:53:53.708736821+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_host_empty","Output":"--- PASS: TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_host_empty (0.02s)\n"}
{"Time":"2025-10-04T21:53:53.709105752+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_host_empty","Elapsed":0.02}
{"Time":"2025-10-04T21:53:53.709400708+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_host_whitespace_only"}
{"Time":"2025-10-04T21:53:53.709438995+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_host_whitespace_only","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_host_whitespace_only\n"}
{"Time":"2025-10-04T21:53:53.711615862+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_host_whitespace_only","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.71801747+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Output":"coverage: 0.0% of statements in ./...\n"}
{"Time":"2025-10-04T21:53:53.719134162+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_host_whitespace_only","Output":"--- PASS: TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_host_whitespace_only (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.719194531+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_host_whitespace_only","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.719255557+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_zero"}
{"Time":"2025-10-04T21:53:53.719270474+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_zero","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_zero\n"}
{"Time":"2025-10-04T21:53:53.723275347+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_zero","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.729938555+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_zero","Output":"--- PASS: TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_zero (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.735304481+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_zero","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.735396166+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_negative"}
{"Time":"2025-10-04T21:53:53.735413141+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_negative","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_negative\n"}
{"Time":"2025-10-04T21:53:53.735428903+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_negative","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.741296828+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_negative","Output":"--- PASS: TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_negative (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.742128758+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_negative","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.74249023+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_exceeds_max"}
{"Time":"2025-10-04T21:53:53.74253648+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_exceeds_max","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_exceeds_max\n"}
{"Time":"2025-10-04T21:53:53.747322877+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_exceeds_max","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.754260915+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_exceeds_max","Output":"--- PASS: TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_exceeds_max (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.754365221+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_exceeds_max","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.754391747+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_boundary_min"}
{"Time":"2025-10-04T21:53:53.754404806+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_boundary_min","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_boundary_min\n"}
{"Time":"2025-10-04T21:53:53.75442796+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_boundary_min","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.763374766+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_boundary_min","Output":"    config_manager_test.go:912: \n"}
{"Time":"2025-10-04T21:53:53.763463512+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_boundary_min","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:912\n"}
{"Time":"2025-10-04T21:53:53.763480716+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_boundary_min","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:53.763494137+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_boundary_min","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:53.76350907+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_boundary_min","Output":"        \tTest:       \tTestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_boundary_min\n"}
{"Time":"2025-10-04T21:53:53.763520692+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_boundary_min","Output":"        \tMessages:   \tShould pass when server port is minimum valid value\n"}
{"Time":"2025-10-04T21:53:53.767967027+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_boundary_min","Output":"--- FAIL: TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_boundary_min (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.768050445+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_boundary_min","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.768093965+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_boundary_max"}
{"Time":"2025-10-04T21:53:53.768107956+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_boundary_max","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_boundary_max\n"}
{"Time":"2025-10-04T21:53:53.768119819+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_boundary_max","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.780284684+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_boundary_max","Output":"    config_manager_test.go:912: \n"}
{"Time":"2025-10-04T21:53:53.780372156+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_boundary_max","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:912\n"}
{"Time":"2025-10-04T21:53:53.780389644+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_boundary_max","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:53.780401581+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_boundary_max","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:53.780413351+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_boundary_max","Output":"        \tTest:       \tTestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_boundary_max\n"}
{"Time":"2025-10-04T21:53:53.780423195+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_boundary_max","Output":"        \tMessages:   \tShould pass when server port is maximum valid value\n"}
{"Time":"2025-10-04T21:53:53.78044361+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_boundary_max","Output":"--- FAIL: TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_boundary_max (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.780455684+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/server_port_boundary_max","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.780472307+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/mediamtx_host_empty"}
{"Time":"2025-10-04T21:53:53.780502965+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/mediamtx_host_empty","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_EdgeCases/mediamtx_host_empty\n"}
{"Time":"2025-10-04T21:53:53.780518074+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/mediamtx_host_empty","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.785449949+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/mediamtx_host_empty","Output":"    config_manager_test.go:909: \n"}
{"Time":"2025-10-04T21:53:53.785506044+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/mediamtx_host_empty","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:909\n"}
{"Time":"2025-10-04T21:53:53.785528543+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/mediamtx_host_empty","Output":"        \tError:      \t\"configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\" does not contain \"MediaMTX host cannot be empty or whitespace-only\"\n"}
{"Time":"2025-10-04T21:53:53.785545413+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/mediamtx_host_empty","Output":"        \tTest:       \tTestConfigManager_ValidateFinalConfiguration_EdgeCases/mediamtx_host_empty\n"}
{"Time":"2025-10-04T21:53:53.785555319+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/mediamtx_host_empty","Output":"        \tMessages:   \tError message should contain expected text\n"}
{"Time":"2025-10-04T21:53:53.785669574+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/mediamtx_host_empty","Output":"--- FAIL: TestConfigManager_ValidateFinalConfiguration_EdgeCases/mediamtx_host_empty (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.785764933+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/mediamtx_host_empty","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.78585947+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/mediamtx_api_port_zero"}
{"Time":"2025-10-04T21:53:53.785876377+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/mediamtx_api_port_zero","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_EdgeCases/mediamtx_api_port_zero\n"}
{"Time":"2025-10-04T21:53:53.786244315+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/mediamtx_api_port_zero","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.788856454+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Output":"ok  \tgithub.com/camerarecorder/mediamtx-camera-service-go/internal/common\t0.445s\tcoverage: 0.0% of statements in ./...\n"}
{"Time":"2025-10-04T21:53:53.789561529+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/common","Elapsed":0.452}
{"Time":"2025-10-04T21:53:53.79100342+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/mediamtx_api_port_zero","Output":"--- PASS: TestConfigManager_ValidateFinalConfiguration_EdgeCases/mediamtx_api_port_zero (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.791169979+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/mediamtx_api_port_zero","Elapsed":0}
{"Time":"2025-10-04T21:53:53.791279506+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/mediamtx_config_path_empty"}
{"Time":"2025-10-04T21:53:53.79129585+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/mediamtx_config_path_empty","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_EdgeCases/mediamtx_config_path_empty\n"}
{"Time":"2025-10-04T21:53:53.791629925+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/mediamtx_config_path_empty","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.793365719+04:00","Action":"start","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/constants"}
{"Time":"2025-10-04T21:53:53.799353027+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/mediamtx_config_path_empty","Output":"    config_manager_test.go:909: \n"}
{"Time":"2025-10-04T21:53:53.799442331+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/mediamtx_config_path_empty","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:909\n"}
{"Time":"2025-10-04T21:53:53.799460861+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/mediamtx_config_path_empty","Output":"        \tError:      \t\"configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\" does not contain \"MediaMTX config path cannot be empty or whitespace-only\"\n"}
{"Time":"2025-10-04T21:53:53.799488724+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/mediamtx_config_path_empty","Output":"        \tTest:       \tTestConfigManager_ValidateFinalConfiguration_EdgeCases/mediamtx_config_path_empty\n"}
{"Time":"2025-10-04T21:53:53.799519383+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/mediamtx_config_path_empty","Output":"        \tMessages:   \tError message should contain expected text\n"}
{"Time":"2025-10-04T21:53:53.801382166+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/mediamtx_config_path_empty","Output":"--- FAIL: TestConfigManager_ValidateFinalConfiguration_EdgeCases/mediamtx_config_path_empty (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.801565949+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/mediamtx_config_path_empty","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.801686346+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/camera_poll_interval_zero"}
{"Time":"2025-10-04T21:53:53.801705082+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/camera_poll_interval_zero","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_EdgeCases/camera_poll_interval_zero\n"}
{"Time":"2025-10-04T21:53:53.802106522+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/camera_poll_interval_zero","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.807327202+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/constants","Test":"TestAPIConstants"}
{"Time":"2025-10-04T21:53:53.80742422+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/constants","Test":"TestAPIConstants","Output":"=== RUN   TestAPIConstants\n"}
{"Time":"2025-10-04T21:53:53.807511866+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/constants","Test":"TestAPIConstants","Output":"    api_constants_test.go:15: \n"}
{"Time":"2025-10-04T21:53:53.80752417+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/constants","Test":"TestAPIConstants","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/constants/api_constants_test.go:15\n"}
{"Time":"2025-10-04T21:53:53.807534713+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/constants","Test":"TestAPIConstants","Output":"        \tError:      \tNot equal: \n"}
{"Time":"2025-10-04T21:53:53.807544345+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/constants","Test":"TestAPIConstants","Output":"        \t            \texpected: -32004\n"}
{"Time":"2025-10-04T21:53:53.807554045+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/constants","Test":"TestAPIConstants","Output":"        \t            \tactual  : -32010\n"}
{"Time":"2025-10-04T21:53:53.807563511+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/constants","Test":"TestAPIConstants","Output":"        \tTest:       \tTestAPIConstants\n"}
{"Time":"2025-10-04T21:53:53.807572668+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/constants","Test":"TestAPIConstants","Output":"        \tMessages:   \tCamera not found error code should match API documentation\n"}
{"Time":"2025-10-04T21:53:53.80758982+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/constants","Test":"TestAPIConstants","Output":"--- FAIL: TestAPIConstants (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.80762831+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/constants","Test":"TestAPIConstants","Elapsed":0}
{"Time":"2025-10-04T21:53:53.807645123+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/constants","Test":"TestAPIErrorMessages"}
{"Time":"2025-10-04T21:53:53.807655079+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/constants","Test":"TestAPIErrorMessages","Output":"=== RUN   TestAPIErrorMessages\n"}
{"Time":"2025-10-04T21:53:53.807667804+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/constants","Test":"TestAPIErrorMessages","Output":"--- PASS: TestAPIErrorMessages (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.807679737+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/constants","Test":"TestAPIErrorMessages","Elapsed":0}
{"Time":"2025-10-04T21:53:53.807691166+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/constants","Test":"TestValidationHelpers"}
{"Time":"2025-10-04T21:53:53.807701408+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/constants","Test":"TestValidationHelpers","Output":"=== RUN   TestValidationHelpers\n"}
{"Time":"2025-10-04T21:53:53.807713351+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/constants","Test":"TestValidationHelpers","Output":"--- PASS: TestValidationHelpers (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.807725256+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/constants","Test":"TestValidationHelpers","Elapsed":0}
{"Time":"2025-10-04T21:53:53.807736016+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/constants","Output":"FAIL\n"}
{"Time":"2025-10-04T21:53:53.818421557+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/camera_poll_interval_zero","Output":"    config_manager_test.go:909: \n"}
{"Time":"2025-10-04T21:53:53.818509347+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/camera_poll_interval_zero","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:909\n"}
{"Time":"2025-10-04T21:53:53.818527584+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/camera_poll_interval_zero","Output":"        \tError:      \t\"configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\" does not contain \"camera poll interval must be positive, got 0.000000\"\n"}
{"Time":"2025-10-04T21:53:53.818552624+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/camera_poll_interval_zero","Output":"        \tTest:       \tTestConfigManager_ValidateFinalConfiguration_EdgeCases/camera_poll_interval_zero\n"}
{"Time":"2025-10-04T21:53:53.81856552+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/camera_poll_interval_zero","Output":"        \tMessages:   \tError message should contain expected text\n"}
{"Time":"2025-10-04T21:53:53.818610819+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/camera_poll_interval_zero","Output":"--- FAIL: TestConfigManager_ValidateFinalConfiguration_EdgeCases/camera_poll_interval_zero (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.818628359+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/camera_poll_interval_zero","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.81864959+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/camera_poll_interval_negative"}
{"Time":"2025-10-04T21:53:53.818666071+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/camera_poll_interval_negative","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_EdgeCases/camera_poll_interval_negative\n"}
{"Time":"2025-10-04T21:53:53.818678296+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/camera_poll_interval_negative","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.82433602+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/constants","Output":"coverage: 0.1% of statements in ./...\n"}
{"Time":"2025-10-04T21:53:53.828200638+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/camera_poll_interval_negative","Output":"    config_manager_test.go:909: \n"}
{"Time":"2025-10-04T21:53:53.828318873+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/camera_poll_interval_negative","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:909\n"}
{"Time":"2025-10-04T21:53:53.828363172+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/camera_poll_interval_negative","Output":"        \tError:      \t\"configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\" does not contain \"camera poll interval must be positive, got -1.000000\"\n"}
{"Time":"2025-10-04T21:53:53.82837689+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/camera_poll_interval_negative","Output":"        \tTest:       \tTestConfigManager_ValidateFinalConfiguration_EdgeCases/camera_poll_interval_negative\n"}
{"Time":"2025-10-04T21:53:53.82838614+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/camera_poll_interval_negative","Output":"        \tMessages:   \tError message should contain expected text\n"}
{"Time":"2025-10-04T21:53:53.828499788+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_RaceConditionDetection","Output":"time=\"2025-10-04 21:53:53\" level=warning msg=\"Task timed out in worker pool\"\n"}
{"Time":"2025-10-04T21:53:53.828633157+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/camera_poll_interval_negative","Output":"--- FAIL: TestConfigManager_ValidateFinalConfiguration_EdgeCases/camera_poll_interval_negative (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.831332568+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/camera_poll_interval_negative","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.831420094+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/camera_capability_max_retries_negative"}
{"Time":"2025-10-04T21:53:53.831446151+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/camera_capability_max_retries_negative","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_EdgeCases/camera_capability_max_retries_negative\n"}
{"Time":"2025-10-04T21:53:53.83146268+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/camera_capability_max_retries_negative","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.836703483+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/camera_capability_max_retries_negative","Output":"--- PASS: TestConfigManager_ValidateFinalConfiguration_EdgeCases/camera_capability_max_retries_negative (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.838938966+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/camera_capability_max_retries_negative","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.841291583+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_level_invalid"}
{"Time":"2025-10-04T21:53:53.841368471+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_level_invalid","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_level_invalid\n"}
{"Time":"2025-10-04T21:53:53.841387399+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_level_invalid","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.851312531+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_level_invalid","Output":"    config_manager_test.go:909: \n"}
{"Time":"2025-10-04T21:53:53.851406632+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_level_invalid","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:909\n"}
{"Time":"2025-10-04T21:53:53.851428019+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_level_invalid","Output":"        \tError:      \t\"configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\" does not contain \"logging level must be one of:\"\n"}
{"Time":"2025-10-04T21:53:53.851462075+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_level_invalid","Output":"        \tTest:       \tTestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_level_invalid\n"}
{"Time":"2025-10-04T21:53:53.85147772+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_level_invalid","Output":"        \tMessages:   \tError message should contain expected text\n"}
{"Time":"2025-10-04T21:53:53.851499296+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_level_invalid","Output":"--- FAIL: TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_level_invalid (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.851512929+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_level_invalid","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.85152982+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_level_case_insensitive"}
{"Time":"2025-10-04T21:53:53.851540615+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_level_case_insensitive","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_level_case_insensitive\n"}
{"Time":"2025-10-04T21:53:53.851551166+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_level_case_insensitive","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.860230939+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_level_case_insensitive","Output":"    config_manager_test.go:912: \n"}
{"Time":"2025-10-04T21:53:53.860510782+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_level_case_insensitive","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:912\n"}
{"Time":"2025-10-04T21:53:53.860670329+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_level_case_insensitive","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:53.86069833+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_level_case_insensitive","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:53.860731605+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_level_case_insensitive","Output":"        \tTest:       \tTestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_level_case_insensitive\n"}
{"Time":"2025-10-04T21:53:53.860745244+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_level_case_insensitive","Output":"        \tMessages:   \tShould pass when logging level is uppercase (case insensitive)\n"}
{"Time":"2025-10-04T21:53:53.86077413+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_level_case_insensitive","Output":"--- FAIL: TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_level_case_insensitive (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.86328136+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_level_case_insensitive","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.863366916+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_format_empty"}
{"Time":"2025-10-04T21:53:53.863382659+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_format_empty","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_format_empty\n"}
{"Time":"2025-10-04T21:53:53.863395729+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_format_empty","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.867453086+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_RaceConditionDetection","Output":"time=\"2025-10-04 21:53:53\" level=warning msg=\"Task timed out in worker pool\"\n"}
{"Time":"2025-10-04T21:53:53.872506391+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_format_empty","Output":"    config_manager_test.go:909: \n"}
{"Time":"2025-10-04T21:53:53.872583542+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_format_empty","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:909\n"}
{"Time":"2025-10-04T21:53:53.872600888+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_format_empty","Output":"        \tError:      \t\"configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\" does not contain \"logging format cannot be empty or whitespace-only\"\n"}
{"Time":"2025-10-04T21:53:53.872624256+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_format_empty","Output":"        \tTest:       \tTestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_format_empty\n"}
{"Time":"2025-10-04T21:53:53.872659301+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_format_empty","Output":"        \tMessages:   \tError message should contain expected text\n"}
{"Time":"2025-10-04T21:53:53.872683206+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_format_empty","Output":"--- FAIL: TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_format_empty (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.872703021+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_format_empty","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.873002589+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_file_enabled_no_path"}
{"Time":"2025-10-04T21:53:53.873022595+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_file_enabled_no_path","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_file_enabled_no_path\n"}
{"Time":"2025-10-04T21:53:53.87382736+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_file_enabled_no_path","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.876525072+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/constants","Output":"FAIL\tgithub.com/camerarecorder/mediamtx-camera-service-go/internal/constants\t0.078s\n"}
{"Time":"2025-10-04T21:53:53.876592093+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/constants","Elapsed":0.083}
{"Time":"2025-10-04T21:53:53.878419688+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_RaceConditionDetection","Output":"time=\"2025-10-04 21:53:53\" level=warning msg=\"Task timed out in worker pool\"\n"}
{"Time":"2025-10-04T21:53:53.878742975+04:00","Action":"start","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health"}
{"Time":"2025-10-04T21:53:53.87909578+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_file_enabled_no_path","Output":"--- PASS: TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_file_enabled_no_path (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.879131491+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/logging_file_enabled_no_path","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.879154981+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/recording_format_empty"}
{"Time":"2025-10-04T21:53:53.879166168+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/recording_format_empty","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_EdgeCases/recording_format_empty\n"}
{"Time":"2025-10-04T21:53:53.879566086+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/recording_format_empty","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.885842084+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestNewHTTPHealthServer"}
{"Time":"2025-10-04T21:53:53.886480899+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestNewHTTPHealthServer","Output":"=== RUN   TestNewHTTPHealthServer\n"}
{"Time":"2025-10-04T21:53:53.886587415+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestNewHTTPHealthServer/valid_configuration"}
{"Time":"2025-10-04T21:53:53.886601569+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestNewHTTPHealthServer/valid_configuration","Output":"=== RUN   TestNewHTTPHealthServer/valid_configuration\n"}
{"Time":"2025-10-04T21:53:53.88931303+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/recording_format_empty","Output":"--- PASS: TestConfigManager_ValidateFinalConfiguration_EdgeCases/recording_format_empty (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.889394155+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/recording_format_empty","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.889416055+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/recording_segment_duration_negative"}
{"Time":"2025-10-04T21:53:53.889427045+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/recording_segment_duration_negative","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_EdgeCases/recording_segment_duration_negative\n"}
{"Time":"2025-10-04T21:53:53.889437824+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/recording_segment_duration_negative","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.889463658+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestNewHTTPHealthServer/valid_configuration","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"HTTP Health Server initialized\"\n"}
{"Time":"2025-10-04T21:53:53.889479451+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestNewHTTPHealthServer/valid_configuration","Output":"--- PASS: TestNewHTTPHealthServer/valid_configuration (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.889491138+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestNewHTTPHealthServer/valid_configuration","Elapsed":0}
{"Time":"2025-10-04T21:53:53.889502531+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestNewHTTPHealthServer/nil_configuration"}
{"Time":"2025-10-04T21:53:53.889511694+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestNewHTTPHealthServer/nil_configuration","Output":"=== RUN   TestNewHTTPHealthServer/nil_configuration\n"}
{"Time":"2025-10-04T21:53:53.889543131+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestNewHTTPHealthServer/nil_configuration","Output":"--- PASS: TestNewHTTPHealthServer/nil_configuration (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.889555493+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestNewHTTPHealthServer/nil_configuration","Elapsed":0}
{"Time":"2025-10-04T21:53:53.889566251+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestNewHTTPHealthServer/nil_health_API"}
{"Time":"2025-10-04T21:53:53.88957588+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestNewHTTPHealthServer/nil_health_API","Output":"=== RUN   TestNewHTTPHealthServer/nil_health_API\n"}
{"Time":"2025-10-04T21:53:53.889587229+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestNewHTTPHealthServer/nil_health_API","Output":"--- PASS: TestNewHTTPHealthServer/nil_health_API (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.889599714+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestNewHTTPHealthServer/nil_health_API","Elapsed":0}
{"Time":"2025-10-04T21:53:53.889611981+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestNewHTTPHealthServer/nil_logger"}
{"Time":"2025-10-04T21:53:53.889621345+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestNewHTTPHealthServer/nil_logger","Output":"=== RUN   TestNewHTTPHealthServer/nil_logger\n"}
{"Time":"2025-10-04T21:53:53.889632917+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestNewHTTPHealthServer/nil_logger","Output":"--- PASS: TestNewHTTPHealthServer/nil_logger (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.889644556+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestNewHTTPHealthServer/nil_logger","Elapsed":0}
{"Time":"2025-10-04T21:53:53.889655885+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestNewHTTPHealthServer/invalid_timeout"}
{"Time":"2025-10-04T21:53:53.889665199+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestNewHTTPHealthServer/invalid_timeout","Output":"=== RUN   TestNewHTTPHealthServer/invalid_timeout\n"}
{"Time":"2025-10-04T21:53:53.889677283+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestNewHTTPHealthServer/invalid_timeout","Output":"--- PASS: TestNewHTTPHealthServer/invalid_timeout (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.889688184+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestNewHTTPHealthServer/invalid_timeout","Elapsed":0}
{"Time":"2025-10-04T21:53:53.889699222+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestNewHTTPHealthServer","Output":"--- PASS: TestNewHTTPHealthServer (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.88971014+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestNewHTTPHealthServer","Elapsed":0}
{"Time":"2025-10-04T21:53:53.889720321+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleBasicHealth"}
{"Time":"2025-10-04T21:53:53.889729049+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleBasicHealth","Output":"=== RUN   TestHTTPHealthServer_handleBasicHealth\n"}
{"Time":"2025-10-04T21:53:53.889748477+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleBasicHealth/successful_health_check"}
{"Time":"2025-10-04T21:53:53.889759025+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleBasicHealth/successful_health_check","Output":"=== RUN   TestHTTPHealthServer_handleBasicHealth/successful_health_check\n"}
{"Time":"2025-10-04T21:53:53.889769718+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleBasicHealth/successful_health_check","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"HTTP Health Server initialized\"\n"}
{"Time":"2025-10-04T21:53:53.889782386+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleBasicHealth/successful_health_check","Output":"--- PASS: TestHTTPHealthServer_handleBasicHealth/successful_health_check (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.889793529+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleBasicHealth/successful_health_check","Elapsed":0}
{"Time":"2025-10-04T21:53:53.889803797+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleBasicHealth/health_API_error"}
{"Time":"2025-10-04T21:53:53.889812687+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleBasicHealth/health_API_error","Output":"=== RUN   TestHTTPHealthServer_handleBasicHealth/health_API_error\n"}
{"Time":"2025-10-04T21:53:53.8898222+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleBasicHealth/health_API_error","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"HTTP Health Server initialized\"\n"}
{"Time":"2025-10-04T21:53:53.889832442+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleBasicHealth/health_API_error","Output":"time=\"2025-10-04 21:53:53\" level=error msg=\"Failed to get health status\"\n"}
{"Time":"2025-10-04T21:53:53.889843991+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleBasicHealth/health_API_error","Output":"--- PASS: TestHTTPHealthServer_handleBasicHealth/health_API_error (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.889854703+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleBasicHealth/health_API_error","Elapsed":0}
{"Time":"2025-10-04T21:53:53.889865831+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleBasicHealth","Output":"--- PASS: TestHTTPHealthServer_handleBasicHealth (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.889876614+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleBasicHealth","Elapsed":0}
{"Time":"2025-10-04T21:53:53.889886478+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleDetailedHealth"}
{"Time":"2025-10-04T21:53:53.88989507+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleDetailedHealth","Output":"=== RUN   TestHTTPHealthServer_handleDetailedHealth\n"}
{"Time":"2025-10-04T21:53:53.889905165+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleDetailedHealth/successful_detailed_health_check"}
{"Time":"2025-10-04T21:53:53.88992172+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleDetailedHealth/successful_detailed_health_check","Output":"=== RUN   TestHTTPHealthServer_handleDetailedHealth/successful_detailed_health_check\n"}
{"Time":"2025-10-04T21:53:53.889932654+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleDetailedHealth/successful_detailed_health_check","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"HTTP Health Server initialized\"\n"}
{"Time":"2025-10-04T21:53:53.889945054+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleDetailedHealth/successful_detailed_health_check","Output":"--- PASS: TestHTTPHealthServer_handleDetailedHealth/successful_detailed_health_check (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.889965848+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleDetailedHealth/successful_detailed_health_check","Elapsed":0}
{"Time":"2025-10-04T21:53:53.889977199+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleDetailedHealth/detailed_health_API_error"}
{"Time":"2025-10-04T21:53:53.889986433+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleDetailedHealth/detailed_health_API_error","Output":"=== RUN   TestHTTPHealthServer_handleDetailedHealth/detailed_health_API_error\n"}
{"Time":"2025-10-04T21:53:53.889997182+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleDetailedHealth/detailed_health_API_error","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"HTTP Health Server initialized\"\n"}
{"Time":"2025-10-04T21:53:53.890008108+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleDetailedHealth/detailed_health_API_error","Output":"time=\"2025-10-04 21:53:53\" level=error msg=\"Failed to get detailed health status\"\n"}
{"Time":"2025-10-04T21:53:53.89002108+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleDetailedHealth/detailed_health_API_error","Output":"--- PASS: TestHTTPHealthServer_handleDetailedHealth/detailed_health_API_error (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.890033498+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleDetailedHealth/detailed_health_API_error","Elapsed":0}
{"Time":"2025-10-04T21:53:53.890046156+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleDetailedHealth","Output":"--- PASS: TestHTTPHealthServer_handleDetailedHealth (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.890057891+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleDetailedHealth","Elapsed":0}
{"Time":"2025-10-04T21:53:53.89006798+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleReadiness"}
{"Time":"2025-10-04T21:53:53.890076763+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleReadiness","Output":"=== RUN   TestHTTPHealthServer_handleReadiness\n"}
{"Time":"2025-10-04T21:53:53.890086539+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleReadiness/system_ready"}
{"Time":"2025-10-04T21:53:53.890105919+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleReadiness/system_ready","Output":"=== RUN   TestHTTPHealthServer_handleReadiness/system_ready\n"}
{"Time":"2025-10-04T21:53:53.890118428+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleReadiness/system_ready","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"HTTP Health Server initialized\"\n"}
{"Time":"2025-10-04T21:53:53.890130898+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleReadiness/system_ready","Output":"--- PASS: TestHTTPHealthServer_handleReadiness/system_ready (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.890156293+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleReadiness/system_ready","Elapsed":0}
{"Time":"2025-10-04T21:53:53.89016802+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleReadiness/system_not_ready"}
{"Time":"2025-10-04T21:53:53.890176736+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleReadiness/system_not_ready","Output":"=== RUN   TestHTTPHealthServer_handleReadiness/system_not_ready\n"}
{"Time":"2025-10-04T21:53:53.890186246+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleReadiness/system_not_ready","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"HTTP Health Server initialized\"\n"}
{"Time":"2025-10-04T21:53:53.89019804+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleReadiness/system_not_ready","Output":"--- PASS: TestHTTPHealthServer_handleReadiness/system_not_ready (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.890220579+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleReadiness/system_not_ready","Elapsed":0}
{"Time":"2025-10-04T21:53:53.890240655+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleReadiness/readiness_API_error"}
{"Time":"2025-10-04T21:53:53.89025075+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleReadiness/readiness_API_error","Output":"=== RUN   TestHTTPHealthServer_handleReadiness/readiness_API_error\n"}
{"Time":"2025-10-04T21:53:53.890260576+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleReadiness/readiness_API_error","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"HTTP Health Server initialized\"\n"}
{"Time":"2025-10-04T21:53:53.890270371+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleReadiness/readiness_API_error","Output":"time=\"2025-10-04 21:53:53\" level=error msg=\"Failed to check readiness\"\n"}
{"Time":"2025-10-04T21:53:53.890286007+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleReadiness/readiness_API_error","Output":"--- PASS: TestHTTPHealthServer_handleReadiness/readiness_API_error (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.891009218+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleReadiness/readiness_API_error","Elapsed":0}
{"Time":"2025-10-04T21:53:53.894302901+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleReadiness","Output":"--- PASS: TestHTTPHealthServer_handleReadiness (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.894427372+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleReadiness","Elapsed":0}
{"Time":"2025-10-04T21:53:53.894447702+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleLiveness"}
{"Time":"2025-10-04T21:53:53.89445707+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleLiveness","Output":"=== RUN   TestHTTPHealthServer_handleLiveness\n"}
{"Time":"2025-10-04T21:53:53.894467947+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleLiveness/system_alive"}
{"Time":"2025-10-04T21:53:53.894476894+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleLiveness/system_alive","Output":"=== RUN   TestHTTPHealthServer_handleLiveness/system_alive\n"}
{"Time":"2025-10-04T21:53:53.894485843+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleLiveness/system_alive","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"HTTP Health Server initialized\"\n"}
{"Time":"2025-10-04T21:53:53.894496635+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleLiveness/system_alive","Output":"--- PASS: TestHTTPHealthServer_handleLiveness/system_alive (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.894507258+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleLiveness/system_alive","Elapsed":0}
{"Time":"2025-10-04T21:53:53.894517701+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleLiveness/system_not_alive"}
{"Time":"2025-10-04T21:53:53.89452587+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleLiveness/system_not_alive","Output":"=== RUN   TestHTTPHealthServer_handleLiveness/system_not_alive\n"}
{"Time":"2025-10-04T21:53:53.894534906+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleLiveness/system_not_alive","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"HTTP Health Server initialized\"\n"}
{"Time":"2025-10-04T21:53:53.894545895+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleLiveness/system_not_alive","Output":"--- PASS: TestHTTPHealthServer_handleLiveness/system_not_alive (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.894555843+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleLiveness/system_not_alive","Elapsed":0}
{"Time":"2025-10-04T21:53:53.894565385+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleLiveness/liveness_API_error"}
{"Time":"2025-10-04T21:53:53.894573927+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleLiveness/liveness_API_error","Output":"=== RUN   TestHTTPHealthServer_handleLiveness/liveness_API_error\n"}
{"Time":"2025-10-04T21:53:53.894583161+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleLiveness/liveness_API_error","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"HTTP Health Server initialized\"\n"}
{"Time":"2025-10-04T21:53:53.894600502+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleLiveness/liveness_API_error","Output":"time=\"2025-10-04 21:53:53\" level=error msg=\"Failed to check liveness\"\n"}
{"Time":"2025-10-04T21:53:53.894612579+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleLiveness/liveness_API_error","Output":"--- PASS: TestHTTPHealthServer_handleLiveness/liveness_API_error (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.894622349+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleLiveness/liveness_API_error","Elapsed":0}
{"Time":"2025-10-04T21:53:53.894643735+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleLiveness","Output":"--- PASS: TestHTTPHealthServer_handleLiveness (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.894655071+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_handleLiveness","Elapsed":0}
{"Time":"2025-10-04T21:53:53.894664862+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_GetServerInfo"}
{"Time":"2025-10-04T21:53:53.894674108+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_GetServerInfo","Output":"=== RUN   TestHTTPHealthServer_GetServerInfo\n"}
{"Time":"2025-10-04T21:53:53.894684033+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_GetServerInfo","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"HTTP Health Server initialized\"\n"}
{"Time":"2025-10-04T21:53:53.894694821+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_GetServerInfo","Output":"--- PASS: TestHTTPHealthServer_GetServerInfo (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.894704229+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_GetServerInfo","Elapsed":0}
{"Time":"2025-10-04T21:53:53.894713776+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_Stop"}
{"Time":"2025-10-04T21:53:53.894721016+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_Stop","Output":"=== RUN   TestHTTPHealthServer_Stop\n"}
{"Time":"2025-10-04T21:53:53.894729077+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_Stop","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"HTTP Health Server initialized\"\n"}
{"Time":"2025-10-04T21:53:53.894738948+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_Stop","Output":"--- PASS: TestHTTPHealthServer_Stop (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.894747605+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_Stop","Elapsed":0}
{"Time":"2025-10-04T21:53:53.894756409+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_Stop_Disabled"}
{"Time":"2025-10-04T21:53:53.894763941+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_Stop_Disabled","Output":"=== RUN   TestHTTPHealthServer_Stop_Disabled\n"}
{"Time":"2025-10-04T21:53:53.894781153+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_Stop_Disabled","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"HTTP Health Server initialized\"\n"}
{"Time":"2025-10-04T21:53:53.894794848+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_Stop_Disabled","Output":"--- PASS: TestHTTPHealthServer_Stop_Disabled (0.00s)\n"}
{"Time":"2025-10-04T21:53:53.894805686+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Test":"TestHTTPHealthServer_Stop_Disabled","Elapsed":0}
{"Time":"2025-10-04T21:53:53.89481507+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Output":"PASS\n"}
{"Time":"2025-10-04T21:53:53.899466069+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/recording_segment_duration_negative","Output":"    config_manager_test.go:909: \n"}
{"Time":"2025-10-04T21:53:53.899571197+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/recording_segment_duration_negative","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:909\n"}
{"Time":"2025-10-04T21:53:53.89959192+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/recording_segment_duration_negative","Output":"        \tError:      \t\"configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\" does not contain \"recording segment duration cannot be negative, got -1\"\n"}
{"Time":"2025-10-04T21:53:53.899627954+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/recording_segment_duration_negative","Output":"        \tTest:       \tTestConfigManager_ValidateFinalConfiguration_EdgeCases/recording_segment_duration_negative\n"}
{"Time":"2025-10-04T21:53:53.899642345+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/recording_segment_duration_negative","Output":"        \tMessages:   \tError message should contain expected text\n"}
{"Time":"2025-10-04T21:53:53.900002723+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/recording_segment_duration_negative","Output":"--- FAIL: TestConfigManager_ValidateFinalConfiguration_EdgeCases/recording_segment_duration_negative (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.902250268+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Output":"coverage: 0.9% of statements in ./...\n"}
{"Time":"2025-10-04T21:53:53.90225463+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/recording_segment_duration_negative","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.902357957+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/recording_max_size_zero"}
{"Time":"2025-10-04T21:53:53.902391997+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/recording_max_size_zero","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_EdgeCases/recording_max_size_zero\n"}
{"Time":"2025-10-04T21:53:53.90240636+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/recording_max_size_zero","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.913353079+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/recording_max_size_zero","Output":"--- PASS: TestConfigManager_ValidateFinalConfiguration_EdgeCases/recording_max_size_zero (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.91344923+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/recording_max_size_zero","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.913471767+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_negative"}
{"Time":"2025-10-04T21:53:53.913482329+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_negative","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_negative\n"}
{"Time":"2025-10-04T21:53:53.91379151+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_negative","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.914336459+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_RaceConditionDetection","Output":"time=\"2025-10-04 21:53:53\" level=warning msg=\"Task timed out in worker pool\"\n"}
{"Time":"2025-10-04T21:53:53.919618217+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_negative","Output":"    config_manager_test.go:909: \n"}
{"Time":"2025-10-04T21:53:53.919720558+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_negative","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:909\n"}
{"Time":"2025-10-04T21:53:53.919738995+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_negative","Output":"        \tError:      \t\"configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\" does not contain \"snapshots quality must be between 0 and 100, got -1\"\n"}
{"Time":"2025-10-04T21:53:53.920044665+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_negative","Output":"        \tTest:       \tTestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_negative\n"}
{"Time":"2025-10-04T21:53:53.920080538+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_negative","Output":"        \tMessages:   \tError message should contain expected text\n"}
{"Time":"2025-10-04T21:53:53.921126478+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_negative","Output":"--- FAIL: TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_negative (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.921415336+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_negative","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.921440961+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_exceeds_max"}
{"Time":"2025-10-04T21:53:53.921451944+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_exceeds_max","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_exceeds_max\n"}
{"Time":"2025-10-04T21:53:53.921739465+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_exceeds_max","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.927960729+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_exceeds_max","Output":"    config_manager_test.go:909: \n"}
{"Time":"2025-10-04T21:53:53.929143788+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_exceeds_max","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:909\n"}
{"Time":"2025-10-04T21:53:53.929574149+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_exceeds_max","Output":"        \tError:      \t\"configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\" does not contain \"snapshots quality must be between 0 and 100, got 101\"\n"}
{"Time":"2025-10-04T21:53:53.929827986+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_exceeds_max","Output":"        \tTest:       \tTestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_exceeds_max\n"}
{"Time":"2025-10-04T21:53:53.930071701+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_exceeds_max","Output":"        \tMessages:   \tError message should contain expected text\n"}
{"Time":"2025-10-04T21:53:53.930126205+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_exceeds_max","Output":"--- FAIL: TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_exceeds_max (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.930356186+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_exceeds_max","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.930379733+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_boundary_min"}
{"Time":"2025-10-04T21:53:53.930585324+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_boundary_min","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_boundary_min\n"}
{"Time":"2025-10-04T21:53:53.930606538+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_boundary_min","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.935798306+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_boundary_min","Output":"    config_manager_test.go:912: \n"}
{"Time":"2025-10-04T21:53:53.936313217+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_boundary_min","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:912\n"}
{"Time":"2025-10-04T21:53:53.936343565+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_boundary_min","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:53.936565834+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_boundary_min","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:53.936603943+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_boundary_min","Output":"        \tTest:       \tTestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_boundary_min\n"}
{"Time":"2025-10-04T21:53:53.936817086+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_boundary_min","Output":"        \tMessages:   \tShould pass when snapshots quality is minimum valid value\n"}
{"Time":"2025-10-04T21:53:53.936851371+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_boundary_min","Output":"--- FAIL: TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_boundary_min (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.937078604+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_boundary_min","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.937112045+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_boundary_max"}
{"Time":"2025-10-04T21:53:53.9373397+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_boundary_max","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_boundary_max\n"}
{"Time":"2025-10-04T21:53:53.937534447+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_boundary_max","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.945095013+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_boundary_max","Output":"    config_manager_test.go:912: \n"}
{"Time":"2025-10-04T21:53:53.945183557+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_boundary_max","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:912\n"}
{"Time":"2025-10-04T21:53:53.945198935+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_boundary_max","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:53.945221299+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_boundary_max","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:53.945240136+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_boundary_max","Output":"        \tTest:       \tTestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_boundary_max\n"}
{"Time":"2025-10-04T21:53:53.945251994+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_boundary_max","Output":"        \tMessages:   \tShould pass when snapshots quality is maximum valid value\n"}
{"Time":"2025-10-04T21:53:53.945274817+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_boundary_max","Output":"--- FAIL: TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_boundary_max (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.945304319+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_quality_boundary_max","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.945321189+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_max_width_zero"}
{"Time":"2025-10-04T21:53:53.945331508+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_max_width_zero","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_max_width_zero\n"}
{"Time":"2025-10-04T21:53:53.945341407+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_max_width_zero","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.955317497+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_max_width_zero","Output":"--- PASS: TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_max_width_zero (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.95541642+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_max_width_zero","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.955440804+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_max_count_zero"}
{"Time":"2025-10-04T21:53:53.955457045+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_max_count_zero","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_max_count_zero\n"}
{"Time":"2025-10-04T21:53:53.955469243+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_max_count_zero","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.959673493+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_max_count_zero","Output":"--- PASS: TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_max_count_zero (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.960153728+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/snapshots_max_count_zero","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.960493888+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/storage_warn_percent_negative"}
{"Time":"2025-10-04T21:53:53.960525186+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/storage_warn_percent_negative","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_EdgeCases/storage_warn_percent_negative\n"}
{"Time":"2025-10-04T21:53:53.960987716+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/storage_warn_percent_negative","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.961551541+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_RaceConditionDetection","Output":"time=\"2025-10-04 21:53:53\" level=warning msg=\"Task timed out in worker pool\"\n"}
{"Time":"2025-10-04T21:53:53.964003387+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Output":"ok  \tgithub.com/camerarecorder/mediamtx-camera-service-go/internal/health\t0.081s\tcoverage: 0.9% of statements in ./...\n"}
{"Time":"2025-10-04T21:53:53.964061365+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/health","Elapsed":0.085}
{"Time":"2025-10-04T21:53:53.967367706+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/storage_warn_percent_negative","Output":"--- PASS: TestConfigManager_ValidateFinalConfiguration_EdgeCases/storage_warn_percent_negative (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.967846598+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/storage_warn_percent_negative","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.970802394+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/storage_warn_percent_exceeds_max"}
{"Time":"2025-10-04T21:53:53.970886335+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/storage_warn_percent_exceeds_max","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_EdgeCases/storage_warn_percent_exceeds_max\n"}
{"Time":"2025-10-04T21:53:53.970907883+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/storage_warn_percent_exceeds_max","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.974003178+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/storage_warn_percent_exceeds_max","Output":"--- PASS: TestConfigManager_ValidateFinalConfiguration_EdgeCases/storage_warn_percent_exceeds_max (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.977347645+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/storage_warn_percent_exceeds_max","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.977415982+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/storage_warn_percent_equals_block_percent"}
{"Time":"2025-10-04T21:53:53.977429803+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/storage_warn_percent_equals_block_percent","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_EdgeCases/storage_warn_percent_equals_block_percent\n"}
{"Time":"2025-10-04T21:53:53.977445875+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/storage_warn_percent_equals_block_percent","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.979725706+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/storage_warn_percent_equals_block_percent","Output":"--- PASS: TestConfigManager_ValidateFinalConfiguration_EdgeCases/storage_warn_percent_equals_block_percent (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.980316845+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/storage_warn_percent_equals_block_percent","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.980635883+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_RaceConditionDetection","Output":"time=\"2025-10-04 21:53:53\" level=warning msg=\"Task timed out in worker pool\"\n"}
{"Time":"2025-10-04T21:53:53.981020006+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/storage_warn_percent_greater_than_block_percent"}
{"Time":"2025-10-04T21:53:53.983428141+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/storage_warn_percent_greater_than_block_percent","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_EdgeCases/storage_warn_percent_greater_than_block_percent\n"}
{"Time":"2025-10-04T21:53:53.983510029+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/storage_warn_percent_greater_than_block_percent","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:53.986840339+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/storage_warn_percent_greater_than_block_percent","Output":"--- PASS: TestConfigManager_ValidateFinalConfiguration_EdgeCases/storage_warn_percent_greater_than_block_percent (0.01s)\n"}
{"Time":"2025-10-04T21:53:53.987360593+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/storage_warn_percent_greater_than_block_percent","Elapsed":0.01}
{"Time":"2025-10-04T21:53:53.987765649+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/storage_default_path_empty"}
{"Time":"2025-10-04T21:53:53.987794735+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/storage_default_path_empty","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_EdgeCases/storage_default_path_empty\n"}
{"Time":"2025-10-04T21:53:53.992313388+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/storage_default_path_empty","Output":"time=\"2025-10-04 21:53:53\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.001473171+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/storage_default_path_empty","Output":"--- PASS: TestConfigManager_ValidateFinalConfiguration_EdgeCases/storage_default_path_empty (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.00156201+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases/storage_default_path_empty","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.001587037+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases","Output":"--- FAIL: TestConfigManager_ValidateFinalConfiguration_EdgeCases (0.31s)\n"}
{"Time":"2025-10-04T21:53:54.001623169+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_EdgeCases","Elapsed":0.31}
{"Time":"2025-10-04T21:53:54.001639875+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade"}
{"Time":"2025-10-04T21:53:54.001649788+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade","Output":"=== RUN   TestConfigManager_WatchFileChanges_EnterpriseGrade\n"}
{"Time":"2025-10-04T21:53:54.001672402+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/file_watching_lifecycle_management"}
{"Time":"2025-10-04T21:53:54.001683026+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/file_watching_lifecycle_management","Output":"=== RUN   TestConfigManager_WatchFileChanges_EnterpriseGrade/file_watching_lifecycle_management\n"}
{"Time":"2025-10-04T21:53:54.001693804+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/file_watching_lifecycle_management","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.007580809+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/file_watching_lifecycle_management","Output":"    config_manager_test.go:935: \n"}
{"Time":"2025-10-04T21:53:54.010379909+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/file_watching_lifecycle_management","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:935\n"}
{"Time":"2025-10-04T21:53:54.01041221+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/file_watching_lifecycle_management","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:54.010424966+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/file_watching_lifecycle_management","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:54.01043932+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/file_watching_lifecycle_management","Output":"        \tTest:       \tTestConfigManager_WatchFileChanges_EnterpriseGrade/file_watching_lifecycle_management\n"}
{"Time":"2025-10-04T21:53:54.010451139+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/file_watching_lifecycle_management","Output":"        \tMessages:   \tConfig should load successfully with hot reload enabled\n"}
{"Time":"2025-10-04T21:53:54.010496239+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/file_watching_lifecycle_management","Output":"--- FAIL: TestConfigManager_WatchFileChanges_EnterpriseGrade/file_watching_lifecycle_management (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.010526492+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/file_watching_lifecycle_management","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.010544283+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/file_modification_detection"}
{"Time":"2025-10-04T21:53:54.010553442+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/file_modification_detection","Output":"=== RUN   TestConfigManager_WatchFileChanges_EnterpriseGrade/file_modification_detection\n"}
{"Time":"2025-10-04T21:53:54.010563341+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/file_modification_detection","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.014340298+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/file_modification_detection","Output":"    config_manager_test.go:954: \n"}
{"Time":"2025-10-04T21:53:54.014433771+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/file_modification_detection","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:954\n"}
{"Time":"2025-10-04T21:53:54.014451641+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/file_modification_detection","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:54.014465199+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/file_modification_detection","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:54.0144771+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/file_modification_detection","Output":"        \tTest:       \tTestConfigManager_WatchFileChanges_EnterpriseGrade/file_modification_detection\n"}
{"Time":"2025-10-04T21:53:54.014486861+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/file_modification_detection","Output":"        \tMessages:   \tConfig should load successfully\n"}
{"Time":"2025-10-04T21:53:54.014506799+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/file_modification_detection","Output":"--- FAIL: TestConfigManager_WatchFileChanges_EnterpriseGrade/file_modification_detection (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.014548569+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/file_modification_detection","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.014568003+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/file_removal_handling"}
{"Time":"2025-10-04T21:53:54.014577695+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/file_removal_handling","Output":"=== RUN   TestConfigManager_WatchFileChanges_EnterpriseGrade/file_removal_handling\n"}
{"Time":"2025-10-04T21:53:54.014587891+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/file_removal_handling","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.020460379+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/file_removal_handling","Output":"    config_manager_test.go:994: \n"}
{"Time":"2025-10-04T21:53:54.020550602+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/file_removal_handling","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:994\n"}
{"Time":"2025-10-04T21:53:54.020569259+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/file_removal_handling","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:54.020583257+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/file_removal_handling","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:54.020596535+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/file_removal_handling","Output":"        \tTest:       \tTestConfigManager_WatchFileChanges_EnterpriseGrade/file_removal_handling\n"}
{"Time":"2025-10-04T21:53:54.020608438+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/file_removal_handling","Output":"        \tMessages:   \tConfig should load successfully\n"}
{"Time":"2025-10-04T21:53:54.020630311+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/file_removal_handling","Output":"--- FAIL: TestConfigManager_WatchFileChanges_EnterpriseGrade/file_removal_handling (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.02065331+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/file_removal_handling","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.020679578+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/multiple_rapid_changes_debouncing"}
{"Time":"2025-10-04T21:53:54.020716095+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/multiple_rapid_changes_debouncing","Output":"=== RUN   TestConfigManager_WatchFileChanges_EnterpriseGrade/multiple_rapid_changes_debouncing\n"}
{"Time":"2025-10-04T21:53:54.020731802+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/multiple_rapid_changes_debouncing","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.025438152+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_RaceConditionDetection","Output":"time=\"2025-10-04 21:53:54\" level=warning msg=\"Task timed out in worker pool\"\n"}
{"Time":"2025-10-04T21:53:54.031400123+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/multiple_rapid_changes_debouncing","Output":"    config_manager_test.go:1030: \n"}
{"Time":"2025-10-04T21:53:54.03150065+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/multiple_rapid_changes_debouncing","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:1030\n"}
{"Time":"2025-10-04T21:53:54.03151994+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/multiple_rapid_changes_debouncing","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:54.031532392+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/multiple_rapid_changes_debouncing","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:54.031544853+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/multiple_rapid_changes_debouncing","Output":"        \tTest:       \tTestConfigManager_WatchFileChanges_EnterpriseGrade/multiple_rapid_changes_debouncing\n"}
{"Time":"2025-10-04T21:53:54.031554584+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/multiple_rapid_changes_debouncing","Output":"        \tMessages:   \tConfig should load successfully\n"}
{"Time":"2025-10-04T21:53:54.032720817+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/multiple_rapid_changes_debouncing","Output":"--- FAIL: TestConfigManager_WatchFileChanges_EnterpriseGrade/multiple_rapid_changes_debouncing (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.037598848+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_RaceConditionDetection","Output":"time=\"2025-10-04 21:53:54\" level=warning msg=\"Task timed out in worker pool\"\n"}
{"Time":"2025-10-04T21:53:54.037639138+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/multiple_rapid_changes_debouncing","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.03774768+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/watcher_error_handling"}
{"Time":"2025-10-04T21:53:54.037764188+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/watcher_error_handling","Output":"=== RUN   TestConfigManager_WatchFileChanges_EnterpriseGrade/watcher_error_handling\n"}
{"Time":"2025-10-04T21:53:54.037777121+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/watcher_error_handling","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.04158718+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/watcher_error_handling","Output":"    config_manager_test.go:1079: \n"}
{"Time":"2025-10-04T21:53:54.041666952+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/watcher_error_handling","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:1079\n"}
{"Time":"2025-10-04T21:53:54.041685408+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/watcher_error_handling","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:54.041699374+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/watcher_error_handling","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:54.041713227+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/watcher_error_handling","Output":"        \tTest:       \tTestConfigManager_WatchFileChanges_EnterpriseGrade/watcher_error_handling\n"}
{"Time":"2025-10-04T21:53:54.041725718+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/watcher_error_handling","Output":"        \tMessages:   \tConfig should load successfully\n"}
{"Time":"2025-10-04T21:53:54.041853107+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/watcher_error_handling","Output":"--- FAIL: TestConfigManager_WatchFileChanges_EnterpriseGrade/watcher_error_handling (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.041966177+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/watcher_error_handling","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.042122396+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/concurrent_access_safety"}
{"Time":"2025-10-04T21:53:54.042146531+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/concurrent_access_safety","Output":"=== RUN   TestConfigManager_WatchFileChanges_EnterpriseGrade/concurrent_access_safety\n"}
{"Time":"2025-10-04T21:53:54.042574941+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/concurrent_access_safety","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.048326456+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/concurrent_access_safety","Output":"    config_manager_test.go:1119: \n"}
{"Time":"2025-10-04T21:53:54.04842859+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/concurrent_access_safety","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:1119\n"}
{"Time":"2025-10-04T21:53:54.048446546+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/concurrent_access_safety","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:54.048477816+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/concurrent_access_safety","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:54.04849678+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/concurrent_access_safety","Output":"        \tTest:       \tTestConfigManager_WatchFileChanges_EnterpriseGrade/concurrent_access_safety\n"}
{"Time":"2025-10-04T21:53:54.048518501+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/concurrent_access_safety","Output":"        \tMessages:   \tConfig should load successfully\n"}
{"Time":"2025-10-04T21:53:54.048538373+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/concurrent_access_safety","Output":"--- FAIL: TestConfigManager_WatchFileChanges_EnterpriseGrade/concurrent_access_safety (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.048599436+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/concurrent_access_safety","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.04861851+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/stop_signal_handling"}
{"Time":"2025-10-04T21:53:54.048649592+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/stop_signal_handling","Output":"=== RUN   TestConfigManager_WatchFileChanges_EnterpriseGrade/stop_signal_handling\n"}
{"Time":"2025-10-04T21:53:54.048681705+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/stop_signal_handling","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.054057179+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/stop_signal_handling","Output":"    config_manager_test.go:1174: \n"}
{"Time":"2025-10-04T21:53:54.054705374+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/stop_signal_handling","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:1174\n"}
{"Time":"2025-10-04T21:53:54.054725918+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/stop_signal_handling","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:54.054739558+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/stop_signal_handling","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:54.055018888+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/stop_signal_handling","Output":"        \tTest:       \tTestConfigManager_WatchFileChanges_EnterpriseGrade/stop_signal_handling\n"}
{"Time":"2025-10-04T21:53:54.055037072+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/stop_signal_handling","Output":"        \tMessages:   \tConfig should load successfully\n"}
{"Time":"2025-10-04T21:53:54.055170715+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/stop_signal_handling","Output":"--- FAIL: TestConfigManager_WatchFileChanges_EnterpriseGrade/stop_signal_handling (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.05520358+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade/stop_signal_handling","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.055349281+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade","Output":"--- FAIL: TestConfigManager_WatchFileChanges_EnterpriseGrade (0.05s)\n"}
{"Time":"2025-10-04T21:53:54.055367722+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_WatchFileChanges_EnterpriseGrade","Elapsed":0.05}
{"Time":"2025-10-04T21:53:54.055382589+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade"}
{"Time":"2025-10-04T21:53:54.055502883+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade","Output":"=== RUN   TestConfigManager_StartFileWatching_EnterpriseGrade\n"}
{"Time":"2025-10-04T21:53:54.057086146+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/successful_file_watching_startup"}
{"Time":"2025-10-04T21:53:54.057225316+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/successful_file_watching_startup","Output":"=== RUN   TestConfigManager_StartFileWatching_EnterpriseGrade/successful_file_watching_startup\n"}
{"Time":"2025-10-04T21:53:54.057263652+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/successful_file_watching_startup","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.067523341+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/successful_file_watching_startup","Output":"    config_manager_test.go:1237: \n"}
{"Time":"2025-10-04T21:53:54.067617418+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/successful_file_watching_startup","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:1237\n"}
{"Time":"2025-10-04T21:53:54.067636228+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/successful_file_watching_startup","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:54.067647758+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/successful_file_watching_startup","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:54.067660056+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/successful_file_watching_startup","Output":"        \tTest:       \tTestConfigManager_StartFileWatching_EnterpriseGrade/successful_file_watching_startup\n"}
{"Time":"2025-10-04T21:53:54.067670594+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/successful_file_watching_startup","Output":"        \tMessages:   \tConfig should load successfully with hot reload enabled\n"}
{"Time":"2025-10-04T21:53:54.067693032+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/successful_file_watching_startup","Output":"--- FAIL: TestConfigManager_StartFileWatching_EnterpriseGrade/successful_file_watching_startup (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.067708405+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/successful_file_watching_startup","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.067747855+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_nonexistent_directory"}
{"Time":"2025-10-04T21:53:54.067773248+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_nonexistent_directory","Output":"=== RUN   TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_nonexistent_directory\n"}
{"Time":"2025-10-04T21:53:54.06809139+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_nonexistent_directory","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.079963135+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_nonexistent_directory","Output":"    config_manager_test.go:1270: \n"}
{"Time":"2025-10-04T21:53:54.080066091+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_nonexistent_directory","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:1270\n"}
{"Time":"2025-10-04T21:53:54.080087418+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_nonexistent_directory","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:54.080134678+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_nonexistent_directory","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:54.080155855+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_nonexistent_directory","Output":"        \tTest:       \tTestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_nonexistent_directory\n"}
{"Time":"2025-10-04T21:53:54.080168743+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_nonexistent_directory","Output":"        \tMessages:   \tConfig should load successfully even with custom directory\n"}
{"Time":"2025-10-04T21:53:54.080222428+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_nonexistent_directory","Output":"--- FAIL: TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_nonexistent_directory (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.080240927+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_nonexistent_directory","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.080302313+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_readonly_directory"}
{"Time":"2025-10-04T21:53:54.080317629+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_readonly_directory","Output":"=== RUN   TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_readonly_directory\n"}
{"Time":"2025-10-04T21:53:54.080417373+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_readonly_directory","Output":"    config_manager_test.go:1298: Expected error creating file in readonly directory: open /tmp/TestConfigManager_StartFileWatching_EnterpriseGradefile_watching_with_readonly_directory3933596175/001/readonly/config.yaml: permission denied\n"}
{"Time":"2025-10-04T21:53:54.080463806+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_readonly_directory","Output":"--- PASS: TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_readonly_directory (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.080486097+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_readonly_directory","Elapsed":0}
{"Time":"2025-10-04T21:53:54.080499373+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/multiple_start_file_watching_calls"}
{"Time":"2025-10-04T21:53:54.080509228+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/multiple_start_file_watching_calls","Output":"=== RUN   TestConfigManager_StartFileWatching_EnterpriseGrade/multiple_start_file_watching_calls\n"}
{"Time":"2025-10-04T21:53:54.080550455+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/multiple_start_file_watching_calls","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.094312844+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/multiple_start_file_watching_calls","Output":"    config_manager_test.go:1326: \n"}
{"Time":"2025-10-04T21:53:54.094456601+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/multiple_start_file_watching_calls","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:1326\n"}
{"Time":"2025-10-04T21:53:54.094483573+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/multiple_start_file_watching_calls","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:54.094499016+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/multiple_start_file_watching_calls","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:54.094552761+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/multiple_start_file_watching_calls","Output":"        \tTest:       \tTestConfigManager_StartFileWatching_EnterpriseGrade/multiple_start_file_watching_calls\n"}
{"Time":"2025-10-04T21:53:54.094568381+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/multiple_start_file_watching_calls","Output":"        \tMessages:   \tConfig should load successfully\n"}
{"Time":"2025-10-04T21:53:54.094591789+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/multiple_start_file_watching_calls","Output":"--- FAIL: TestConfigManager_StartFileWatching_EnterpriseGrade/multiple_start_file_watching_calls (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.09462568+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/multiple_start_file_watching_calls","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.094655619+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_symlink_config"}
{"Time":"2025-10-04T21:53:54.0947057+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_symlink_config","Output":"=== RUN   TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_symlink_config\n"}
{"Time":"2025-10-04T21:53:54.094724873+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_symlink_config","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.104309307+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_symlink_config","Output":"    config_manager_test.go:1357: \n"}
{"Time":"2025-10-04T21:53:54.104396177+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_symlink_config","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:1357\n"}
{"Time":"2025-10-04T21:53:54.104412857+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_symlink_config","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:54.104425317+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_symlink_config","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:54.104464249+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_symlink_config","Output":"        \tTest:       \tTestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_symlink_config\n"}
{"Time":"2025-10-04T21:53:54.104478038+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_symlink_config","Output":"        \tMessages:   \tConfig should load successfully with symlink\n"}
{"Time":"2025-10-04T21:53:54.104498868+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_symlink_config","Output":"--- FAIL: TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_symlink_config (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.104522232+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_symlink_config","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.104538497+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_deep_directory_structure"}
{"Time":"2025-10-04T21:53:54.104548864+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_deep_directory_structure","Output":"=== RUN   TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_deep_directory_structure\n"}
{"Time":"2025-10-04T21:53:54.104559917+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_deep_directory_structure","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.112044156+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_deep_directory_structure","Output":"    config_manager_test.go:1382: \n"}
{"Time":"2025-10-04T21:53:54.112143497+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_deep_directory_structure","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:1382\n"}
{"Time":"2025-10-04T21:53:54.112161029+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_deep_directory_structure","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:54.112173488+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_deep_directory_structure","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:54.112349847+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_deep_directory_structure","Output":"        \tTest:       \tTestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_deep_directory_structure\n"}
{"Time":"2025-10-04T21:53:54.112380859+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_deep_directory_structure","Output":"        \tMessages:   \tConfig should load successfully with deep directory\n"}
{"Time":"2025-10-04T21:53:54.112624475+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_deep_directory_structure","Output":"--- FAIL: TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_deep_directory_structure (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.113159316+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_deep_directory_structure","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.114076809+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_special_characters_in_path"}
{"Time":"2025-10-04T21:53:54.114102779+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_special_characters_in_path","Output":"=== RUN   TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_special_characters_in_path\n"}
{"Time":"2025-10-04T21:53:54.114125508+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_special_characters_in_path","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.122417847+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_special_characters_in_path","Output":"    config_manager_test.go:1407: \n"}
{"Time":"2025-10-04T21:53:54.122511225+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_special_characters_in_path","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:1407\n"}
{"Time":"2025-10-04T21:53:54.122530753+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_special_characters_in_path","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:54.122542858+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_special_characters_in_path","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:54.122555875+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_special_characters_in_path","Output":"        \tTest:       \tTestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_special_characters_in_path\n"}
{"Time":"2025-10-04T21:53:54.122585862+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_special_characters_in_path","Output":"        \tMessages:   \tConfig should load successfully with special characters in path\n"}
{"Time":"2025-10-04T21:53:54.122611416+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_special_characters_in_path","Output":"--- FAIL: TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_special_characters_in_path (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.122627789+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_with_special_characters_in_path","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.122646932+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_lifecycle_with_rapid_start_stop"}
{"Time":"2025-10-04T21:53:54.122658748+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_lifecycle_with_rapid_start_stop","Output":"=== RUN   TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_lifecycle_with_rapid_start_stop\n"}
{"Time":"2025-10-04T21:53:54.122670566+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_lifecycle_with_rapid_start_stop","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.128379102+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_lifecycle_with_rapid_start_stop","Output":"    config_manager_test.go:1425: \n"}
{"Time":"2025-10-04T21:53:54.130699853+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_lifecycle_with_rapid_start_stop","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:1425\n"}
{"Time":"2025-10-04T21:53:54.130746071+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_lifecycle_with_rapid_start_stop","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:54.130870197+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_lifecycle_with_rapid_start_stop","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:54.130894285+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_lifecycle_with_rapid_start_stop","Output":"        \tTest:       \tTestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_lifecycle_with_rapid_start_stop\n"}
{"Time":"2025-10-04T21:53:54.131120648+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_lifecycle_with_rapid_start_stop","Output":"        \tMessages:   \tConfig should load successfully in cycle 0\n"}
{"Time":"2025-10-04T21:53:54.131154768+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_lifecycle_with_rapid_start_stop","Output":"--- FAIL: TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_lifecycle_with_rapid_start_stop (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.131285729+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade/file_watching_lifecycle_with_rapid_start_stop","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.131319984+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade","Output":"--- FAIL: TestConfigManager_StartFileWatching_EnterpriseGrade (0.07s)\n"}
{"Time":"2025-10-04T21:53:54.131333567+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_EnterpriseGrade","Elapsed":0.07}
{"Time":"2025-10-04T21:53:54.131345038+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_ErrorScenarios"}
{"Time":"2025-10-04T21:53:54.131467292+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_ErrorScenarios","Output":"=== RUN   TestConfigManager_StartFileWatching_ErrorScenarios\n"}
{"Time":"2025-10-04T21:53:54.131485397+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_ErrorScenarios/watcher_creation_failure_simulation"}
{"Time":"2025-10-04T21:53:54.131495896+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_ErrorScenarios/watcher_creation_failure_simulation","Output":"=== RUN   TestConfigManager_StartFileWatching_ErrorScenarios/watcher_creation_failure_simulation\n"}
{"Time":"2025-10-04T21:53:54.131506021+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_ErrorScenarios/watcher_creation_failure_simulation","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.137345247+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_ErrorScenarios/watcher_creation_failure_simulation","Output":"    config_manager_test.go:1473: Expected potential error with very long path: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:54.138745358+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_ErrorScenarios/watcher_creation_failure_simulation","Output":"--- PASS: TestConfigManager_StartFileWatching_ErrorScenarios/watcher_creation_failure_simulation (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.138849487+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_ErrorScenarios/watcher_creation_failure_simulation","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.138873214+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_ErrorScenarios/directory_watching_failure_scenarios"}
{"Time":"2025-10-04T21:53:54.138884995+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_ErrorScenarios/directory_watching_failure_scenarios","Output":"=== RUN   TestConfigManager_StartFileWatching_ErrorScenarios/directory_watching_failure_scenarios\n"}
{"Time":"2025-10-04T21:53:54.13889664+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_ErrorScenarios/directory_watching_failure_scenarios","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.13891189+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_ErrorScenarios/directory_watching_failure_scenarios","Output":"--- PASS: TestConfigManager_StartFileWatching_ErrorScenarios/directory_watching_failure_scenarios (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.138923918+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_ErrorScenarios/directory_watching_failure_scenarios","Elapsed":0}
{"Time":"2025-10-04T21:53:54.138935438+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_ErrorScenarios/watcher_cleanup_on_failure"}
{"Time":"2025-10-04T21:53:54.138945199+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_ErrorScenarios/watcher_cleanup_on_failure","Output":"=== RUN   TestConfigManager_StartFileWatching_ErrorScenarios/watcher_cleanup_on_failure\n"}
{"Time":"2025-10-04T21:53:54.138964953+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_ErrorScenarios/watcher_cleanup_on_failure","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.142879243+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_ErrorScenarios/watcher_cleanup_on_failure","Output":"    config_manager_test.go:1502: \n"}
{"Time":"2025-10-04T21:53:54.142986238+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_ErrorScenarios/watcher_cleanup_on_failure","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:1502\n"}
{"Time":"2025-10-04T21:53:54.143006074+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_ErrorScenarios/watcher_cleanup_on_failure","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:54.143042279+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_ErrorScenarios/watcher_cleanup_on_failure","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:54.143077681+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_ErrorScenarios/watcher_cleanup_on_failure","Output":"        \tTest:       \tTestConfigManager_StartFileWatching_ErrorScenarios/watcher_cleanup_on_failure\n"}
{"Time":"2025-10-04T21:53:54.143110361+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_ErrorScenarios/watcher_cleanup_on_failure","Output":"        \tMessages:   \tConfig should load successfully\n"}
{"Time":"2025-10-04T21:53:54.143287369+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_ErrorScenarios/watcher_cleanup_on_failure","Output":"--- FAIL: TestConfigManager_StartFileWatching_ErrorScenarios/watcher_cleanup_on_failure (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.143488911+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_ErrorScenarios/watcher_cleanup_on_failure","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.143921956+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_ErrorScenarios","Output":"--- FAIL: TestConfigManager_StartFileWatching_ErrorScenarios (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.144086462+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StartFileWatching_ErrorScenarios","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.144217864+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios"}
{"Time":"2025-10-04T21:53:54.144236778+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios","Output":"=== RUN   TestConfigManager_ReloadConfiguration_ErrorScenarios\n"}
{"Time":"2025-10-04T21:53:54.144633491+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_file_removal"}
{"Time":"2025-10-04T21:53:54.144658416+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_file_removal","Output":"=== RUN   TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_file_removal\n"}
{"Time":"2025-10-04T21:53:54.145530389+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_file_removal","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.157484144+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_file_removal","Output":"    config_manager_test.go:1531: \n"}
{"Time":"2025-10-04T21:53:54.157604706+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_file_removal","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:1531\n"}
{"Time":"2025-10-04T21:53:54.157649692+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_file_removal","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:54.157667433+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_file_removal","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:54.157681593+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_file_removal","Output":"        \tTest:       \tTestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_file_removal\n"}
{"Time":"2025-10-04T21:53:54.157722391+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_file_removal","Output":"        \tMessages:   \tConfig should load successfully\n"}
{"Time":"2025-10-04T21:53:54.15774768+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_file_removal","Output":"--- FAIL: TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_file_removal (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.157761334+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_file_removal","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.157792907+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_invalid_config"}
{"Time":"2025-10-04T21:53:54.15780689+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_invalid_config","Output":"=== RUN   TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_invalid_config\n"}
{"Time":"2025-10-04T21:53:54.157818105+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_invalid_config","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.161859079+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_RaceConditionDetection","Output":"time=\"2025-10-04 21:53:54\" level=warning msg=\"Task timed out in worker pool\"\n"}
{"Time":"2025-10-04T21:53:54.163921513+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_invalid_config","Output":"    config_manager_test.go:1552: \n"}
{"Time":"2025-10-04T21:53:54.164008631+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_invalid_config","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:1552\n"}
{"Time":"2025-10-04T21:53:54.164048821+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_invalid_config","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:54.164066085+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_invalid_config","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:54.16408049+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_invalid_config","Output":"        \tTest:       \tTestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_invalid_config\n"}
{"Time":"2025-10-04T21:53:54.164092161+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_invalid_config","Output":"        \tMessages:   \tConfig should load successfully\n"}
{"Time":"2025-10-04T21:53:54.164241596+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_invalid_config","Output":"--- FAIL: TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_invalid_config (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.164415289+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_invalid_config","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.164573066+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_permission_denied"}
{"Time":"2025-10-04T21:53:54.164596134+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_permission_denied","Output":"=== RUN   TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_permission_denied\n"}
{"Time":"2025-10-04T21:53:54.165278915+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_permission_denied","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.171185932+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_permission_denied","Output":"    config_manager_test.go:1574: \n"}
{"Time":"2025-10-04T21:53:54.174372261+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_permission_denied","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:1574\n"}
{"Time":"2025-10-04T21:53:54.174422706+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_permission_denied","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:54.17445991+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_permission_denied","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:54.174476084+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_permission_denied","Output":"        \tTest:       \tTestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_permission_denied\n"}
{"Time":"2025-10-04T21:53:54.174487706+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_permission_denied","Output":"        \tMessages:   \tConfig should load successfully\n"}
{"Time":"2025-10-04T21:53:54.17451139+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_permission_denied","Output":"--- FAIL: TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_permission_denied (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.174531213+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_permission_denied","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.174563003+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_corrupted_config"}
{"Time":"2025-10-04T21:53:54.174575352+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_corrupted_config","Output":"=== RUN   TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_corrupted_config\n"}
{"Time":"2025-10-04T21:53:54.174587413+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_corrupted_config","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.177455678+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_corrupted_config","Output":"    config_manager_test.go:1596: \n"}
{"Time":"2025-10-04T21:53:54.177555764+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_corrupted_config","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:1596\n"}
{"Time":"2025-10-04T21:53:54.177574926+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_corrupted_config","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:54.177620481+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_corrupted_config","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:54.177660136+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_corrupted_config","Output":"        \tTest:       \tTestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_corrupted_config\n"}
{"Time":"2025-10-04T21:53:54.177697266+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_corrupted_config","Output":"        \tMessages:   \tConfig should load successfully\n"}
{"Time":"2025-10-04T21:53:54.17892816+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_corrupted_config","Output":"--- FAIL: TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_corrupted_config (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.179119796+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios/reload_with_corrupted_config","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.179339691+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios","Output":"--- FAIL: TestConfigManager_ReloadConfiguration_ErrorScenarios (0.03s)\n"}
{"Time":"2025-10-04T21:53:54.179369798+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ReloadConfiguration_ErrorScenarios","Elapsed":0.03}
{"Time":"2025-10-04T21:53:54.179386102+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases"}
{"Time":"2025-10-04T21:53:54.17960519+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases","Output":"=== RUN   TestConfigManager_StopFileWatching_EdgeCases\n"}
{"Time":"2025-10-04T21:53:54.18002806+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_multiple_times"}
{"Time":"2025-10-04T21:53:54.180059023+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_multiple_times","Output":"=== RUN   TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_multiple_times\n"}
{"Time":"2025-10-04T21:53:54.182538355+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_multiple_times","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.188806709+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_multiple_times","Output":"    config_manager_test.go:1628: \n"}
{"Time":"2025-10-04T21:53:54.188889975+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_multiple_times","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:1628\n"}
{"Time":"2025-10-04T21:53:54.188927165+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_multiple_times","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:54.188940661+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_multiple_times","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:54.188952214+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_multiple_times","Output":"        \tTest:       \tTestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_multiple_times\n"}
{"Time":"2025-10-04T21:53:54.18896207+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_multiple_times","Output":"        \tMessages:   \tConfig should load successfully\n"}
{"Time":"2025-10-04T21:53:54.189057392+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_multiple_times","Output":"--- FAIL: TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_multiple_times (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.189159569+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_multiple_times","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.189301086+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_with_timeout"}
{"Time":"2025-10-04T21:53:54.189322583+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_with_timeout","Output":"=== RUN   TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_with_timeout\n"}
{"Time":"2025-10-04T21:53:54.189673292+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_with_timeout","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.196856158+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_with_timeout","Output":"    config_manager_test.go:1648: \n"}
{"Time":"2025-10-04T21:53:54.196952937+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_with_timeout","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:1648\n"}
{"Time":"2025-10-04T21:53:54.196990252+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_with_timeout","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:54.197006023+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_with_timeout","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:54.197016275+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_with_timeout","Output":"        \tTest:       \tTestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_with_timeout\n"}
{"Time":"2025-10-04T21:53:54.197025244+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_with_timeout","Output":"        \tMessages:   \tConfig should load successfully\n"}
{"Time":"2025-10-04T21:53:54.197045365+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_with_timeout","Output":"--- FAIL: TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_with_timeout (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.197066277+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_with_timeout","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.197084927+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_with_cancelled_context"}
{"Time":"2025-10-04T21:53:54.197094665+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_with_cancelled_context","Output":"=== RUN   TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_with_cancelled_context\n"}
{"Time":"2025-10-04T21:53:54.197105125+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_with_cancelled_context","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.201789964+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_with_cancelled_context","Output":"    config_manager_test.go:1668: \n"}
{"Time":"2025-10-04T21:53:54.202551022+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_with_cancelled_context","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:1668\n"}
{"Time":"2025-10-04T21:53:54.202883861+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_with_cancelled_context","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:54.203135425+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_with_cancelled_context","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:54.203158162+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_with_cancelled_context","Output":"        \tTest:       \tTestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_with_cancelled_context\n"}
{"Time":"2025-10-04T21:53:54.20318164+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_with_cancelled_context","Output":"        \tMessages:   \tConfig should load successfully\n"}
{"Time":"2025-10-04T21:53:54.203396012+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_with_cancelled_context","Output":"--- FAIL: TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_with_cancelled_context (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.203436686+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases/stop_file_watching_with_cancelled_context","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.203655657+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases","Output":"--- FAIL: TestConfigManager_StopFileWatching_EdgeCases (0.02s)\n"}
{"Time":"2025-10-04T21:53:54.203671981+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_StopFileWatching_EdgeCases","Elapsed":0.02}
{"Time":"2025-10-04T21:53:54.203685339+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases"}
{"Time":"2025-10-04T21:53:54.203695258+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases\n"}
{"Time":"2025-10-04T21:53:54.203909923+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases/validation_with_nil_config"}
{"Time":"2025-10-04T21:53:54.203923625+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases/validation_with_nil_config","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases/validation_with_nil_config\n"}
{"Time":"2025-10-04T21:53:54.204123308+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases/validation_with_nil_config","Output":"    config_manager_test.go:1695: Expected panic with nil config: runtime error: invalid memory address or nil pointer dereference\n"}
{"Time":"2025-10-04T21:53:54.204171645+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases/validation_with_nil_config","Output":"--- PASS: TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases/validation_with_nil_config (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.20437801+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases/validation_with_nil_config","Elapsed":0}
{"Time":"2025-10-04T21:53:54.204399475+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases/validation_with_empty_struct"}
{"Time":"2025-10-04T21:53:54.204410874+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases/validation_with_empty_struct","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases/validation_with_empty_struct\n"}
{"Time":"2025-10-04T21:53:54.204422967+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases/validation_with_empty_struct","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.20462749+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases/validation_with_empty_struct","Output":"--- PASS: TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases/validation_with_empty_struct (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.204656125+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases/validation_with_empty_struct","Elapsed":0}
{"Time":"2025-10-04T21:53:54.20467122+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases/validation_with_partial_config"}
{"Time":"2025-10-04T21:53:54.204682085+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases/validation_with_partial_config","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases/validation_with_partial_config\n"}
{"Time":"2025-10-04T21:53:54.20488906+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases/validation_with_partial_config","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.212296183+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases/validation_with_partial_config","Output":"--- PASS: TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases/validation_with_partial_config (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.212385662+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases/validation_with_partial_config","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.212408457+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases/validation_with_extreme_values"}
{"Time":"2025-10-04T21:53:54.212420594+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases/validation_with_extreme_values","Output":"=== RUN   TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases/validation_with_extreme_values\n"}
{"Time":"2025-10-04T21:53:54.212453073+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases/validation_with_extreme_values","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.219490425+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases/validation_with_extreme_values","Output":"    config_manager_test.go:1747: \n"}
{"Time":"2025-10-04T21:53:54.219591539+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases/validation_with_extreme_values","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:1747\n"}
{"Time":"2025-10-04T21:53:54.219609354+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases/validation_with_extreme_values","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:54.219641877+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases/validation_with_extreme_values","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:54.219659091+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases/validation_with_extreme_values","Output":"        \tTest:       \tTestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases/validation_with_extreme_values\n"}
{"Time":"2025-10-04T21:53:54.219670831+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases/validation_with_extreme_values","Output":"        \tMessages:   \tConfig should load successfully\n"}
{"Time":"2025-10-04T21:53:54.219693808+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases/validation_with_extreme_values","Output":"--- FAIL: TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases/validation_with_extreme_values (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.219728397+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases/validation_with_extreme_values","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.219757081+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases","Output":"--- FAIL: TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases (0.02s)\n"}
{"Time":"2025-10-04T21:53:54.219771792+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_ValidateFinalConfiguration_AdvancedEdgeCases","Elapsed":0.02}
{"Time":"2025-10-04T21:53:54.219831593+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigTypes_LoadFromFixtures"}
{"Time":"2025-10-04T21:53:54.219845733+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigTypes_LoadFromFixtures","Output":"=== RUN   TestConfigTypes_LoadFromFixtures\n"}
{"Time":"2025-10-04T21:53:54.219858291+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigTypes_LoadFromFixtures/Minimal_Config"}
{"Time":"2025-10-04T21:53:54.219868759+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigTypes_LoadFromFixtures/Minimal_Config","Output":"=== RUN   TestConfigTypes_LoadFromFixtures/Minimal_Config\n"}
{"Time":"2025-10-04T21:53:54.220394399+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigTypes_LoadFromFixtures/Minimal_Config","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.226722927+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigTypes_LoadFromFixtures/Minimal_Config","Output":"    config_types_test.go:43: \n"}
{"Time":"2025-10-04T21:53:54.226809537+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigTypes_LoadFromFixtures/Minimal_Config","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_types_test.go:43\n"}
{"Time":"2025-10-04T21:53:54.22682575+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigTypes_LoadFromFixtures/Minimal_Config","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:54.227998454+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigTypes_LoadFromFixtures/Minimal_Config","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:54.228053754+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigTypes_LoadFromFixtures/Minimal_Config","Output":"        \tTest:       \tTestConfigTypes_LoadFromFixtures/Minimal_Config\n"}
{"Time":"2025-10-04T21:53:54.228067705+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigTypes_LoadFromFixtures/Minimal_Config","Output":"        \tMessages:   \tShould load Minimal Config successfully\n"}
{"Time":"2025-10-04T21:53:54.22809725+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigTypes_LoadFromFixtures/Minimal_Config","Output":"--- FAIL: TestConfigTypes_LoadFromFixtures/Minimal_Config (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.228109151+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigTypes_LoadFromFixtures/Minimal_Config","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.228131344+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigTypes_LoadFromFixtures","Output":"--- FAIL: TestConfigTypes_LoadFromFixtures (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.228161468+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigTypes_LoadFromFixtures","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.228174449+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidationError_Error"}
{"Time":"2025-10-04T21:53:54.228183734+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidationError_Error","Output":"=== RUN   TestValidationError_Error\n"}
{"Time":"2025-10-04T21:53:54.228195709+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidationError_Error","Output":"--- PASS: TestValidationError_Error (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.228206035+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidationError_Error","Elapsed":0}
{"Time":"2025-10-04T21:53:54.228236776+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_ValidConfiguration"}
{"Time":"2025-10-04T21:53:54.228248152+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_ValidConfiguration","Output":"=== RUN   TestValidateConfig_ValidConfiguration\n"}
{"Time":"2025-10-04T21:53:54.228258261+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_ValidConfiguration","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.233709961+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_ValidConfiguration","Output":"    config_validation_test.go:38: \n"}
{"Time":"2025-10-04T21:53:54.233806417+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_ValidConfiguration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_validation_test.go:38\n"}
{"Time":"2025-10-04T21:53:54.233823108+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_ValidConfiguration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:54.233835494+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_ValidConfiguration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:54.233846705+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_ValidConfiguration","Output":"        \tTest:       \tTestValidateConfig_ValidConfiguration\n"}
{"Time":"2025-10-04T21:53:54.233855707+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_ValidConfiguration","Output":"        \tMessages:   \tFailed to load valid configuration\n"}
{"Time":"2025-10-04T21:53:54.234157695+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_ValidConfiguration","Output":"--- FAIL: TestValidateConfig_ValidConfiguration (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.234304571+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_ValidConfiguration","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.234413437+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations"}
{"Time":"2025-10-04T21:53:54.234435358+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations","Output":"=== RUN   TestValidateConfig_InvalidConfigurations\n"}
{"Time":"2025-10-04T21:53:54.237122801+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Invalid_Port"}
{"Time":"2025-10-04T21:53:54.237162658+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Invalid_Port","Output":"=== RUN   TestValidateConfig_InvalidConfigurations/Invalid_Port\n"}
{"Time":"2025-10-04T21:53:54.237179589+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Invalid_Port","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.239387211+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Invalid_Port","Output":"--- PASS: TestValidateConfig_InvalidConfigurations/Invalid_Port (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.239549515+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Invalid_Port","Elapsed":0}
{"Time":"2025-10-04T21:53:54.239677572+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Missing_Server"}
{"Time":"2025-10-04T21:53:54.239699592+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Missing_Server","Output":"=== RUN   TestValidateConfig_InvalidConfigurations/Missing_Server\n"}
{"Time":"2025-10-04T21:53:54.243513538+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Missing_Server","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.251305611+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Missing_Server","Output":"--- PASS: TestValidateConfig_InvalidConfigurations/Missing_Server (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.251407093+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Missing_Server","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.251428529+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Empty_Config"}
{"Time":"2025-10-04T21:53:54.25143874+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Empty_Config","Output":"=== RUN   TestValidateConfig_InvalidConfigurations/Empty_Config\n"}
{"Time":"2025-10-04T21:53:54.251448618+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Empty_Config","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.251480008+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Empty_Config","Output":"--- PASS: TestValidateConfig_InvalidConfigurations/Empty_Config (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.251495571+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Empty_Config","Elapsed":0}
{"Time":"2025-10-04T21:53:54.251507701+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Malformed_YAML"}
{"Time":"2025-10-04T21:53:54.251517317+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Malformed_YAML","Output":"=== RUN   TestValidateConfig_InvalidConfigurations/Malformed_YAML\n"}
{"Time":"2025-10-04T21:53:54.251527096+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Malformed_YAML","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.251539449+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Malformed_YAML","Output":"--- PASS: TestValidateConfig_InvalidConfigurations/Malformed_YAML (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.251562953+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Malformed_YAML","Elapsed":0}
{"Time":"2025-10-04T21:53:54.251576251+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Retention_Policy_Negative_Age"}
{"Time":"2025-10-04T21:53:54.251586186+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Retention_Policy_Negative_Age","Output":"=== RUN   TestValidateConfig_InvalidConfigurations/Retention_Policy_Negative_Age\n"}
{"Time":"2025-10-04T21:53:54.251600583+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Retention_Policy_Negative_Age","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.256598058+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Retention_Policy_Negative_Age","Output":"--- PASS: TestValidateConfig_InvalidConfigurations/Retention_Policy_Negative_Age (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.256748237+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Retention_Policy_Negative_Age","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.256829381+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Retention_Policy_Excessive_Age"}
{"Time":"2025-10-04T21:53:54.256845829+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Retention_Policy_Excessive_Age","Output":"=== RUN   TestValidateConfig_InvalidConfigurations/Retention_Policy_Excessive_Age\n"}
{"Time":"2025-10-04T21:53:54.257507526+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Retention_Policy_Excessive_Age","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.263139341+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Retention_Policy_Excessive_Age","Output":"--- PASS: TestValidateConfig_InvalidConfigurations/Retention_Policy_Excessive_Age (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.263319441+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Retention_Policy_Excessive_Age","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.263400478+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Retention_Policy_Invalid_Type"}
{"Time":"2025-10-04T21:53:54.263422364+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Retention_Policy_Invalid_Type","Output":"=== RUN   TestValidateConfig_InvalidConfigurations/Retention_Policy_Invalid_Type\n"}
{"Time":"2025-10-04T21:53:54.263870712+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Retention_Policy_Invalid_Type","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.269367776+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Retention_Policy_Invalid_Type","Output":"--- PASS: TestValidateConfig_InvalidConfigurations/Retention_Policy_Invalid_Type (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.269852907+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Retention_Policy_Invalid_Type","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.271649777+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Camera_Negative_Poll_Interval"}
{"Time":"2025-10-04T21:53:54.271933996+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Camera_Negative_Poll_Interval","Output":"=== RUN   TestValidateConfig_InvalidConfigurations/Camera_Negative_Poll_Interval\n"}
{"Time":"2025-10-04T21:53:54.272158399+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Camera_Negative_Poll_Interval","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.282155187+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Camera_Negative_Poll_Interval","Output":"--- PASS: TestValidateConfig_InvalidConfigurations/Camera_Negative_Poll_Interval (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.283474865+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Camera_Negative_Poll_Interval","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.283915216+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Camera_Invalid_Device_Range"}
{"Time":"2025-10-04T21:53:54.283951657+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Camera_Invalid_Device_Range","Output":"=== RUN   TestValidateConfig_InvalidConfigurations/Camera_Invalid_Device_Range\n"}
{"Time":"2025-10-04T21:53:54.285808036+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Camera_Invalid_Device_Range","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.293308501+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Camera_Invalid_Device_Range","Output":"--- PASS: TestValidateConfig_InvalidConfigurations/Camera_Invalid_Device_Range (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.293395252+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Camera_Invalid_Device_Range","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.29341809+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/MediaMTX_Multiple_Issues"}
{"Time":"2025-10-04T21:53:54.293428887+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/MediaMTX_Multiple_Issues","Output":"=== RUN   TestValidateConfig_InvalidConfigurations/MediaMTX_Multiple_Issues\n"}
{"Time":"2025-10-04T21:53:54.293439786+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/MediaMTX_Multiple_Issues","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.296290235+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/MediaMTX_Multiple_Issues","Output":"--- PASS: TestValidateConfig_InvalidConfigurations/MediaMTX_Multiple_Issues (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.296603226+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/MediaMTX_Multiple_Issues","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.296764573+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Snapshot_Tiers_Multiple_Issues"}
{"Time":"2025-10-04T21:53:54.296786589+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Snapshot_Tiers_Multiple_Issues","Output":"=== RUN   TestValidateConfig_InvalidConfigurations/Snapshot_Tiers_Multiple_Issues\n"}
{"Time":"2025-10-04T21:53:54.297829383+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Snapshot_Tiers_Multiple_Issues","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.307144976+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Snapshot_Tiers_Multiple_Issues","Output":"--- PASS: TestValidateConfig_InvalidConfigurations/Snapshot_Tiers_Multiple_Issues (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.307259098+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Snapshot_Tiers_Multiple_Issues","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.307288891+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Combined_Edge_Cases"}
{"Time":"2025-10-04T21:53:54.30730251+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Combined_Edge_Cases","Output":"=== RUN   TestValidateConfig_InvalidConfigurations/Combined_Edge_Cases\n"}
{"Time":"2025-10-04T21:53:54.307312794+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Combined_Edge_Cases","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.314842561+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Combined_Edge_Cases","Output":"--- PASS: TestValidateConfig_InvalidConfigurations/Combined_Edge_Cases (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.314932863+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations/Combined_Edge_Cases","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.314959735+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations","Output":"--- PASS: TestValidateConfig_InvalidConfigurations (0.08s)\n"}
{"Time":"2025-10-04T21:53:54.314975752+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_InvalidConfigurations","Elapsed":0.08}
{"Time":"2025-10-04T21:53:54.314991356+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_BoundaryValues"}
{"Time":"2025-10-04T21:53:54.315002423+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_BoundaryValues","Output":"=== RUN   TestValidateConfig_BoundaryValues\n"}
{"Time":"2025-10-04T21:53:54.315014205+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_BoundaryValues","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.328235742+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_BoundaryValues","Output":"    config_validation_test.go:155: \n"}
{"Time":"2025-10-04T21:53:54.328336608+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_BoundaryValues","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_validation_test.go:155\n"}
{"Time":"2025-10-04T21:53:54.328354894+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_BoundaryValues","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:54.328366974+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_BoundaryValues","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:54.328378602+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_BoundaryValues","Output":"        \tTest:       \tTestValidateConfig_BoundaryValues\n"}
{"Time":"2025-10-04T21:53:54.32838929+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_BoundaryValues","Output":"        \tMessages:   \tFailed to load valid configuration\n"}
{"Time":"2025-10-04T21:53:54.329042025+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_BoundaryValues","Output":"--- FAIL: TestValidateConfig_BoundaryValues (0.02s)\n"}
{"Time":"2025-10-04T21:53:54.329170473+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidateConfig_BoundaryValues","Elapsed":0.02}
{"Time":"2025-10-04T21:53:54.329301416+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation"}
{"Time":"2025-10-04T21:53:54.329324908+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation","Output":"=== RUN   TestPathValidation\n"}
{"Time":"2025-10-04T21:53:54.329487329+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/valid_existing_path"}
{"Time":"2025-10-04T21:53:54.329519704+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/valid_existing_path","Output":"=== RUN   TestPathValidation/valid_existing_path\n"}
{"Time":"2025-10-04T21:53:54.329718265+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/valid_existing_path","Output":"--- PASS: TestPathValidation/valid_existing_path (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.329807962+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/valid_existing_path","Elapsed":0}
{"Time":"2025-10-04T21:53:54.329880223+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/valid_path_with_creation"}
{"Time":"2025-10-04T21:53:54.32989688+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/valid_path_with_creation","Output":"=== RUN   TestPathValidation/valid_path_with_creation\n"}
{"Time":"2025-10-04T21:53:54.330062103+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/valid_path_with_creation","Output":"--- PASS: TestPathValidation/valid_path_with_creation (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.333286079+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/valid_path_with_creation","Elapsed":0}
{"Time":"2025-10-04T21:53:54.333381866+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/relative_path"}
{"Time":"2025-10-04T21:53:54.333398855+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/relative_path","Output":"=== RUN   TestPathValidation/relative_path\n"}
{"Time":"2025-10-04T21:53:54.333419518+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/relative_path","Output":"--- PASS: TestPathValidation/relative_path (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.333430885+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/relative_path","Elapsed":0}
{"Time":"2025-10-04T21:53:54.333441862+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/empty_path"}
{"Time":"2025-10-04T21:53:54.33345014+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/empty_path","Output":"=== RUN   TestPathValidation/empty_path\n"}
{"Time":"2025-10-04T21:53:54.333461169+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/empty_path","Output":"--- PASS: TestPathValidation/empty_path (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.333494091+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/empty_path","Elapsed":0}
{"Time":"2025-10-04T21:53:54.333509615+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/simple_traversal"}
{"Time":"2025-10-04T21:53:54.333519641+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/simple_traversal","Output":"=== RUN   TestPathValidation/simple_traversal\n"}
{"Time":"2025-10-04T21:53:54.333532211+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/simple_traversal","Output":"--- PASS: TestPathValidation/simple_traversal (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.333550963+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/simple_traversal","Elapsed":0}
{"Time":"2025-10-04T21:53:54.333564153+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/backslash_traversal"}
{"Time":"2025-10-04T21:53:54.333573802+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/backslash_traversal","Output":"=== RUN   TestPathValidation/backslash_traversal\n"}
{"Time":"2025-10-04T21:53:54.333587052+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/backslash_traversal","Output":"--- PASS: TestPathValidation/backslash_traversal (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.333599658+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/backslash_traversal","Elapsed":0}
{"Time":"2025-10-04T21:53:54.33361175+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/mixed_separators"}
{"Time":"2025-10-04T21:53:54.333620129+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/mixed_separators","Output":"=== RUN   TestPathValidation/mixed_separators\n"}
{"Time":"2025-10-04T21:53:54.333632193+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/mixed_separators","Output":"--- PASS: TestPathValidation/mixed_separators (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.333644893+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/mixed_separators","Elapsed":0}
{"Time":"2025-10-04T21:53:54.33366233+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/nested_traversal"}
{"Time":"2025-10-04T21:53:54.333673968+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/nested_traversal","Output":"=== RUN   TestPathValidation/nested_traversal\n"}
{"Time":"2025-10-04T21:53:54.333687186+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/nested_traversal","Output":"--- PASS: TestPathValidation/nested_traversal (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.333700223+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/nested_traversal","Elapsed":0}
{"Time":"2025-10-04T21:53:54.333710693+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/double_traversal"}
{"Time":"2025-10-04T21:53:54.333719433+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/double_traversal","Output":"=== RUN   TestPathValidation/double_traversal\n"}
{"Time":"2025-10-04T21:53:54.333741315+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/double_traversal","Output":"--- PASS: TestPathValidation/double_traversal (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.333759641+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/double_traversal","Elapsed":0}
{"Time":"2025-10-04T21:53:54.333776728+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/encoded_traversal"}
{"Time":"2025-10-04T21:53:54.333787938+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/encoded_traversal","Output":"=== RUN   TestPathValidation/encoded_traversal\n"}
{"Time":"2025-10-04T21:53:54.333801497+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/encoded_traversal","Output":"--- PASS: TestPathValidation/encoded_traversal (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.333814435+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/encoded_traversal","Elapsed":0}
{"Time":"2025-10-04T21:53:54.33384062+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/non-existent_path"}
{"Time":"2025-10-04T21:53:54.33385118+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/non-existent_path","Output":"=== RUN   TestPathValidation/non-existent_path\n"}
{"Time":"2025-10-04T21:53:54.333861834+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/non-existent_path","Output":"--- PASS: TestPathValidation/non-existent_path (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.333876069+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/non-existent_path","Elapsed":0}
{"Time":"2025-10-04T21:53:54.333886997+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/non-existent_with_no_creation"}
{"Time":"2025-10-04T21:53:54.333895764+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/non-existent_with_no_creation","Output":"=== RUN   TestPathValidation/non-existent_with_no_creation\n"}
{"Time":"2025-10-04T21:53:54.333906194+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/non-existent_with_no_creation","Output":"--- PASS: TestPathValidation/non-existent_with_no_creation (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.333915851+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation/non-existent_with_no_creation","Elapsed":0}
{"Time":"2025-10-04T21:53:54.33393151+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation","Output":"--- PASS: TestPathValidation (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.333943188+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathValidation","Elapsed":0}
{"Time":"2025-10-04T21:53:54.333954394+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathFallback"}
{"Time":"2025-10-04T21:53:54.333964841+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathFallback","Output":"=== RUN   TestPathFallback\n"}
{"Time":"2025-10-04T21:53:54.333984063+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathFallback","Output":"    path_validation_test.go:87: Expected validation error due to read-only primary path: invalid recordings path: recordings_path is not writable: cannot write to directory: open /tmp/primary/.write_test_707600: permission denied\n"}
{"Time":"2025-10-04T21:53:54.333998722+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathFallback","Output":"--- PASS: TestPathFallback (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.334010968+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathFallback","Elapsed":0}
{"Time":"2025-10-04T21:53:54.334023379+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidatePathPattern"}
{"Time":"2025-10-04T21:53:54.334032923+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidatePathPattern","Output":"=== RUN   TestValidatePathPattern\n"}
{"Time":"2025-10-04T21:53:54.334044588+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidatePathPattern/valid_pattern"}
{"Time":"2025-10-04T21:53:54.334100724+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidatePathPattern/valid_pattern","Output":"=== RUN   TestValidatePathPattern/valid_pattern\n"}
{"Time":"2025-10-04T21:53:54.334123882+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidatePathPattern/valid_pattern","Output":"--- PASS: TestValidatePathPattern/valid_pattern (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.334139348+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidatePathPattern/valid_pattern","Elapsed":0}
{"Time":"2025-10-04T21:53:54.33415155+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidatePathPattern/empty_pattern"}
{"Time":"2025-10-04T21:53:54.334161527+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidatePathPattern/empty_pattern","Output":"=== RUN   TestValidatePathPattern/empty_pattern\n"}
{"Time":"2025-10-04T21:53:54.334174608+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidatePathPattern/empty_pattern","Output":"--- PASS: TestValidatePathPattern/empty_pattern (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.334185344+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidatePathPattern/empty_pattern","Elapsed":0}
{"Time":"2025-10-04T21:53:54.334199143+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidatePathPattern/dangerous_traversal"}
{"Time":"2025-10-04T21:53:54.334235763+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidatePathPattern/dangerous_traversal","Output":"=== RUN   TestValidatePathPattern/dangerous_traversal\n"}
{"Time":"2025-10-04T21:53:54.334254083+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidatePathPattern/dangerous_traversal","Output":"--- PASS: TestValidatePathPattern/dangerous_traversal (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.334270241+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidatePathPattern/dangerous_traversal","Elapsed":0}
{"Time":"2025-10-04T21:53:54.334296204+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidatePathPattern/dangerous_backslash"}
{"Time":"2025-10-04T21:53:54.33430953+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidatePathPattern/dangerous_backslash","Output":"=== RUN   TestValidatePathPattern/dangerous_backslash\n"}
{"Time":"2025-10-04T21:53:54.334323028+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidatePathPattern/dangerous_backslash","Output":"--- PASS: TestValidatePathPattern/dangerous_backslash (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.334334824+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidatePathPattern/dangerous_backslash","Elapsed":0}
{"Time":"2025-10-04T21:53:54.334346385+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidatePathPattern/dangerous_newline"}
{"Time":"2025-10-04T21:53:54.334355697+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidatePathPattern/dangerous_newline","Output":"=== RUN   TestValidatePathPattern/dangerous_newline\n"}
{"Time":"2025-10-04T21:53:54.334368305+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidatePathPattern/dangerous_newline","Output":"--- PASS: TestValidatePathPattern/dangerous_newline (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.334380456+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidatePathPattern/dangerous_newline","Elapsed":0}
{"Time":"2025-10-04T21:53:54.334390665+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidatePathPattern/too_long"}
{"Time":"2025-10-04T21:53:54.334399659+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidatePathPattern/too_long","Output":"=== RUN   TestValidatePathPattern/too_long\n"}
{"Time":"2025-10-04T21:53:54.334416551+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidatePathPattern/too_long","Output":"--- PASS: TestValidatePathPattern/too_long (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.334427149+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidatePathPattern/too_long","Elapsed":0}
{"Time":"2025-10-04T21:53:54.334438093+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidatePathPattern","Output":"--- PASS: TestValidatePathPattern (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.334474994+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestValidatePathPattern","Elapsed":0}
{"Time":"2025-10-04T21:53:54.334486474+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestCheckWritePermission"}
{"Time":"2025-10-04T21:53:54.334496471+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestCheckWritePermission","Output":"=== RUN   TestCheckWritePermission\n"}
{"Time":"2025-10-04T21:53:54.334507483+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestCheckWritePermission","Output":"--- PASS: TestCheckWritePermission (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.334517217+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestCheckWritePermission","Elapsed":0}
{"Time":"2025-10-04T21:53:54.33452702+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestCheckDiskSpace"}
{"Time":"2025-10-04T21:53:54.334546416+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestCheckDiskSpace","Output":"=== RUN   TestCheckDiskSpace\n"}
{"Time":"2025-10-04T21:53:54.334560725+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestCheckDiskSpace","Output":"--- PASS: TestCheckDiskSpace (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.334571593+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestCheckDiskSpace","Elapsed":0}
{"Time":"2025-10-04T21:53:54.334581252+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection"}
{"Time":"2025-10-04T21:53:54.334589421+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection","Output":"=== RUN   TestPathTraversalDetection\n"}
{"Time":"2025-10-04T21:53:54.334599801+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/simple_dotdot"}
{"Time":"2025-10-04T21:53:54.334609533+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/simple_dotdot","Output":"=== RUN   TestPathTraversalDetection/simple_dotdot\n"}
{"Time":"2025-10-04T21:53:54.334622055+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/simple_dotdot","Output":"--- PASS: TestPathTraversalDetection/simple_dotdot (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.334633221+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/simple_dotdot","Elapsed":0}
{"Time":"2025-10-04T21:53:54.334644641+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/multiple_dotdot"}
{"Time":"2025-10-04T21:53:54.334654177+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/multiple_dotdot","Output":"=== RUN   TestPathTraversalDetection/multiple_dotdot\n"}
{"Time":"2025-10-04T21:53:54.334667591+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/multiple_dotdot","Output":"--- PASS: TestPathTraversalDetection/multiple_dotdot (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.339864565+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/multiple_dotdot","Elapsed":0}
{"Time":"2025-10-04T21:53:54.339950855+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/backslash_dotdot"}
{"Time":"2025-10-04T21:53:54.339967588+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/backslash_dotdot","Output":"=== RUN   TestPathTraversalDetection/backslash_dotdot\n"}
{"Time":"2025-10-04T21:53:54.339990368+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/backslash_dotdot","Output":"--- PASS: TestPathTraversalDetection/backslash_dotdot (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.340004232+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/backslash_dotdot","Elapsed":0}
{"Time":"2025-10-04T21:53:54.340018669+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/mixed_separators"}
{"Time":"2025-10-04T21:53:54.34005078+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/mixed_separators","Output":"=== RUN   TestPathTraversalDetection/mixed_separators\n"}
{"Time":"2025-10-04T21:53:54.340067752+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/mixed_separators","Output":"--- PASS: TestPathTraversalDetection/mixed_separators (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.340080926+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/mixed_separators","Elapsed":0}
{"Time":"2025-10-04T21:53:54.340094095+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/nested_traversal"}
{"Time":"2025-10-04T21:53:54.340104206+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/nested_traversal","Output":"=== RUN   TestPathTraversalDetection/nested_traversal\n"}
{"Time":"2025-10-04T21:53:54.340123364+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/nested_traversal","Output":"--- PASS: TestPathTraversalDetection/nested_traversal (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.340135382+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/nested_traversal","Elapsed":0}
{"Time":"2025-10-04T21:53:54.340147089+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/double_slash"}
{"Time":"2025-10-04T21:53:54.340156536+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/double_slash","Output":"=== RUN   TestPathTraversalDetection/double_slash\n"}
{"Time":"2025-10-04T21:53:54.340169223+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/double_slash","Output":"--- PASS: TestPathTraversalDetection/double_slash (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.340181625+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/double_slash","Elapsed":0}
{"Time":"2025-10-04T21:53:54.340193768+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/encoded_traversal"}
{"Time":"2025-10-04T21:53:54.340203435+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/encoded_traversal","Output":"=== RUN   TestPathTraversalDetection/encoded_traversal\n"}
{"Time":"2025-10-04T21:53:54.340234616+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/encoded_traversal","Output":"--- PASS: TestPathTraversalDetection/encoded_traversal (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.340249329+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/encoded_traversal","Elapsed":0}
{"Time":"2025-10-04T21:53:54.340260466+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/traversal_in_middle"}
{"Time":"2025-10-04T21:53:54.340269199+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/traversal_in_middle","Output":"=== RUN   TestPathTraversalDetection/traversal_in_middle\n"}
{"Time":"2025-10-04T21:53:54.340280683+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/traversal_in_middle","Output":"--- PASS: TestPathTraversalDetection/traversal_in_middle (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.340317967+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/traversal_in_middle","Elapsed":0}
{"Time":"2025-10-04T21:53:54.340333725+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/traversal_at_end"}
{"Time":"2025-10-04T21:53:54.340344415+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/traversal_at_end","Output":"=== RUN   TestPathTraversalDetection/traversal_at_end\n"}
{"Time":"2025-10-04T21:53:54.340357998+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/traversal_at_end","Output":"--- PASS: TestPathTraversalDetection/traversal_at_end (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.340370147+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/traversal_at_end","Elapsed":0}
{"Time":"2025-10-04T21:53:54.340387262+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/valid_path"}
{"Time":"2025-10-04T21:53:54.340399049+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/valid_path","Output":"=== RUN   TestPathTraversalDetection/valid_path\n"}
{"Time":"2025-10-04T21:53:54.340413279+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/valid_path","Output":"--- PASS: TestPathTraversalDetection/valid_path (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.340425201+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/valid_path","Elapsed":0}
{"Time":"2025-10-04T21:53:54.340436474+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/valid_nested"}
{"Time":"2025-10-04T21:53:54.340445315+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/valid_nested","Output":"=== RUN   TestPathTraversalDetection/valid_nested\n"}
{"Time":"2025-10-04T21:53:54.340460444+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/valid_nested","Output":"--- PASS: TestPathTraversalDetection/valid_nested (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.340477335+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/valid_nested","Elapsed":0}
{"Time":"2025-10-04T21:53:54.34049074+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/valid_with_dots"}
{"Time":"2025-10-04T21:53:54.340501935+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/valid_with_dots","Output":"=== RUN   TestPathTraversalDetection/valid_with_dots\n"}
{"Time":"2025-10-04T21:53:54.340514973+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/valid_with_dots","Output":"--- PASS: TestPathTraversalDetection/valid_with_dots (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.340527026+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/valid_with_dots","Elapsed":0}
{"Time":"2025-10-04T21:53:54.340548379+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/valid_with_underscores"}
{"Time":"2025-10-04T21:53:54.340565676+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/valid_with_underscores","Output":"=== RUN   TestPathTraversalDetection/valid_with_underscores\n"}
{"Time":"2025-10-04T21:53:54.340580949+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/valid_with_underscores","Output":"--- PASS: TestPathTraversalDetection/valid_with_underscores (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.340592767+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/valid_with_underscores","Elapsed":0}
{"Time":"2025-10-04T21:53:54.340603302+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/valid_with_dashes"}
{"Time":"2025-10-04T21:53:54.3406124+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/valid_with_dashes","Output":"=== RUN   TestPathTraversalDetection/valid_with_dashes\n"}
{"Time":"2025-10-04T21:53:54.340624047+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/valid_with_dashes","Output":"--- PASS: TestPathTraversalDetection/valid_with_dashes (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.340638791+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/valid_with_dashes","Elapsed":0}
{"Time":"2025-10-04T21:53:54.340652643+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/valid_with_numbers"}
{"Time":"2025-10-04T21:53:54.340662098+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/valid_with_numbers","Output":"=== RUN   TestPathTraversalDetection/valid_with_numbers\n"}
{"Time":"2025-10-04T21:53:54.340673138+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/valid_with_numbers","Output":"--- PASS: TestPathTraversalDetection/valid_with_numbers (0.00s)\n"}
{"Time":"2025-10-04T21:53:54.340684951+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection/valid_with_numbers","Elapsed":0}
{"Time":"2025-10-04T21:53:54.340697575+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection","Output":"--- PASS: TestPathTraversalDetection (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.34070893+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestPathTraversalDetection","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.340725154+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoggingConfigurationUpdates"}
{"Time":"2025-10-04T21:53:54.340734371+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoggingConfigurationUpdates","Output":"=== CONT  TestConfigManager_LoggingConfigurationUpdates\n"}
{"Time":"2025-10-04T21:53:54.340744685+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoggingConfigurationUpdates","Output":"time=\"2025-10-04 21:53:54\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:54.348618613+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoggingConfigurationUpdates","Output":"    config_manager_test.go:230: \n"}
{"Time":"2025-10-04T21:53:54.348705662+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoggingConfigurationUpdates","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/config/config_manager_test.go:230\n"}
{"Time":"2025-10-04T21:53:54.348724006+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoggingConfigurationUpdates","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:54.348736893+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoggingConfigurationUpdates","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:54.348748699+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoggingConfigurationUpdates","Output":"        \tTest:       \tTestConfigManager_LoggingConfigurationUpdates\n"}
{"Time":"2025-10-04T21:53:54.349360488+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoggingConfigurationUpdates","Output":"--- FAIL: TestConfigManager_LoggingConfigurationUpdates (0.01s)\n"}
{"Time":"2025-10-04T21:53:54.352370331+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Test":"TestConfigManager_LoggingConfigurationUpdates","Elapsed":0.01}
{"Time":"2025-10-04T21:53:54.352401136+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Output":"FAIL\n"}
{"Time":"2025-10-04T21:53:54.361632798+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Output":"coverage: 5.2% of statements in ./...\n"}
{"Time":"2025-10-04T21:53:54.396669525+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Output":"FAIL\tgithub.com/camerarecorder/mediamtx-camera-service-go/internal/config\t0.882s\n"}
{"Time":"2025-10-04T21:53:54.396835075+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/config","Elapsed":0.886}
{"Time":"2025-10-04T21:53:55.089468385+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_RaceConditionDetection","Output":"    bounded_worker_pool_race_test.go:75: Statistics after 100 iterations with 500 total tasks:\n"}
{"Time":"2025-10-04T21:53:55.089747938+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_RaceConditionDetection","Output":"    bounded_worker_pool_race_test.go:76:   Completed: 488\n"}
{"Time":"2025-10-04T21:53:55.089884857+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_RaceConditionDetection","Output":"    bounded_worker_pool_race_test.go:77:   Failed: 0\n"}
{"Time":"2025-10-04T21:53:55.089910631+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_RaceConditionDetection","Output":"    bounded_worker_pool_race_test.go:78:   Timeout: 12\n"}
{"Time":"2025-10-04T21:53:55.089948421+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_RaceConditionDetection","Output":"    bounded_worker_pool_race_test.go:79:   Total Processed: 500\n"}
{"Time":"2025-10-04T21:53:55.089964874+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_RaceConditionDetection","Output":"    bounded_worker_pool_race_test.go:80:   Total Submitted: 500\n"}
{"Time":"2025-10-04T21:53:55.08997644+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_RaceConditionDetection","Output":"time=\"2025-10-04 21:53:55\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:53:55.089987835+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_RaceConditionDetection","Output":"time=\"2025-10-04 21:53:55\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:53:55.089998633+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_RaceConditionDetection","Output":"time=\"2025-10-04 21:53:55\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:53:55.09001727+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_RaceConditionDetection","Output":"--- PASS: TestBoundedWorkerPool_RaceConditionDetection (1.74s)\n"}
{"Time":"2025-10-04T21:53:55.090029659+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_RaceConditionDetection","Elapsed":1.74}
{"Time":"2025-10-04T21:53:55.090053878+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_StatisticsConsistency"}
{"Time":"2025-10-04T21:53:55.090062498+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_StatisticsConsistency","Output":"=== RUN   TestBoundedWorkerPool_StatisticsConsistency\n"}
{"Time":"2025-10-04T21:53:55.090069117+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_StatisticsConsistency","Output":"time=\"2025-10-04 21:53:55\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:53:55.242349051+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_StatisticsConsistency","Output":"time=\"2025-10-04 21:53:55\" level=warning msg=\"Task timed out in worker pool\"\n"}
{"Time":"2025-10-04T21:53:55.242434882+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_StatisticsConsistency","Output":"time=\"2025-10-04 21:53:55\" level=warning msg=\"Task timed out in worker pool\"\n"}
{"Time":"2025-10-04T21:53:55.342657436+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_StatisticsConsistency","Output":"time=\"2025-10-04 21:53:55\" level=warning msg=\"Task timed out in worker pool\"\n"}
{"Time":"2025-10-04T21:53:55.342750658+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_StatisticsConsistency","Output":"time=\"2025-10-04 21:53:55\" level=warning msg=\"Task timed out in worker pool\"\n"}
{"Time":"2025-10-04T21:53:55.342774383+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_StatisticsConsistency","Output":"time=\"2025-10-04 21:53:55\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:55.342816885+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_StatisticsConsistency","Output":"time=\"2025-10-04 21:53:55\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:55.342871917+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_StatisticsConsistency","Output":"time=\"2025-10-04 21:53:55\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:55.442998119+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_StatisticsConsistency","Output":"time=\"2025-10-04 21:53:55\" level=warning msg=\"Task timed out in worker pool\"\n"}
{"Time":"2025-10-04T21:53:55.593469573+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_StatisticsConsistency","Output":"    bounded_worker_pool_race_test.go:144: Final statistics:\n"}
{"Time":"2025-10-04T21:53:55.5936212+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_StatisticsConsistency","Output":"    bounded_worker_pool_race_test.go:145:   Completed: 10 (expected: 10)\n"}
{"Time":"2025-10-04T21:53:55.593643331+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_StatisticsConsistency","Output":"    bounded_worker_pool_race_test.go:146:   Failed: 3 (expected: 3)\n"}
{"Time":"2025-10-04T21:53:55.593654723+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_StatisticsConsistency","Output":"    bounded_worker_pool_race_test.go:147:   Timeout: 5 (expected: 5)\n"}
{"Time":"2025-10-04T21:53:55.593664605+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_StatisticsConsistency","Output":"    bounded_worker_pool_race_test.go:148:   Total: 18 (expected: 18)\n"}
{"Time":"2025-10-04T21:53:55.593674123+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_StatisticsConsistency","Output":"time=\"2025-10-04 21:53:55\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:53:55.593691691+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_StatisticsConsistency","Output":"time=\"2025-10-04 21:53:55\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:53:55.593702393+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_StatisticsConsistency","Output":"time=\"2025-10-04 21:53:55\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:53:55.593722881+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_StatisticsConsistency","Output":"--- PASS: TestBoundedWorkerPool_StatisticsConsistency (0.50s)\n"}
{"Time":"2025-10-04T21:53:55.593734966+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_StatisticsConsistency","Elapsed":0.5}
{"Time":"2025-10-04T21:53:55.593758795+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_HighConcurrencyStress"}
{"Time":"2025-10-04T21:53:55.593772037+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_HighConcurrencyStress","Output":"=== RUN   TestBoundedWorkerPool_HighConcurrencyStress\n"}
{"Time":"2025-10-04T21:53:55.593806047+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_HighConcurrencyStress","Output":"time=\"2025-10-04 21:53:55\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:53:56.120524008+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_HighConcurrencyStress","Output":"    bounded_worker_pool_race_test.go:213: High concurrency stress test results:\n"}
{"Time":"2025-10-04T21:53:56.120612932+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_HighConcurrencyStress","Output":"    bounded_worker_pool_race_test.go:214:   Expected tasks: 200\n"}
{"Time":"2025-10-04T21:53:56.120628263+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_HighConcurrencyStress","Output":"    bounded_worker_pool_race_test.go:215:   Completed: 200\n"}
{"Time":"2025-10-04T21:53:56.120637162+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_HighConcurrencyStress","Output":"    bounded_worker_pool_race_test.go:216:   Failed: 0\n"}
{"Time":"2025-10-04T21:53:56.120646018+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_HighConcurrencyStress","Output":"    bounded_worker_pool_race_test.go:217:   Timeout: 0\n"}
{"Time":"2025-10-04T21:53:56.120655611+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_HighConcurrencyStress","Output":"    bounded_worker_pool_race_test.go:218:   Total Processed: 200\n"}
{"Time":"2025-10-04T21:53:56.120665218+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_HighConcurrencyStress","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:53:56.120674823+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_HighConcurrencyStress","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:53:56.120683782+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_HighConcurrencyStress","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:53:56.12070304+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_HighConcurrencyStress","Output":"--- PASS: TestBoundedWorkerPool_HighConcurrencyStress (0.52s)\n"}
{"Time":"2025-10-04T21:53:56.120713674+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_HighConcurrencyStress","Elapsed":0.52}
{"Time":"2025-10-04T21:53:56.120728442+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress"}
{"Time":"2025-10-04T21:53:56.120737334+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"=== RUN   TestBoundedWorkerPool_ConcurrentPanicStress\n"}
{"Time":"2025-10-04T21:53:56.120747009+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:53:56.120775676+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.120786388+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.120795467+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.120804949+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.120814517+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.120823534+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.12083244+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.120841023+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.120849717+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.120858371+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.120867364+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.120876642+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.120886498+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.120895897+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.120920441+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.120932147+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.120942235+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.120951481+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.120960717+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.120969735+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.120978735+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.12101288+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.121024762+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.121034532+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.121043813+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.121052231+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.12106069+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.121069045+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.12108792+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.121099146+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.121108214+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.121120521+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.121128967+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.121140198+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.121149737+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.121158366+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.12116628+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.121174426+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.12118313+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.12119151+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.12122709+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.12124428+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.121261207+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.121270369+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.121282274+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.121290947+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.121301332+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.121310214+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.121318194+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.121326252+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.232423247+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:53:56.232515452+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:53:56.232534372+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:53:56.232559582+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Output":"--- PASS: TestBoundedWorkerPool_ConcurrentPanicStress (0.11s)\n"}
{"Time":"2025-10-04T21:53:56.232575914+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrentPanicStress","Elapsed":0.11}
{"Time":"2025-10-04T21:53:56.232597777+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ResourceLifecycle"}
{"Time":"2025-10-04T21:53:56.232612322+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ResourceLifecycle","Output":"=== RUN   TestBoundedWorkerPool_ResourceLifecycle\n"}
{"Time":"2025-10-04T21:53:56.23267731+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ResourceLifecycle","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:53:56.23269747+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ResourceLifecycle","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:53:56.232711143+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ResourceLifecycle","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:53:56.232725038+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ResourceLifecycle","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:53:56.232742225+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ResourceLifecycle","Output":"--- PASS: TestBoundedWorkerPool_ResourceLifecycle (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.232757165+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ResourceLifecycle","Elapsed":0}
{"Time":"2025-10-04T21:53:56.232772005+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrencyControl"}
{"Time":"2025-10-04T21:53:56.232784405+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrencyControl","Output":"=== RUN   TestBoundedWorkerPool_ConcurrencyControl\n"}
{"Time":"2025-10-04T21:53:56.232810126+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrencyControl","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:53:56.26387162+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrencyControl","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:53:56.263962283+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrencyControl","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:53:56.263986408+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrencyControl","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:53:56.264010393+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrencyControl","Output":"--- PASS: TestBoundedWorkerPool_ConcurrencyControl (0.03s)\n"}
{"Time":"2025-10-04T21:53:56.264024208+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConcurrencyControl","Elapsed":0.03}
{"Time":"2025-10-04T21:53:56.264042997+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_TaskTimeout"}
{"Time":"2025-10-04T21:53:56.26407384+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_TaskTimeout","Output":"=== RUN   TestBoundedWorkerPool_TaskTimeout\n"}
{"Time":"2025-10-04T21:53:56.264089944+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_TaskTimeout","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:53:56.314593062+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_TaskTimeout","Output":"time=\"2025-10-04 21:53:56\" level=warning msg=\"Task timed out in worker pool\"\n"}
{"Time":"2025-10-04T21:53:56.365012477+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_TaskTimeout","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:53:56.365104763+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_TaskTimeout","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:53:56.365125821+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_TaskTimeout","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:53:56.365151754+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_TaskTimeout","Output":"--- PASS: TestBoundedWorkerPool_TaskTimeout (0.10s)\n"}
{"Time":"2025-10-04T21:53:56.365168654+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_TaskTimeout","Elapsed":0.1}
{"Time":"2025-10-04T21:53:56.365188611+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_PanicRecovery"}
{"Time":"2025-10-04T21:53:56.365201585+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_PanicRecovery","Output":"=== RUN   TestBoundedWorkerPool_PanicRecovery\n"}
{"Time":"2025-10-04T21:53:56.365239109+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_PanicRecovery","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:53:56.365257127+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_PanicRecovery","Output":"time=\"2025-10-04 21:53:56\" level=error msg=\"Task panicked during execution\"\n"}
{"Time":"2025-10-04T21:53:56.36527208+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_PanicRecovery","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:53:56.365285939+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_PanicRecovery","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:53:56.365300055+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_PanicRecovery","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:53:56.365317136+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_PanicRecovery","Output":"--- PASS: TestBoundedWorkerPool_PanicRecovery (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.365355747+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_PanicRecovery","Elapsed":0}
{"Time":"2025-10-04T21:53:56.365374637+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_GracefulShutdown"}
{"Time":"2025-10-04T21:53:56.365389815+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_GracefulShutdown","Output":"=== RUN   TestBoundedWorkerPool_GracefulShutdown\n"}
{"Time":"2025-10-04T21:53:56.36540525+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_GracefulShutdown","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:53:56.375479757+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_GracefulShutdown","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:53:56.466430385+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_GracefulShutdown","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:53:56.46651465+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_GracefulShutdown","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:53:56.46654141+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_GracefulShutdown","Output":"--- PASS: TestBoundedWorkerPool_GracefulShutdown (0.10s)\n"}
{"Time":"2025-10-04T21:53:56.46655351+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_GracefulShutdown","Elapsed":0.1}
{"Time":"2025-10-04T21:53:56.466574092+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConstructorEdgeCases"}
{"Time":"2025-10-04T21:53:56.466604869+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConstructorEdgeCases","Output":"=== RUN   TestBoundedWorkerPool_ConstructorEdgeCases\n"}
{"Time":"2025-10-04T21:53:56.466618364+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConstructorEdgeCases","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:53:56.46662849+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConstructorEdgeCases","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:53:56.466637793+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConstructorEdgeCases","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:53:56.466647086+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConstructorEdgeCases","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:53:56.466656454+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConstructorEdgeCases","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:53:56.466684041+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConstructorEdgeCases","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:53:56.466694242+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConstructorEdgeCases","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:53:56.466703694+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConstructorEdgeCases","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:53:56.466712923+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConstructorEdgeCases","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:53:56.466722123+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConstructorEdgeCases","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:53:56.466731645+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConstructorEdgeCases","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:53:56.466740832+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConstructorEdgeCases","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:53:56.466756727+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConstructorEdgeCases","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:53:56.466766207+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConstructorEdgeCases","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:53:56.46677539+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConstructorEdgeCases","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:53:56.466784462+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConstructorEdgeCases","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:53:56.466795642+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConstructorEdgeCases","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:53:56.466805216+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConstructorEdgeCases","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:53:56.46681438+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConstructorEdgeCases","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:53:56.466831093+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConstructorEdgeCases","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:53:56.466841659+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConstructorEdgeCases","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:53:56.466851452+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConstructorEdgeCases","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:53:56.466861116+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConstructorEdgeCases","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:53:56.466870335+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConstructorEdgeCases","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:53:56.466882672+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConstructorEdgeCases","Output":"--- PASS: TestBoundedWorkerPool_ConstructorEdgeCases (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.466893241+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_ConstructorEdgeCases","Elapsed":0}
{"Time":"2025-10-04T21:53:56.466903779+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_SubmitToStoppedPool"}
{"Time":"2025-10-04T21:53:56.466912343+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_SubmitToStoppedPool","Output":"=== RUN   TestBoundedWorkerPool_SubmitToStoppedPool\n"}
{"Time":"2025-10-04T21:53:56.466923404+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_SubmitToStoppedPool","Output":"--- PASS: TestBoundedWorkerPool_SubmitToStoppedPool (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.466933513+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_SubmitToStoppedPool","Elapsed":0}
{"Time":"2025-10-04T21:53:56.466943566+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_StartStopEdgeCases"}
{"Time":"2025-10-04T21:53:56.466953061+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_StartStopEdgeCases","Output":"=== RUN   TestBoundedWorkerPool_StartStopEdgeCases\n"}
{"Time":"2025-10-04T21:53:56.466962711+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_StartStopEdgeCases","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:53:56.4669723+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_StartStopEdgeCases","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:53:56.466988149+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_StartStopEdgeCases","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:53:56.467005742+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_StartStopEdgeCases","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:53:56.467017592+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_StartStopEdgeCases","Output":"--- PASS: TestBoundedWorkerPool_StartStopEdgeCases (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.467027387+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_StartStopEdgeCases","Elapsed":0}
{"Time":"2025-10-04T21:53:56.467037208+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_SubmitWithCancelledContext"}
{"Time":"2025-10-04T21:53:56.467045575+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_SubmitWithCancelledContext","Output":"=== RUN   TestBoundedWorkerPool_SubmitWithCancelledContext\n"}
{"Time":"2025-10-04T21:53:56.467054473+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_SubmitWithCancelledContext","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:53:56.467063411+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_SubmitWithCancelledContext","Output":"time=\"2025-10-04 21:53:56\" level=warning msg=\"Task timed out in worker pool\"\n"}
{"Time":"2025-10-04T21:53:56.516759541+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_SubmitWithCancelledContext","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:53:56.517114846+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_SubmitWithCancelledContext","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:53:56.517356076+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_SubmitWithCancelledContext","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:53:56.517537352+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_SubmitWithCancelledContext","Output":"--- PASS: TestBoundedWorkerPool_SubmitWithCancelledContext (0.05s)\n"}
{"Time":"2025-10-04T21:53:56.517566784+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_SubmitWithCancelledContext","Elapsed":0.05}
{"Time":"2025-10-04T21:53:56.517589606+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_ProbeCapabilities_ReqCAM001_Success"}
{"Time":"2025-10-04T21:53:56.517602143+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_ProbeCapabilities_ReqCAM001_Success","Output":"=== RUN   TestCameraCapabilities_ProbeCapabilities_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:53:56.517615572+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_ProbeCapabilities_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:53:56.517649252+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_ProbeCapabilities_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:53:56.517665386+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_ProbeCapabilities_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:53:56.517678956+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_ProbeCapabilities_ReqCAM001_Success","Output":"    camera_capabilities_test.go:19: No devices available for capability testing\n"}
{"Time":"2025-10-04T21:53:56.517695002+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_ProbeCapabilities_ReqCAM001_Success","Output":"--- SKIP: TestCameraCapabilities_ProbeCapabilities_ReqCAM001_Success (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.517709106+04:00","Action":"skip","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_ProbeCapabilities_ReqCAM001_Success","Elapsed":0}
{"Time":"2025-10-04T21:53:56.517727794+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_InvalidDevice_ReqCAM001_Success"}
{"Time":"2025-10-04T21:53:56.517745848+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_InvalidDevice_ReqCAM001_Success","Output":"=== RUN   TestCameraCapabilities_InvalidDevice_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:53:56.517760132+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_InvalidDevice_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:53:56.517773681+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_InvalidDevice_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:53:56.517786209+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_InvalidDevice_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:53:56.517798212+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_InvalidDevice_ReqCAM001_Success","Output":"    camera_capabilities_test.go:58: Testing invalid device: /dev/video999\n"}
{"Time":"2025-10-04T21:53:56.517816137+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_InvalidDevice_ReqCAM001_Success","Output":"    camera_capabilities_test.go:60: ✅ Invalid device scenario validated\n"}
{"Time":"2025-10-04T21:53:56.517838352+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_InvalidDevice_ReqCAM001_Success","Output":"--- PASS: TestCameraCapabilities_InvalidDevice_ReqCAM001_Success (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.517862521+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_InvalidDevice_ReqCAM001_Success","Elapsed":0}
{"Time":"2025-10-04T21:53:56.517878142+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_PermissionDenied_ReqCAM001_Success"}
{"Time":"2025-10-04T21:53:56.517890097+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_PermissionDenied_ReqCAM001_Success","Output":"=== RUN   TestCameraCapabilities_PermissionDenied_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:53:56.517902862+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_PermissionDenied_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:53:56.517914886+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_PermissionDenied_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:53:56.517928336+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_PermissionDenied_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:53:56.517946171+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_PermissionDenied_ReqCAM001_Success","Output":"    camera_capabilities_test.go:71: Permission denied test - this would test devices with restricted access\n"}
{"Time":"2025-10-04T21:53:56.517960193+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_PermissionDenied_ReqCAM001_Success","Output":"    camera_capabilities_test.go:73: ✅ Permission denied scenario validated\n"}
{"Time":"2025-10-04T21:53:56.517977699+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_PermissionDenied_ReqCAM001_Success","Output":"--- PASS: TestCameraCapabilities_PermissionDenied_ReqCAM001_Success (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.517992484+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_PermissionDenied_ReqCAM001_Success","Elapsed":0}
{"Time":"2025-10-04T21:53:56.518004902+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_FormatDetection_ReqCAM001_Success"}
{"Time":"2025-10-04T21:53:56.518016956+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_FormatDetection_ReqCAM001_Success","Output":"=== RUN   TestCameraCapabilities_FormatDetection_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:53:56.518032101+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_FormatDetection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:53:56.518050217+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_FormatDetection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:53:56.518064227+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_FormatDetection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:53:56.51809109+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_FormatDetection_ReqCAM001_Success","Output":"    camera_capabilities_test.go:86: No devices available for format testing\n"}
{"Time":"2025-10-04T21:53:56.518109978+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_FormatDetection_ReqCAM001_Success","Output":"--- SKIP: TestCameraCapabilities_FormatDetection_ReqCAM001_Success (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.518124363+04:00","Action":"skip","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_FormatDetection_ReqCAM001_Success","Elapsed":0}
{"Time":"2025-10-04T21:53:56.518138104+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_ConcurrentProbing_ReqCAM001_Success"}
{"Time":"2025-10-04T21:53:56.518154288+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_ConcurrentProbing_ReqCAM001_Success","Output":"=== RUN   TestCameraCapabilities_ConcurrentProbing_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:53:56.51816904+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_ConcurrentProbing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:53:56.51818182+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_ConcurrentProbing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:53:56.518194944+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_ConcurrentProbing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:53:56.518223443+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_ConcurrentProbing_ReqCAM001_Success","Output":"    camera_capabilities_test.go:120: No devices available for concurrent testing\n"}
{"Time":"2025-10-04T21:53:56.518242848+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_ConcurrentProbing_ReqCAM001_Success","Output":"--- SKIP: TestCameraCapabilities_ConcurrentProbing_ReqCAM001_Success (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.51827407+04:00","Action":"skip","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_ConcurrentProbing_ReqCAM001_Success","Elapsed":0}
{"Time":"2025-10-04T21:53:56.518293068+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_ErrorRecovery_ReqCAM001_Success"}
{"Time":"2025-10-04T21:53:56.518305595+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_ErrorRecovery_ReqCAM001_Success","Output":"=== RUN   TestCameraCapabilities_ErrorRecovery_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:53:56.518340978+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:53:56.518366319+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:53:56.518385167+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:53:56.518402162+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_ErrorRecovery_ReqCAM001_Success","Output":"    camera_capabilities_test.go:178: ✅ Error recovery during capability probing validated\n"}
{"Time":"2025-10-04T21:53:56.518417971+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_ErrorRecovery_ReqCAM001_Success","Output":"--- PASS: TestCameraCapabilities_ErrorRecovery_ReqCAM001_Success (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.518431325+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraCapabilities_ErrorRecovery_ReqCAM001_Success","Elapsed":0}
{"Time":"2025-10-04T21:53:56.518446905+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Basic_ReqCAM001_Success"}
{"Time":"2025-10-04T21:53:56.518458979+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Basic_ReqCAM001_Success","Output":"=== RUN   TestDeviceDiscovery_Basic_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:53:56.518535582+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Basic_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:53:56.518558473+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Basic_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:53:56.518579791+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Basic_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:53:56.518595776+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Basic_ReqCAM001_Success","Output":"    camera_device_discovery_test.go:19: Discovered 0 devices\n"}
{"Time":"2025-10-04T21:53:56.518608003+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Basic_ReqCAM001_Success","Output":"    camera_device_discovery_test.go:27: ✅ Basic device discovery validated\n"}
{"Time":"2025-10-04T21:53:56.518627079+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Basic_ReqCAM001_Success","Output":"--- PASS: TestDeviceDiscovery_Basic_ReqCAM001_Success (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.518643962+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Basic_ReqCAM001_Success","Elapsed":0}
{"Time":"2025-10-04T21:53:56.518671275+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_NoDevices_ReqCAM001_Success"}
{"Time":"2025-10-04T21:53:56.518688757+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_NoDevices_ReqCAM001_Success","Output":"=== RUN   TestDeviceDiscovery_NoDevices_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:53:56.518774599+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_NoDevices_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:53:56.518817518+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_NoDevices_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:53:56.518837938+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_NoDevices_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:53:56.518854163+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_NoDevices_ReqCAM001_Success","Output":"    camera_device_discovery_test.go:40: Discovered 0 devices (expected: 0 or more)\n"}
{"Time":"2025-10-04T21:53:56.518869277+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_NoDevices_ReqCAM001_Success","Output":"    camera_device_discovery_test.go:45: ✅ No devices scenario validated\n"}
{"Time":"2025-10-04T21:53:56.518916865+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_NoDevices_ReqCAM001_Success","Output":"--- PASS: TestDeviceDiscovery_NoDevices_ReqCAM001_Success (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.518934038+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_NoDevices_ReqCAM001_Success","Elapsed":0}
{"Time":"2025-10-04T21:53:56.518950943+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_PartialFailures_ReqCAM001_Success"}
{"Time":"2025-10-04T21:53:56.518985947+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_PartialFailures_ReqCAM001_Success","Output":"=== RUN   TestDeviceDiscovery_PartialFailures_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:53:56.519088102+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_PartialFailures_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:53:56.51911136+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_PartialFailures_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:53:56.519124577+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_PartialFailures_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:53:56.519180526+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_PartialFailures_ReqCAM001_Success","Output":"    camera_device_discovery_test.go:57: Discovered 0 devices with potential partial failures\n"}
{"Time":"2025-10-04T21:53:56.519206106+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_PartialFailures_ReqCAM001_Success","Output":"    camera_device_discovery_test.go:63: ✅ Partial failures scenario validated\n"}
{"Time":"2025-10-04T21:53:56.519248859+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_PartialFailures_ReqCAM001_Success","Output":"--- PASS: TestDeviceDiscovery_PartialFailures_ReqCAM001_Success (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.519263233+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_PartialFailures_ReqCAM001_Success","Elapsed":0}
{"Time":"2025-10-04T21:53:56.519275856+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_ConcurrentAccess_ReqCAM001_Success"}
{"Time":"2025-10-04T21:53:56.519291727+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_ConcurrentAccess_ReqCAM001_Success","Output":"=== RUN   TestDeviceDiscovery_ConcurrentAccess_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:53:56.519332795+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_ConcurrentAccess_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:53:56.519347171+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_ConcurrentAccess_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:53:56.51936228+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_ConcurrentAccess_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:53:56.519460584+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_ConcurrentAccess_ReqCAM001_Success","Output":"    camera_device_discovery_test.go:91: Concurrent device discovery access completed successfully with 0 devices\n"}
{"Time":"2025-10-04T21:53:56.519515438+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_ConcurrentAccess_ReqCAM001_Success","Output":"    camera_device_discovery_test.go:92: ✅ Concurrent access validated\n"}
{"Time":"2025-10-04T21:53:56.519532979+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_ConcurrentAccess_ReqCAM001_Success","Output":"--- PASS: TestDeviceDiscovery_ConcurrentAccess_ReqCAM001_Success (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.519583847+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_ConcurrentAccess_ReqCAM001_Success","Elapsed":0}
{"Time":"2025-10-04T21:53:56.519606527+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success"}
{"Time":"2025-10-04T21:53:56.519618435+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"=== RUN   TestDeviceDiscovery_Stats_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:53:56.519663882+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:53:56.51968055+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:53:56.519698611+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:53:56.519711334+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:56.519747775+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:53:56.519764099+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:53:56.520011969+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:56.520054855+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:53:56.520070221+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:53:56.520081368+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:53:56.520092227+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:53:56.520107748+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:53:56.520118873+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:53:56.520130169+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:53:56.520157955+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:53:56.520479647+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:53:56.642465635+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:53:56.642562553+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:53:56.642585657+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:53:56.642598552+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:53:56.642616155+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:53:56.642641932+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:53:56.642652349+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:53:56.72027364+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:53:56.720374423+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"    camera_device_discovery_test.go:114: Initial stats: \u0026{Running:false ActiveTasks:0 PollingCycles:0 DeviceStateChanges:0 CapabilityProbesAttempted:0 CapabilityProbesSuccessful:0 CapabilityTimeouts:0 CapabilityParseErrors:0 PollingFailureCount:0 CurrentPollInterval:0.1 KnownDevicesCount:0 UdevEventsProcessed:0 UdevEventsFiltered:0 UdevEventsSkipped:0 DeviceEventsProcessed:0 DeviceEventsDropped:0 DevicesConnected:0}\n"}
{"Time":"2025-10-04T21:53:56.720401112+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"    camera_device_discovery_test.go:115: Final stats: \u0026{Running:true ActiveTasks:0 PollingCycles:1 DeviceStateChanges:1 CapabilityProbesAttempted:1 CapabilityProbesSuccessful:1 CapabilityTimeouts:0 CapabilityParseErrors:0 PollingFailureCount:0 CurrentPollInterval:0.1 KnownDevicesCount:1 UdevEventsProcessed:0 UdevEventsFiltered:0 UdevEventsSkipped:0 DeviceEventsProcessed:0 DeviceEventsDropped:0 DevicesConnected:0}\n"}
{"Time":"2025-10-04T21:53:56.720435123+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"    camera_device_discovery_test.go:120: ✅ Device discovery statistics validated\n"}
{"Time":"2025-10-04T21:53:56.720453237+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:56.720468334+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:56.720483136+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:56.720556826+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:53:56.720726462+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:56.72075356+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:53:56.72077202+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:53:56.720785831+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:53:56.720796548+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:53:56.821541817+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Output":"--- PASS: TestDeviceDiscovery_Stats_ReqCAM001_Success (0.30s)\n"}
{"Time":"2025-10-04T21:53:56.821643622+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceDiscovery_Stats_ReqCAM001_Success","Elapsed":0.3}
{"Time":"2025-10-04T21:53:56.82167346+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters"}
{"Time":"2025-10-04T21:53:56.821685391+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters","Output":"=== RUN   TestCameraMonitor_EdgeCases_WithAsserters\n"}
{"Time":"2025-10-04T21:53:56.821719808+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles"}
{"Time":"2025-10-04T21:53:56.821730097+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"=== RUN   TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles\n"}
{"Time":"2025-10-04T21:53:56.821921622+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:53:56.821953696+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:53:56.821968642+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:53:56.82198431+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:56.821997976+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:53:56.822010942+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:53:56.822134882+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:56.822163439+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:53:56.822176024+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:53:56.822185609+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:53:56.822197574+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:53:56.822238809+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:53:56.822257879+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:53:56.822271888+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:53:56.822412457+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:53:56.822571123+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:53:56.83426809+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:53:56.8343575+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:53:56.834380506+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:53:56.834394049+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:53:56.834405849+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:53:56.834429668+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:53:56.834440847+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:53:56.923354484+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:53:56.926947112+04:00","Action":"start","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx"}
{"Time":"2025-10-04T21:53:56.927078806+04:00","Action":"start","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security"}
{"Time":"2025-10-04T21:53:56.927160487+04:00","Action":"start","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/testutils"}
{"Time":"2025-10-04T21:53:56.931828499+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/testutils","Output":"\tgithub.com/camerarecorder/mediamtx-camera-service-go/internal/testutils\t\tcoverage: 0.0% of statements\n"}
{"Time":"2025-10-04T21:53:56.932574202+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewAPIKeyManager"}
{"Time":"2025-10-04T21:53:56.932620764+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewAPIKeyManager","Output":"=== RUN   TestNewAPIKeyManager\n"}
{"Time":"2025-10-04T21:53:56.932677881+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewAPIKeyManager/valid_configuration"}
{"Time":"2025-10-04T21:53:56.932690114+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewAPIKeyManager/valid_configuration","Output":"=== RUN   TestNewAPIKeyManager/valid_configuration\n"}
{"Time":"2025-10-04T21:53:56.935335581+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:56.935393046+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:56.935407454+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:56.935420335+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:53:56.935431286+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:56.935438785+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:53:56.935447922+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:53:56.935458725+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:53:56.935488458+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:53:56.935498844+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"    camera_asserters_test.go:147: ✅ Monitor stopped successfully\n"}
{"Time":"2025-10-04T21:53:56.935546185+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestAPIErrorHandling_400Scenarios"}
{"Time":"2025-10-04T21:53:56.935560723+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestAPIErrorHandling_400Scenarios","Output":"=== RUN   TestAPIErrorHandling_400Scenarios\n"}
{"Time":"2025-10-04T21:53:56.935597+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestAPIErrorHandling_400Scenarios","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:56.93561352+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewAPIKeyManager/valid_configuration","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"API Key Manager initialized\"\n"}
{"Time":"2025-10-04T21:53:56.935629365+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewAPIKeyManager/valid_configuration","Output":"--- PASS: TestNewAPIKeyManager/valid_configuration (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.935643016+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewAPIKeyManager/valid_configuration","Elapsed":0}
{"Time":"2025-10-04T21:53:56.93565858+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewAPIKeyManager/nil_configuration"}
{"Time":"2025-10-04T21:53:56.935667616+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewAPIKeyManager/nil_configuration","Output":"=== RUN   TestNewAPIKeyManager/nil_configuration\n"}
{"Time":"2025-10-04T21:53:56.935679841+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewAPIKeyManager/nil_configuration","Output":"--- PASS: TestNewAPIKeyManager/nil_configuration (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.935691045+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewAPIKeyManager/nil_configuration","Elapsed":0}
{"Time":"2025-10-04T21:53:56.935702088+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewAPIKeyManager/nil_logger"}
{"Time":"2025-10-04T21:53:56.935711282+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewAPIKeyManager/nil_logger","Output":"=== RUN   TestNewAPIKeyManager/nil_logger\n"}
{"Time":"2025-10-04T21:53:56.935724132+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewAPIKeyManager/nil_logger","Output":"--- PASS: TestNewAPIKeyManager/nil_logger (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.935735142+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewAPIKeyManager/nil_logger","Elapsed":0}
{"Time":"2025-10-04T21:53:56.935746502+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewAPIKeyManager","Output":"--- PASS: TestNewAPIKeyManager (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.93576566+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewAPIKeyManager","Elapsed":0}
{"Time":"2025-10-04T21:53:56.935777858+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_GenerateKey"}
{"Time":"2025-10-04T21:53:56.93578675+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_GenerateKey","Output":"=== RUN   TestAPIKeyManager_GenerateKey\n"}
{"Time":"2025-10-04T21:53:56.935797375+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_GenerateKey","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"API Key Manager initialized\"\n"}
{"Time":"2025-10-04T21:53:56.935808354+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_GenerateKey/valid_admin_key"}
{"Time":"2025-10-04T21:53:56.935817528+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_GenerateKey/valid_admin_key","Output":"=== RUN   TestAPIKeyManager_GenerateKey/valid_admin_key\n"}
{"Time":"2025-10-04T21:53:56.935827003+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_GenerateKey/valid_admin_key","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"API key generated successfully\"\n"}
{"Time":"2025-10-04T21:53:56.935839503+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_GenerateKey/valid_admin_key","Output":"--- PASS: TestAPIKeyManager_GenerateKey/valid_admin_key (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.935850214+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_GenerateKey/valid_admin_key","Elapsed":0}
{"Time":"2025-10-04T21:53:56.935861187+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_GenerateKey/valid_operator_key"}
{"Time":"2025-10-04T21:53:56.935870454+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_GenerateKey/valid_operator_key","Output":"=== RUN   TestAPIKeyManager_GenerateKey/valid_operator_key\n"}
{"Time":"2025-10-04T21:53:56.93588121+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_GenerateKey/valid_operator_key","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"API key generated successfully\"\n"}
{"Time":"2025-10-04T21:53:56.935900026+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_GenerateKey/valid_operator_key","Output":"--- PASS: TestAPIKeyManager_GenerateKey/valid_operator_key (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.935913893+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_GenerateKey/valid_operator_key","Elapsed":0}
{"Time":"2025-10-04T21:53:56.935926751+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_GenerateKey/valid_viewer_key"}
{"Time":"2025-10-04T21:53:56.935936989+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_GenerateKey/valid_viewer_key","Output":"=== RUN   TestAPIKeyManager_GenerateKey/valid_viewer_key\n"}
{"Time":"2025-10-04T21:53:56.935947763+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_GenerateKey/valid_viewer_key","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"API key generated successfully\"\n"}
{"Time":"2025-10-04T21:53:56.935970774+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_GenerateKey/valid_viewer_key","Output":"--- PASS: TestAPIKeyManager_GenerateKey/valid_viewer_key (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.935985489+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_GenerateKey/valid_viewer_key","Elapsed":0}
{"Time":"2025-10-04T21:53:56.935998042+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_GenerateKey/empty_role"}
{"Time":"2025-10-04T21:53:56.936007917+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_GenerateKey/empty_role","Output":"=== RUN   TestAPIKeyManager_GenerateKey/empty_role\n"}
{"Time":"2025-10-04T21:53:56.936022445+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_GenerateKey/empty_role","Output":"--- PASS: TestAPIKeyManager_GenerateKey/empty_role (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.936035725+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_GenerateKey/empty_role","Elapsed":0}
{"Time":"2025-10-04T21:53:56.936048953+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_GenerateKey","Output":"--- PASS: TestAPIKeyManager_GenerateKey (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.936060537+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_GenerateKey","Elapsed":0}
{"Time":"2025-10-04T21:53:56.93607201+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ValidateKey"}
{"Time":"2025-10-04T21:53:56.936082216+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ValidateKey","Output":"=== RUN   TestAPIKeyManager_ValidateKey\n"}
{"Time":"2025-10-04T21:53:56.936091863+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ValidateKey","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"API Key Manager initialized\"\n"}
{"Time":"2025-10-04T21:53:56.936110392+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ValidateKey","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"API key generated successfully\"\n"}
{"Time":"2025-10-04T21:53:56.93612341+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ValidateKey/valid_key"}
{"Time":"2025-10-04T21:53:56.936135079+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ValidateKey/valid_key","Output":"=== RUN   TestAPIKeyManager_ValidateKey/valid_key\n"}
{"Time":"2025-10-04T21:53:56.93614802+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ValidateKey/valid_key","Output":"--- PASS: TestAPIKeyManager_ValidateKey/valid_key (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.936160235+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ValidateKey/valid_key","Elapsed":0}
{"Time":"2025-10-04T21:53:56.936172387+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ValidateKey/invalid_key"}
{"Time":"2025-10-04T21:53:56.936190039+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ValidateKey/invalid_key","Output":"=== RUN   TestAPIKeyManager_ValidateKey/invalid_key\n"}
{"Time":"2025-10-04T21:53:56.936204611+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ValidateKey/invalid_key","Output":"--- PASS: TestAPIKeyManager_ValidateKey/invalid_key (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.936235691+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ValidateKey/invalid_key","Elapsed":0}
{"Time":"2025-10-04T21:53:56.936250821+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ValidateKey/empty_key"}
{"Time":"2025-10-04T21:53:56.936260843+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ValidateKey/empty_key","Output":"=== RUN   TestAPIKeyManager_ValidateKey/empty_key\n"}
{"Time":"2025-10-04T21:53:56.936274068+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ValidateKey/empty_key","Output":"--- PASS: TestAPIKeyManager_ValidateKey/empty_key (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.936287439+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ValidateKey/empty_key","Elapsed":0}
{"Time":"2025-10-04T21:53:56.936299874+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ValidateKey","Output":"--- PASS: TestAPIKeyManager_ValidateKey (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.936310241+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ValidateKey","Elapsed":0}
{"Time":"2025-10-04T21:53:56.936321205+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RevokeKey"}
{"Time":"2025-10-04T21:53:56.936330601+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RevokeKey","Output":"=== RUN   TestAPIKeyManager_RevokeKey\n"}
{"Time":"2025-10-04T21:53:56.936340236+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RevokeKey","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"API Key Manager initialized\"\n"}
{"Time":"2025-10-04T21:53:56.936350123+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RevokeKey","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"API key generated successfully\"\n"}
{"Time":"2025-10-04T21:53:56.936365556+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RevokeKey/valid_key_ID"}
{"Time":"2025-10-04T21:53:56.936407948+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RevokeKey/valid_key_ID","Output":"=== RUN   TestAPIKeyManager_RevokeKey/valid_key_ID\n"}
{"Time":"2025-10-04T21:53:56.936435841+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RevokeKey/valid_key_ID","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"API key revoked successfully\"\n"}
{"Time":"2025-10-04T21:53:56.936453581+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RevokeKey/valid_key_ID","Output":"--- PASS: TestAPIKeyManager_RevokeKey/valid_key_ID (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.936476118+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RevokeKey/valid_key_ID","Elapsed":0}
{"Time":"2025-10-04T21:53:56.93648936+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RevokeKey/invalid_key_ID"}
{"Time":"2025-10-04T21:53:56.936499535+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RevokeKey/invalid_key_ID","Output":"=== RUN   TestAPIKeyManager_RevokeKey/invalid_key_ID\n"}
{"Time":"2025-10-04T21:53:56.936515604+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RevokeKey/invalid_key_ID","Output":"--- PASS: TestAPIKeyManager_RevokeKey/invalid_key_ID (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.936528581+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RevokeKey/invalid_key_ID","Elapsed":0}
{"Time":"2025-10-04T21:53:56.936543259+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RevokeKey/empty_key_ID"}
{"Time":"2025-10-04T21:53:56.93655275+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RevokeKey/empty_key_ID","Output":"=== RUN   TestAPIKeyManager_RevokeKey/empty_key_ID\n"}
{"Time":"2025-10-04T21:53:56.936565228+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RevokeKey/empty_key_ID","Output":"--- PASS: TestAPIKeyManager_RevokeKey/empty_key_ID (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.936575174+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RevokeKey/empty_key_ID","Elapsed":0}
{"Time":"2025-10-04T21:53:56.936587556+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RevokeKey","Output":"--- PASS: TestAPIKeyManager_RevokeKey (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.936599228+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RevokeKey","Elapsed":0}
{"Time":"2025-10-04T21:53:56.936610219+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ListKeys"}
{"Time":"2025-10-04T21:53:56.936619808+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ListKeys","Output":"=== RUN   TestAPIKeyManager_ListKeys\n"}
{"Time":"2025-10-04T21:53:56.936631047+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ListKeys","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"API Key Manager initialized\"\n"}
{"Time":"2025-10-04T21:53:56.936642168+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ListKeys","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"API key generated successfully\"\n"}
{"Time":"2025-10-04T21:53:56.936661108+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ListKeys","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"API key generated successfully\"\n"}
{"Time":"2025-10-04T21:53:56.936674644+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ListKeys","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"API key generated successfully\"\n"}
{"Time":"2025-10-04T21:53:56.93668622+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ListKeys/all_keys"}
{"Time":"2025-10-04T21:53:56.936705185+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ListKeys/all_keys","Output":"=== RUN   TestAPIKeyManager_ListKeys/all_keys\n"}
{"Time":"2025-10-04T21:53:56.93672474+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ListKeys/all_keys","Output":"--- PASS: TestAPIKeyManager_ListKeys/all_keys (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.936738835+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ListKeys/all_keys","Elapsed":0}
{"Time":"2025-10-04T21:53:56.936749156+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ListKeys/admin_keys_only"}
{"Time":"2025-10-04T21:53:56.936758753+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ListKeys/admin_keys_only","Output":"=== RUN   TestAPIKeyManager_ListKeys/admin_keys_only\n"}
{"Time":"2025-10-04T21:53:56.936776182+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ListKeys/admin_keys_only","Output":"--- PASS: TestAPIKeyManager_ListKeys/admin_keys_only (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.936790234+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ListKeys/admin_keys_only","Elapsed":0}
{"Time":"2025-10-04T21:53:56.936806198+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ListKeys/operator_keys_only"}
{"Time":"2025-10-04T21:53:56.936816229+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ListKeys/operator_keys_only","Output":"=== RUN   TestAPIKeyManager_ListKeys/operator_keys_only\n"}
{"Time":"2025-10-04T21:53:56.936831611+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ListKeys/operator_keys_only","Output":"--- PASS: TestAPIKeyManager_ListKeys/operator_keys_only (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.936848165+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ListKeys/operator_keys_only","Elapsed":0}
{"Time":"2025-10-04T21:53:56.936861624+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ListKeys/viewer_keys_only"}
{"Time":"2025-10-04T21:53:56.936871066+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ListKeys/viewer_keys_only","Output":"=== RUN   TestAPIKeyManager_ListKeys/viewer_keys_only\n"}
{"Time":"2025-10-04T21:53:56.936887138+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ListKeys/viewer_keys_only","Output":"--- PASS: TestAPIKeyManager_ListKeys/viewer_keys_only (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.936902094+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ListKeys/viewer_keys_only","Elapsed":0}
{"Time":"2025-10-04T21:53:56.936917685+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ListKeys/non-existent_role"}
{"Time":"2025-10-04T21:53:56.936929239+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ListKeys/non-existent_role","Output":"=== RUN   TestAPIKeyManager_ListKeys/non-existent_role\n"}
{"Time":"2025-10-04T21:53:56.936959494+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ListKeys/non-existent_role","Output":"--- PASS: TestAPIKeyManager_ListKeys/non-existent_role (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.936975463+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ListKeys/non-existent_role","Elapsed":0}
{"Time":"2025-10-04T21:53:56.937107323+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ListKeys","Output":"--- PASS: TestAPIKeyManager_ListKeys (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.937131778+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_ListKeys","Elapsed":0}
{"Time":"2025-10-04T21:53:56.937151561+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RotateKeys"}
{"Time":"2025-10-04T21:53:56.93716517+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RotateKeys","Output":"=== RUN   TestAPIKeyManager_RotateKeys\n"}
{"Time":"2025-10-04T21:53:56.937255628+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RotateKeys","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"API Key Manager initialized\"\n"}
{"Time":"2025-10-04T21:53:56.937344724+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RotateKeys","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"API key generated successfully\"\n"}
{"Time":"2025-10-04T21:53:56.937477041+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RotateKeys","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"API key generated successfully\"\n"}
{"Time":"2025-10-04T21:53:56.937509652+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RotateKeys/rotate_admin_keys"}
{"Time":"2025-10-04T21:53:56.937521177+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RotateKeys/rotate_admin_keys","Output":"=== RUN   TestAPIKeyManager_RotateKeys/rotate_admin_keys\n"}
{"Time":"2025-10-04T21:53:56.93765656+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RotateKeys/rotate_admin_keys","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"API key generated successfully\"\n"}
{"Time":"2025-10-04T21:53:56.937681679+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RotateKeys/rotate_admin_keys","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"API key rotated successfully\"\n"}
{"Time":"2025-10-04T21:53:56.93780759+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RotateKeys/rotate_admin_keys","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"API key generated successfully\"\n"}
{"Time":"2025-10-04T21:53:56.937833313+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RotateKeys/rotate_admin_keys","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"API key rotated successfully\"\n"}
{"Time":"2025-10-04T21:53:56.937968809+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RotateKeys/rotate_admin_keys","Output":"--- PASS: TestAPIKeyManager_RotateKeys/rotate_admin_keys (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.938039629+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RotateKeys/rotate_admin_keys","Elapsed":0}
{"Time":"2025-10-04T21:53:56.938080739+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RotateKeys/rotate_non-existent_role"}
{"Time":"2025-10-04T21:53:56.938098096+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RotateKeys/rotate_non-existent_role","Output":"=== RUN   TestAPIKeyManager_RotateKeys/rotate_non-existent_role\n"}
{"Time":"2025-10-04T21:53:56.93815978+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RotateKeys/rotate_non-existent_role","Output":"--- PASS: TestAPIKeyManager_RotateKeys/rotate_non-existent_role (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.938178332+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RotateKeys/rotate_non-existent_role","Elapsed":0}
{"Time":"2025-10-04T21:53:56.938250337+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RotateKeys","Output":"--- PASS: TestAPIKeyManager_RotateKeys (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.938269873+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_RotateKeys","Elapsed":0}
{"Time":"2025-10-04T21:53:56.938301966+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_CleanupExpiredKeys"}
{"Time":"2025-10-04T21:53:56.938326871+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_CleanupExpiredKeys","Output":"=== RUN   TestAPIKeyManager_CleanupExpiredKeys\n"}
{"Time":"2025-10-04T21:53:56.938511336+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_CleanupExpiredKeys","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"API Key Manager initialized\"\n"}
{"Time":"2025-10-04T21:53:56.938537261+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_CleanupExpiredKeys","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"API key generated successfully\"\n"}
{"Time":"2025-10-04T21:53:56.938533805+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/testutils","Elapsed":0.011}
{"Time":"2025-10-04T21:53:56.938621539+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_CleanupExpiredKeys","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"API key generated successfully\"\n"}
{"Time":"2025-10-04T21:53:56.938741136+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_CleanupExpiredKeys","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Expired API keys cleaned up\"\n"}
{"Time":"2025-10-04T21:53:56.938912943+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_CleanupExpiredKeys","Output":"--- PASS: TestAPIKeyManager_CleanupExpiredKeys (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.938939421+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_CleanupExpiredKeys","Elapsed":0}
{"Time":"2025-10-04T21:53:56.938976465+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_GetStats"}
{"Time":"2025-10-04T21:53:56.939003495+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_GetStats","Output":"=== RUN   TestAPIKeyManager_GetStats\n"}
{"Time":"2025-10-04T21:53:56.939020944+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_GetStats","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"API Key Manager initialized\"\n"}
{"Time":"2025-10-04T21:53:56.93923257+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_GetStats","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"API key generated successfully\"\n"}
{"Time":"2025-10-04T21:53:56.939263295+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_GetStats","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"API key generated successfully\"\n"}
{"Time":"2025-10-04T21:53:56.939458506+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_GetStats","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"API key revoked successfully\"\n"}
{"Time":"2025-10-04T21:53:56.93954545+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_GetStats","Output":"--- PASS: TestAPIKeyManager_GetStats (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.939568968+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_GetStats","Elapsed":0}
{"Time":"2025-10-04T21:53:56.93958086+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_MaxKeysPerRole"}
{"Time":"2025-10-04T21:53:56.939589752+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_MaxKeysPerRole","Output":"=== RUN   TestAPIKeyManager_MaxKeysPerRole\n"}
{"Time":"2025-10-04T21:53:56.939729773+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_MaxKeysPerRole","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"API Key Manager initialized\"\n"}
{"Time":"2025-10-04T21:53:56.939820114+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_MaxKeysPerRole","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"API key generated successfully\"\n"}
{"Time":"2025-10-04T21:53:56.939934861+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_MaxKeysPerRole","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"API key generated successfully\"\n"}
{"Time":"2025-10-04T21:53:56.940100389+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_MaxKeysPerRole","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"API key revoked successfully\"\n"}
{"Time":"2025-10-04T21:53:56.940312082+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_MaxKeysPerRole","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"API key generated successfully\"\n"}
{"Time":"2025-10-04T21:53:56.940486866+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_MaxKeysPerRole","Output":"--- PASS: TestAPIKeyManager_MaxKeysPerRole (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.940565751+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_MaxKeysPerRole","Elapsed":0}
{"Time":"2025-10-04T21:53:56.941169975+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_UsageTracking"}
{"Time":"2025-10-04T21:53:56.941202377+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_UsageTracking","Output":"=== RUN   TestAPIKeyManager_UsageTracking\n"}
{"Time":"2025-10-04T21:53:56.94123737+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_UsageTracking","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"API Key Manager initialized\"\n"}
{"Time":"2025-10-04T21:53:56.941250066+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_UsageTracking","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"API key generated successfully\"\n"}
{"Time":"2025-10-04T21:53:56.94126706+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_UsageTracking","Output":"--- PASS: TestAPIKeyManager_UsageTracking (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.941277683+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAPIKeyManager_UsageTracking","Elapsed":0}
{"Time":"2025-10-04T21:53:56.941291371+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewInputValidator"}
{"Time":"2025-10-04T21:53:56.941303646+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewInputValidator","Output":"=== RUN   TestNewInputValidator\n"}
{"Time":"2025-10-04T21:53:56.943135944+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewInputValidator","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:56.943316499+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestAPIErrorHandling_400Scenarios","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:56.943355844+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestAPIErrorHandling_400Scenarios","Output":"--- FAIL: TestAPIErrorHandling_400Scenarios (0.01s)\n"}
{"Time":"2025-10-04T21:53:56.943373309+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestAPIErrorHandling_400Scenarios","Elapsed":0.01}
{"Time":"2025-10-04T21:53:56.943394553+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathStateTransitions_Recording"}
{"Time":"2025-10-04T21:53:56.943404401+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathStateTransitions_Recording","Output":"=== RUN   TestPathStateTransitions_Recording\n"}
{"Time":"2025-10-04T21:53:56.945356114+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathStateTransitions_Recording","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:56.945431542+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:56.945477737+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:53:56.945491617+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:53:56.945501241+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:56.945510062+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:53:56.945521126+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:53:56.945530398+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:53:56.945538918+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:53:56.945547332+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:53:56.9455557+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:53:56.945565085+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:53:56.945575958+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:53:56.945587007+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:53:56.945597912+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:53:56.945614768+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:53:56.94562392+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:53:56.945632139+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:53:56.945646123+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:53:56.945657301+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:53:56.949119263+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewInputValidator","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:56.949263969+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewInputValidator","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:56.949285556+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewInputValidator","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:56.949298043+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewInputValidator","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:56.949308601+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewInputValidator","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:56.949318326+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewInputValidator","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:56.949347809+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewInputValidator","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:56.949360337+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewInputValidator","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:56.949394746+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewInputValidator","Output":"        \tTest:       \tTestNewInputValidator\n"}
{"Time":"2025-10-04T21:53:56.949426648+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewInputValidator","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:56.949448729+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewInputValidator","Output":"--- FAIL: TestNewInputValidator (0.01s)\n"}
{"Time":"2025-10-04T21:53:56.949466285+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewInputValidator","Elapsed":0.01}
{"Time":"2025-10-04T21:53:56.949505609+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestValidationResult_NewValidationResult"}
{"Time":"2025-10-04T21:53:56.949518128+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestValidationResult_NewValidationResult","Output":"=== RUN   TestValidationResult_NewValidationResult\n"}
{"Time":"2025-10-04T21:53:56.949530746+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestValidationResult_NewValidationResult","Output":"--- PASS: TestValidationResult_NewValidationResult (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.949540969+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestValidationResult_NewValidationResult","Elapsed":0}
{"Time":"2025-10-04T21:53:56.949551218+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestValidationResult_AddError"}
{"Time":"2025-10-04T21:53:56.949564834+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestValidationResult_AddError","Output":"=== RUN   TestValidationResult_AddError\n"}
{"Time":"2025-10-04T21:53:56.949598638+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestValidationResult_AddError","Output":"--- PASS: TestValidationResult_AddError (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.949610258+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestValidationResult_AddError","Elapsed":0}
{"Time":"2025-10-04T21:53:56.949620592+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestValidationResult_AddWarning"}
{"Time":"2025-10-04T21:53:56.949629168+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestValidationResult_AddWarning","Output":"=== RUN   TestValidationResult_AddWarning\n"}
{"Time":"2025-10-04T21:53:56.949639915+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestValidationResult_AddWarning","Output":"--- PASS: TestValidationResult_AddWarning (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.94966783+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestValidationResult_AddWarning","Elapsed":0}
{"Time":"2025-10-04T21:53:56.949696024+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestValidationResult_HasErrors"}
{"Time":"2025-10-04T21:53:56.949706848+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestValidationResult_HasErrors","Output":"=== RUN   TestValidationResult_HasErrors\n"}
{"Time":"2025-10-04T21:53:56.949722289+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestValidationResult_HasErrors","Output":"--- PASS: TestValidationResult_HasErrors (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.949751365+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestValidationResult_HasErrors","Elapsed":0}
{"Time":"2025-10-04T21:53:56.949774503+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestValidationResult_GetErrorMessages"}
{"Time":"2025-10-04T21:53:56.949784788+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestValidationResult_GetErrorMessages","Output":"=== RUN   TestValidationResult_GetErrorMessages\n"}
{"Time":"2025-10-04T21:53:56.949796665+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestValidationResult_GetErrorMessages","Output":"--- PASS: TestValidationResult_GetErrorMessages (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.949806808+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestValidationResult_GetErrorMessages","Elapsed":0}
{"Time":"2025-10-04T21:53:56.949835356+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateCameraID"}
{"Time":"2025-10-04T21:53:56.949851241+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateCameraID","Output":"=== RUN   TestInputValidator_ValidateCameraID\n"}
{"Time":"2025-10-04T21:53:56.951271417+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateCameraID","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:56.951270266+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathStateTransitions_Recording","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:56.951352943+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathStateTransitions_Recording","Output":"--- FAIL: TestPathStateTransitions_Recording (0.01s)\n"}
{"Time":"2025-10-04T21:53:56.951370735+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathStateTransitions_Recording","Elapsed":0.01}
{"Time":"2025-10-04T21:53:56.951388576+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConcurrentRecordingOperations"}
{"Time":"2025-10-04T21:53:56.951401313+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConcurrentRecordingOperations","Output":"=== RUN   TestConcurrentRecordingOperations\n"}
{"Time":"2025-10-04T21:53:56.953257593+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConcurrentRecordingOperations","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:56.957198163+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateCameraID","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:56.957300835+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateCameraID","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:56.957317984+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateCameraID","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:56.957328729+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateCameraID","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:56.957339412+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateCameraID","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:56.957350206+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateCameraID","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:56.957360624+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateCameraID","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:56.957373077+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateCameraID","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:56.957388476+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateCameraID","Output":"        \tTest:       \tTestInputValidator_ValidateCameraID\n"}
{"Time":"2025-10-04T21:53:56.957400421+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateCameraID","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:56.957496167+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateCameraID","Output":"--- FAIL: TestInputValidator_ValidateCameraID (0.01s)\n"}
{"Time":"2025-10-04T21:53:56.957585354+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateCameraID","Elapsed":0.01}
{"Time":"2025-10-04T21:53:56.957686048+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateDuration"}
{"Time":"2025-10-04T21:53:56.957705681+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateDuration","Output":"=== RUN   TestInputValidator_ValidateDuration\n"}
{"Time":"2025-10-04T21:53:56.958956154+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConcurrentRecordingOperations","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:56.959019508+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConcurrentRecordingOperations","Output":"--- FAIL: TestConcurrentRecordingOperations (0.01s)\n"}
{"Time":"2025-10-04T21:53:56.959042085+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConcurrentRecordingOperations","Elapsed":0.01}
{"Time":"2025-10-04T21:53:56.959060014+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestMediaMTXRecovery_Restart"}
{"Time":"2025-10-04T21:53:56.959069823+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestMediaMTXRecovery_Restart","Output":"=== RUN   TestMediaMTXRecovery_Restart\n"}
{"Time":"2025-10-04T21:53:56.959092291+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateDuration","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:56.960981783+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestMediaMTXRecovery_Restart","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:56.963312505+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateDuration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:56.963390062+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateDuration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:56.963406325+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateDuration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:56.963417603+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateDuration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:56.963427867+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateDuration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:56.963459746+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateDuration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:56.9634734+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateDuration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:56.963483961+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateDuration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:56.963494505+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateDuration","Output":"        \tTest:       \tTestInputValidator_ValidateDuration\n"}
{"Time":"2025-10-04T21:53:56.963505474+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateDuration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:56.963546709+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateDuration","Output":"--- FAIL: TestInputValidator_ValidateDuration (0.01s)\n"}
{"Time":"2025-10-04T21:53:56.963563285+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateDuration","Elapsed":0.01}
{"Time":"2025-10-04T21:53:56.963580415+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateResolution"}
{"Time":"2025-10-04T21:53:56.963589442+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateResolution","Output":"=== RUN   TestInputValidator_ValidateResolution\n"}
{"Time":"2025-10-04T21:53:56.965589001+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateResolution","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:56.968203318+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestMediaMTXRecovery_Restart","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:56.968335868+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestMediaMTXRecovery_Restart","Output":"--- FAIL: TestMediaMTXRecovery_Restart (0.01s)\n"}
{"Time":"2025-10-04T21:53:56.968380173+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestMediaMTXRecovery_Restart","Elapsed":0.01}
{"Time":"2025-10-04T21:53:56.968506429+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewCircuitBreaker_ReqMTX007"}
{"Time":"2025-10-04T21:53:56.968518248+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewCircuitBreaker_ReqMTX007","Output":"=== RUN   TestNewCircuitBreaker_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:56.970061934+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewCircuitBreaker_ReqMTX007","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:56.9721523+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateResolution","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:56.972243734+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateResolution","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:56.972276216+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateResolution","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:56.972288806+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateResolution","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:56.972298485+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateResolution","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:56.972308098+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateResolution","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:56.972317441+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateResolution","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:56.972328843+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateResolution","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:56.972344761+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateResolution","Output":"        \tTest:       \tTestInputValidator_ValidateResolution\n"}
{"Time":"2025-10-04T21:53:56.97238218+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateResolution","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:56.973139553+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateResolution","Output":"--- FAIL: TestInputValidator_ValidateResolution (0.01s)\n"}
{"Time":"2025-10-04T21:53:56.973195173+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateResolution","Elapsed":0.01}
{"Time":"2025-10-04T21:53:56.973230131+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateFPS"}
{"Time":"2025-10-04T21:53:56.973247838+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateFPS","Output":"=== RUN   TestInputValidator_ValidateFPS\n"}
{"Time":"2025-10-04T21:53:56.975393288+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateFPS","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:56.978118425+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewCircuitBreaker_ReqMTX007","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:56.978238672+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewCircuitBreaker_ReqMTX007","Output":"--- FAIL: TestNewCircuitBreaker_ReqMTX007 (0.01s)\n"}
{"Time":"2025-10-04T21:53:56.978258632+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewCircuitBreaker_ReqMTX007","Elapsed":0.01}
{"Time":"2025-10-04T21:53:56.978285037+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_Call_Success_ReqMTX007"}
{"Time":"2025-10-04T21:53:56.978296289+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_Call_Success_ReqMTX007","Output":"=== RUN   TestCircuitBreaker_Call_Success_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:56.978662917+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateFPS","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:56.97881273+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateFPS","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:56.978836739+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateFPS","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:56.978848654+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateFPS","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:56.978885519+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateFPS","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:56.978898592+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateFPS","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:56.978909693+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateFPS","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:56.978921582+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateFPS","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:56.978933052+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateFPS","Output":"        \tTest:       \tTestInputValidator_ValidateFPS\n"}
{"Time":"2025-10-04T21:53:56.978943878+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateFPS","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:56.97895861+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateFPS","Output":"--- FAIL: TestInputValidator_ValidateFPS (0.01s)\n"}
{"Time":"2025-10-04T21:53:56.978976226+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateFPS","Elapsed":0.01}
{"Time":"2025-10-04T21:53:56.978990299+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateQuality"}
{"Time":"2025-10-04T21:53:56.979004902+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateQuality","Output":"=== RUN   TestInputValidator_ValidateQuality\n"}
{"Time":"2025-10-04T21:53:56.979735863+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_Call_Success_ReqMTX007","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:56.979776212+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateQuality","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:56.983206495+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateQuality","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:56.983284994+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateQuality","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:56.98332076+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateQuality","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:56.98333582+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateQuality","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:56.983347581+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateQuality","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:56.983358065+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateQuality","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:56.983368271+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateQuality","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:56.983380767+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateQuality","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:56.98339269+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateQuality","Output":"        \tTest:       \tTestInputValidator_ValidateQuality\n"}
{"Time":"2025-10-04T21:53:56.983403395+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateQuality","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:56.983423227+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateQuality","Output":"--- FAIL: TestInputValidator_ValidateQuality (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.983442621+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateQuality","Elapsed":0}
{"Time":"2025-10-04T21:53:56.983459153+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePriority"}
{"Time":"2025-10-04T21:53:56.983468632+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePriority","Output":"=== RUN   TestInputValidator_ValidatePriority\n"}
{"Time":"2025-10-04T21:53:56.986393075+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_Call_Success_ReqMTX007","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:56.986466603+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_Call_Success_ReqMTX007","Output":"--- FAIL: TestCircuitBreaker_Call_Success_ReqMTX007 (0.01s)\n"}
{"Time":"2025-10-04T21:53:56.986478462+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_Call_Success_ReqMTX007","Elapsed":0.01}
{"Time":"2025-10-04T21:53:56.986489778+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_Call_Failure_ReqMTX007"}
{"Time":"2025-10-04T21:53:56.986495712+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_Call_Failure_ReqMTX007","Output":"=== RUN   TestCircuitBreaker_Call_Failure_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:56.98642321+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePriority","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:56.987972979+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_Call_Failure_ReqMTX007","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:56.988304203+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePriority","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:56.988341427+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePriority","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:56.988367983+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePriority","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:56.988382034+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePriority","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:56.988397898+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePriority","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:56.988408163+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePriority","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:56.988431154+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePriority","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:56.988444761+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePriority","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:56.988456372+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePriority","Output":"        \tTest:       \tTestInputValidator_ValidatePriority\n"}
{"Time":"2025-10-04T21:53:56.988466113+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePriority","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:56.98848426+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePriority","Output":"--- FAIL: TestInputValidator_ValidatePriority (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.988496506+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePriority","Elapsed":0}
{"Time":"2025-10-04T21:53:56.988513974+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateRetentionDays"}
{"Time":"2025-10-04T21:53:56.988524553+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateRetentionDays","Output":"=== RUN   TestInputValidator_ValidateRetentionDays\n"}
{"Time":"2025-10-04T21:53:56.98927751+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateRetentionDays","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:56.992474613+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateRetentionDays","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:56.992550206+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateRetentionDays","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:56.99256729+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateRetentionDays","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:56.992578426+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateRetentionDays","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:56.992588073+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateRetentionDays","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:56.992634513+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateRetentionDays","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:56.992649725+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateRetentionDays","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:56.992675693+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateRetentionDays","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:56.992714747+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateRetentionDays","Output":"        \tTest:       \tTestInputValidator_ValidateRetentionDays\n"}
{"Time":"2025-10-04T21:53:56.992728876+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateRetentionDays","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:56.992750263+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateRetentionDays","Output":"--- FAIL: TestInputValidator_ValidateRetentionDays (0.00s)\n"}
{"Time":"2025-10-04T21:53:56.992769062+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateRetentionDays","Elapsed":0}
{"Time":"2025-10-04T21:53:56.992808786+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateUseCase"}
{"Time":"2025-10-04T21:53:56.992820789+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateUseCase","Output":"=== RUN   TestInputValidator_ValidateUseCase\n"}
{"Time":"2025-10-04T21:53:56.993490993+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateUseCase","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:56.99486773+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_Call_Failure_ReqMTX007","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:56.995029146+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_Call_Failure_ReqMTX007","Output":"--- FAIL: TestCircuitBreaker_Call_Failure_ReqMTX007 (0.01s)\n"}
{"Time":"2025-10-04T21:53:56.995067967+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_Call_Failure_ReqMTX007","Elapsed":0.01}
{"Time":"2025-10-04T21:53:56.995195486+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_Open_ReqMTX007"}
{"Time":"2025-10-04T21:53:56.995238424+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_Open_ReqMTX007","Output":"=== RUN   TestCircuitBreaker_Open_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:56.99645211+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_Open_ReqMTX007","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:56.998689277+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateUseCase","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:56.998742181+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateUseCase","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:56.998758046+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateUseCase","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:56.998768264+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateUseCase","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:56.998777887+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateUseCase","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:56.998788915+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateUseCase","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:56.998799291+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateUseCase","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:56.998810913+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateUseCase","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:56.998823504+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateUseCase","Output":"        \tTest:       \tTestInputValidator_ValidateUseCase\n"}
{"Time":"2025-10-04T21:53:56.998851712+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateUseCase","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:56.998873956+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateUseCase","Output":"--- FAIL: TestInputValidator_ValidateUseCase (0.01s)\n"}
{"Time":"2025-10-04T21:53:56.99888923+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateUseCase","Elapsed":0.01}
{"Time":"2025-10-04T21:53:56.99890398+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateAutoCleanup"}
{"Time":"2025-10-04T21:53:56.998913578+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateAutoCleanup","Output":"=== RUN   TestInputValidator_ValidateAutoCleanup\n"}
{"Time":"2025-10-04T21:53:57.000063344+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateAutoCleanup","Output":"time=\"2025-10-04 21:53:56\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.000905949+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_Open_ReqMTX007","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.000948623+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_Open_ReqMTX007","Output":"--- FAIL: TestCircuitBreaker_Open_ReqMTX007 (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.00107105+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_Open_ReqMTX007","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.001092192+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_HalfOpen_ReqMTX007"}
{"Time":"2025-10-04T21:53:57.001103003+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_HalfOpen_ReqMTX007","Output":"=== RUN   TestCircuitBreaker_HalfOpen_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:57.002659765+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_HalfOpen_ReqMTX007","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.003577829+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateAutoCleanup","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.003612511+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateAutoCleanup","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.003786122+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateAutoCleanup","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.003830676+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateAutoCleanup","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.003846447+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateAutoCleanup","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.003858053+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateAutoCleanup","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.003869131+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateAutoCleanup","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.00388177+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateAutoCleanup","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.003894664+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateAutoCleanup","Output":"        \tTest:       \tTestInputValidator_ValidateAutoCleanup\n"}
{"Time":"2025-10-04T21:53:57.003904673+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateAutoCleanup","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.00392258+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateAutoCleanup","Output":"--- FAIL: TestInputValidator_ValidateAutoCleanup (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.003969545+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateAutoCleanup","Elapsed":0}
{"Time":"2025-10-04T21:53:57.003988704+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_SanitizeString"}
{"Time":"2025-10-04T21:53:57.003999351+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_SanitizeString","Output":"=== RUN   TestInputValidator_SanitizeString\n"}
{"Time":"2025-10-04T21:53:57.004955062+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_SanitizeString","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.007433114+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_HalfOpen_ReqMTX007","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.007519708+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_HalfOpen_ReqMTX007","Output":"--- FAIL: TestCircuitBreaker_HalfOpen_ReqMTX007 (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.007557006+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_HalfOpen_ReqMTX007","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.007679963+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_HalfOpen_Failure_ReqMTX007"}
{"Time":"2025-10-04T21:53:57.007695315+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_HalfOpen_Failure_ReqMTX007","Output":"=== RUN   TestCircuitBreaker_HalfOpen_Failure_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:57.00816399+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_SanitizeString","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.008195758+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_SanitizeString","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.008317151+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_SanitizeString","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.008336268+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_SanitizeString","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.008349287+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_SanitizeString","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.008366944+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_SanitizeString","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.008496743+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_SanitizeString","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.008524026+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_SanitizeString","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.008553906+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_SanitizeString","Output":"        \tTest:       \tTestInputValidator_SanitizeString\n"}
{"Time":"2025-10-04T21:53:57.008674096+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_SanitizeString","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.00869393+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_SanitizeString","Output":"--- FAIL: TestInputValidator_SanitizeString (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.00871367+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_SanitizeString","Elapsed":0}
{"Time":"2025-10-04T21:53:57.008832953+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_SanitizeMap"}
{"Time":"2025-10-04T21:53:57.00885521+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_SanitizeMap","Output":"=== RUN   TestInputValidator_SanitizeMap\n"}
{"Time":"2025-10-04T21:53:57.009058585+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_HalfOpen_Failure_ReqMTX007","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.009808992+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_SanitizeMap","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.013771722+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_SanitizeMap","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.013856052+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_SanitizeMap","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.014065081+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_SanitizeMap","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.014095715+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_SanitizeMap","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.014109871+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_SanitizeMap","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.01412185+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_SanitizeMap","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.014147996+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_SanitizeMap","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.014163859+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_SanitizeMap","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.014176732+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_SanitizeMap","Output":"        \tTest:       \tTestInputValidator_SanitizeMap\n"}
{"Time":"2025-10-04T21:53:57.014187501+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_SanitizeMap","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.014238178+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_SanitizeMap","Output":"--- FAIL: TestInputValidator_SanitizeMap (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.014256693+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_SanitizeMap","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.014275565+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateRecordingOptions"}
{"Time":"2025-10-04T21:53:57.014285354+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateRecordingOptions","Output":"=== RUN   TestInputValidator_ValidateRecordingOptions\n"}
{"Time":"2025-10-04T21:53:57.01574617+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateRecordingOptions","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.015807241+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_HalfOpen_Failure_ReqMTX007","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.015833951+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_HalfOpen_Failure_ReqMTX007","Output":"--- FAIL: TestCircuitBreaker_HalfOpen_Failure_ReqMTX007 (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.015847342+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_HalfOpen_Failure_ReqMTX007","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.015872851+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_Reset_ReqMTX007"}
{"Time":"2025-10-04T21:53:57.015895405+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_Reset_ReqMTX007","Output":"=== RUN   TestCircuitBreaker_Reset_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:57.017344657+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_Reset_ReqMTX007","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.019836211+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateRecordingOptions","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.019886487+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateRecordingOptions","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.019900532+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateRecordingOptions","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.019911368+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateRecordingOptions","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.019921326+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateRecordingOptions","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.019930228+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateRecordingOptions","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.019942905+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateRecordingOptions","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.019954482+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateRecordingOptions","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.019965709+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateRecordingOptions","Output":"        \tTest:       \tTestInputValidator_ValidateRecordingOptions\n"}
{"Time":"2025-10-04T21:53:57.01997548+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateRecordingOptions","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.020076225+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateRecordingOptions","Output":"--- FAIL: TestInputValidator_ValidateRecordingOptions (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.020157021+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateRecordingOptions","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.020256595+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateLimit"}
{"Time":"2025-10-04T21:53:57.020277054+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateLimit","Output":"=== RUN   TestInputValidator_ValidateLimit\n"}
{"Time":"2025-10-04T21:53:57.021233472+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateLimit","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.02306961+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_Reset_ReqMTX007","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.023364904+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_Reset_ReqMTX007","Output":"--- FAIL: TestCircuitBreaker_Reset_ReqMTX007 (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.023407009+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_Reset_ReqMTX007","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.023431162+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_ContextCancellation_ReqMTX007"}
{"Time":"2025-10-04T21:53:57.023442259+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_ContextCancellation_ReqMTX007","Output":"=== RUN   TestCircuitBreaker_ContextCancellation_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:57.024804664+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_ContextCancellation_ReqMTX007","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.025506105+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateLimit","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.025560246+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateLimit","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.025576083+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateLimit","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.025607822+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateLimit","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.025622127+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateLimit","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.025633167+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateLimit","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.025642956+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateLimit","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.025655867+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateLimit","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.025667955+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateLimit","Output":"        \tTest:       \tTestInputValidator_ValidateLimit\n"}
{"Time":"2025-10-04T21:53:57.025678619+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateLimit","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.026275283+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateLimit","Output":"--- FAIL: TestInputValidator_ValidateLimit (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.02632477+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateLimit","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.026345442+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateDevicePath"}
{"Time":"2025-10-04T21:53:57.026356301+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateDevicePath","Output":"=== RUN   TestInputValidator_ValidateDevicePath\n"}
{"Time":"2025-10-04T21:53:57.027538394+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateDevicePath","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.028874783+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_ContextCancellation_ReqMTX007","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.028978641+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_ContextCancellation_ReqMTX007","Output":"--- FAIL: TestCircuitBreaker_ContextCancellation_ReqMTX007 (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.028997825+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreaker_ContextCancellation_ReqMTX007","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.029015124+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreakerError_ReqMTX007"}
{"Time":"2025-10-04T21:53:57.029025669+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreakerError_ReqMTX007","Output":"=== RUN   TestCircuitBreakerError_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:57.029051395+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreakerError_ReqMTX007","Output":"--- PASS: TestCircuitBreakerError_ReqMTX007 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.029081943+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestCircuitBreakerError_ReqMTX007","Elapsed":0}
{"Time":"2025-10-04T21:53:57.029100858+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_New_ReqMTX001_Success"}
{"Time":"2025-10-04T21:53:57.029110465+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_New_ReqMTX001_Success","Output":"=== RUN   TestClient_New_ReqMTX001_Success\n"}
{"Time":"2025-10-04T21:53:57.030585723+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_New_ReqMTX001_Success","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.032710088+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateDevicePath","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.032786923+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateDevicePath","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.032805371+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateDevicePath","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.032817026+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateDevicePath","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.032827385+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateDevicePath","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.03284926+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateDevicePath","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.032881171+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateDevicePath","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.032895875+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateDevicePath","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.032909612+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateDevicePath","Output":"        \tTest:       \tTestInputValidator_ValidateDevicePath\n"}
{"Time":"2025-10-04T21:53:57.032919999+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateDevicePath","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.035290216+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_New_ReqMTX001_Success","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.035364693+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_New_ReqMTX001_Success","Output":"--- FAIL: TestClient_New_ReqMTX001_Success (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.035382042+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_New_ReqMTX001_Success","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.035400088+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Get_ReqMTX001_Success"}
{"Time":"2025-10-04T21:53:57.035411559+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Get_ReqMTX001_Success","Output":"=== RUN   TestClient_Get_ReqMTX001_Success\n"}
{"Time":"2025-10-04T21:53:57.03543954+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateDevicePath","Output":"--- FAIL: TestInputValidator_ValidateDevicePath (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.035465745+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateDevicePath","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.035480284+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateFilename"}
{"Time":"2025-10-04T21:53:57.035490029+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateFilename","Output":"=== RUN   TestInputValidator_ValidateFilename\n"}
{"Time":"2025-10-04T21:53:57.035520786+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateFilename","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.036917042+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Get_ReqMTX001_Success","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.040714404+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateFilename","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.040796289+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateFilename","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.040813928+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateFilename","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.040825538+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateFilename","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.040837547+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateFilename","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.040849614+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateFilename","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.040860798+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateFilename","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.040874045+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateFilename","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.04088874+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateFilename","Output":"        \tTest:       \tTestInputValidator_ValidateFilename\n"}
{"Time":"2025-10-04T21:53:57.040900922+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateFilename","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.041037279+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateFilename","Output":"--- FAIL: TestInputValidator_ValidateFilename (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.041240068+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateFilename","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.04136834+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateIntegerRange"}
{"Time":"2025-10-04T21:53:57.041401278+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateIntegerRange","Output":"=== RUN   TestInputValidator_ValidateIntegerRange\n"}
{"Time":"2025-10-04T21:53:57.041530508+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Get_ReqMTX001_Success","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.041623607+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Get_ReqMTX001_Success","Output":"--- FAIL: TestClient_Get_ReqMTX001_Success (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.041720197+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Get_ReqMTX001_Success","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.041822327+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Post_ReqMTX001_Success"}
{"Time":"2025-10-04T21:53:57.0418394+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Post_ReqMTX001_Success","Output":"=== RUN   TestClient_Post_ReqMTX001_Success\n"}
{"Time":"2025-10-04T21:53:57.04324601+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateIntegerRange","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.043325781+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Post_ReqMTX001_Success","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.047447338+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:53:57.049225213+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateIntegerRange","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.049289484+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateIntegerRange","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.049306422+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateIntegerRange","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.049339615+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateIntegerRange","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.049354653+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateIntegerRange","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.049366603+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateIntegerRange","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.049377651+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateIntegerRange","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.04940142+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateIntegerRange","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.049415736+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateIntegerRange","Output":"        \tTest:       \tTestInputValidator_ValidateIntegerRange\n"}
{"Time":"2025-10-04T21:53:57.049432667+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateIntegerRange","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.049455659+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateIntegerRange","Output":"--- FAIL: TestInputValidator_ValidateIntegerRange (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.052312901+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Post_ReqMTX001_Success","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.052385104+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Post_ReqMTX001_Success","Output":"--- FAIL: TestClient_Post_ReqMTX001_Success (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.052402259+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Post_ReqMTX001_Success","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.052440473+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Put_ReqMTX001_Success"}
{"Time":"2025-10-04T21:53:57.052452862+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Put_ReqMTX001_Success","Output":"=== RUN   TestClient_Put_ReqMTX001_Success\n"}
{"Time":"2025-10-04T21:53:57.052463316+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Put_ReqMTX001_Success","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.052489598+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateIntegerRange","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.05250618+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePositiveInteger"}
{"Time":"2025-10-04T21:53:57.052522793+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePositiveInteger","Output":"=== RUN   TestInputValidator_ValidatePositiveInteger\n"}
{"Time":"2025-10-04T21:53:57.052534554+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePositiveInteger","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.057139437+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Put_ReqMTX001_Success","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.057321499+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Put_ReqMTX001_Success","Output":"--- FAIL: TestClient_Put_ReqMTX001_Success (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.057412735+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Put_ReqMTX001_Success","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.057493713+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Delete_ReqMTX001_Success"}
{"Time":"2025-10-04T21:53:57.05751138+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Delete_ReqMTX001_Success","Output":"=== RUN   TestClient_Delete_ReqMTX001_Success\n"}
{"Time":"2025-10-04T21:53:57.057658263+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:57.057850194+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:57.057891983+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:57.057916635+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:53:57.058128272+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:57.058152519+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:53:57.058168445+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:53:57.058188407+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:53:57.058204062+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:53:57.058281553+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"    camera_asserters_test.go:147: ✅ Monitor stopped successfully\n"}
{"Time":"2025-10-04T21:53:57.059426047+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Delete_ReqMTX001_Success","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.06284012+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePositiveInteger","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.063130739+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePositiveInteger","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.06315684+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePositiveInteger","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.063170355+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePositiveInteger","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.063180143+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePositiveInteger","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.063218586+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePositiveInteger","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.063232682+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePositiveInteger","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.06324304+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePositiveInteger","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.063254167+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePositiveInteger","Output":"        \tTest:       \tTestInputValidator_ValidatePositiveInteger\n"}
{"Time":"2025-10-04T21:53:57.063264574+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePositiveInteger","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.063298002+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePositiveInteger","Output":"--- FAIL: TestInputValidator_ValidatePositiveInteger (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.063318085+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePositiveInteger","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.063336309+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateNonNegativeInteger"}
{"Time":"2025-10-04T21:53:57.063345521+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateNonNegativeInteger","Output":"=== RUN   TestInputValidator_ValidateNonNegativeInteger\n"}
{"Time":"2025-10-04T21:53:57.063372369+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Delete_ReqMTX001_Success","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.063395422+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Delete_ReqMTX001_Success","Output":"--- FAIL: TestClient_Delete_ReqMTX001_Success (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.06341701+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Delete_ReqMTX001_Success","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.063429964+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_GetHealth_ReqMTX004_Success"}
{"Time":"2025-10-04T21:53:57.063444745+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_GetHealth_ReqMTX004_Success","Output":"=== RUN   TestClient_GetHealth_ReqMTX004_Success\n"}
{"Time":"2025-10-04T21:53:57.064539942+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_GetHealth_ReqMTX004_Success","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.064985207+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateNonNegativeInteger","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.068200788+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_GetHealth_ReqMTX004_Success","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.068320932+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_GetHealth_ReqMTX004_Success","Output":"--- FAIL: TestClient_GetHealth_ReqMTX004_Success (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.068340256+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_GetHealth_ReqMTX004_Success","Elapsed":0}
{"Time":"2025-10-04T21:53:57.068355804+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Get_ReqMTX007_ErrorHandling"}
{"Time":"2025-10-04T21:53:57.068366398+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Get_ReqMTX007_ErrorHandling","Output":"=== RUN   TestClient_Get_ReqMTX007_ErrorHandling\n"}
{"Time":"2025-10-04T21:53:57.068547942+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:57.068590442+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:53:57.068605572+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:53:57.068804232+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:57.068849917+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:53:57.068864399+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:53:57.068875028+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:53:57.068885019+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:53:57.068895147+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:53:57.068909056+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:53:57.068924372+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:53:57.068934642+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:53:57.069111152+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:53:57.069139172+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:53:57.069153017+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:53:57.069163381+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:53:57.069173763+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:53:57.069198985+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:53:57.069239043+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:53:57.072300998+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Get_ReqMTX007_ErrorHandling","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.073651407+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateNonNegativeInteger","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.073703274+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateNonNegativeInteger","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.07395294+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateNonNegativeInteger","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.07398743+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateNonNegativeInteger","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.073999455+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateNonNegativeInteger","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.074010673+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateNonNegativeInteger","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.074022453+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateNonNegativeInteger","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.07406003+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateNonNegativeInteger","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.074078309+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateNonNegativeInteger","Output":"        \tTest:       \tTestInputValidator_ValidateNonNegativeInteger\n"}
{"Time":"2025-10-04T21:53:57.074108498+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateNonNegativeInteger","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.074443519+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateNonNegativeInteger","Output":"--- FAIL: TestInputValidator_ValidateNonNegativeInteger (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.074804151+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateNonNegativeInteger","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.075580794+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateStringParameter"}
{"Time":"2025-10-04T21:53:57.075622823+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateStringParameter","Output":"=== RUN   TestInputValidator_ValidateStringParameter\n"}
{"Time":"2025-10-04T21:53:57.076616325+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Get_ReqMTX007_ErrorHandling","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.076795153+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Get_ReqMTX007_ErrorHandling","Output":"--- FAIL: TestClient_Get_ReqMTX007_ErrorHandling (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.078286288+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateStringParameter","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.078289257+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Get_ReqMTX007_ErrorHandling","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.078354093+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Get_ReqMTX001_APICompliance"}
{"Time":"2025-10-04T21:53:57.078367425+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Get_ReqMTX001_APICompliance","Output":"=== RUN   TestClient_Get_ReqMTX001_APICompliance\n"}
{"Time":"2025-10-04T21:53:57.078498316+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Get_ReqMTX001_APICompliance","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.082515925+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Get_ReqMTX001_APICompliance","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.082640254+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Get_ReqMTX001_APICompliance","Output":"--- FAIL: TestClient_Get_ReqMTX001_APICompliance (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.082658363+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Get_ReqMTX001_APICompliance","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.082692668+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Put_ReqMTX001_PathConfiguration"}
{"Time":"2025-10-04T21:53:57.082703845+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Put_ReqMTX001_PathConfiguration","Output":"=== RUN   TestClient_Put_ReqMTX001_PathConfiguration\n"}
{"Time":"2025-10-04T21:53:57.0836102+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Put_ReqMTX001_PathConfiguration","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.084357664+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateStringParameter","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.084403509+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateStringParameter","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.084420063+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateStringParameter","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.084432192+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateStringParameter","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.084443056+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateStringParameter","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.084454504+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateStringParameter","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.084504101+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateStringParameter","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.084517089+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateStringParameter","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.084546884+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateStringParameter","Output":"        \tTest:       \tTestInputValidator_ValidateStringParameter\n"}
{"Time":"2025-10-04T21:53:57.084558368+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateStringParameter","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.084578055+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateStringParameter","Output":"--- FAIL: TestInputValidator_ValidateStringParameter (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.084594167+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateStringParameter","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.08461068+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateOptionalString"}
{"Time":"2025-10-04T21:53:57.084620579+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateOptionalString","Output":"=== RUN   TestInputValidator_ValidateOptionalString\n"}
{"Time":"2025-10-04T21:53:57.086415191+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateOptionalString","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.08685957+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Put_ReqMTX001_PathConfiguration","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.086896077+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Put_ReqMTX001_PathConfiguration","Output":"--- FAIL: TestClient_Put_ReqMTX001_PathConfiguration (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.086914848+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Put_ReqMTX001_PathConfiguration","Elapsed":0}
{"Time":"2025-10-04T21:53:57.086930339+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_ParsePathListResponse_ReqMTX001_Success"}
{"Time":"2025-10-04T21:53:57.086938895+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_ParsePathListResponse_ReqMTX001_Success","Output":"=== RUN   TestClient_ParsePathListResponse_ReqMTX001_Success\n"}
{"Time":"2025-10-04T21:53:57.087221491+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_ParsePathListResponse_ReqMTX001_Success","Output":"--- PASS: TestClient_ParsePathListResponse_ReqMTX001_Success (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.087265736+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_ParsePathListResponse_ReqMTX001_Success","Elapsed":0}
{"Time":"2025-10-04T21:53:57.087282236+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_ParseHealthResponse_ReqMTX001_Success"}
{"Time":"2025-10-04T21:53:57.087310034+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_ParseHealthResponse_ReqMTX001_Success","Output":"=== RUN   TestClient_ParseHealthResponse_ReqMTX001_Success\n"}
{"Time":"2025-10-04T21:53:57.087352365+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_ParseHealthResponse_ReqMTX001_Success","Output":"--- PASS: TestClient_ParseHealthResponse_ReqMTX001_Success (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.087368794+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_ParseHealthResponse_ReqMTX001_Success","Elapsed":0}
{"Time":"2025-10-04T21:53:57.087380266+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Get_ReqMTX001_Concurrent"}
{"Time":"2025-10-04T21:53:57.087389816+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Get_ReqMTX001_Concurrent","Output":"=== RUN   TestClient_Get_ReqMTX001_Concurrent\n"}
{"Time":"2025-10-04T21:53:57.088177117+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Get_ReqMTX001_Concurrent","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.091468772+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Get_ReqMTX001_Concurrent","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.091555505+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Get_ReqMTX001_Concurrent","Output":"--- FAIL: TestClient_Get_ReqMTX001_Concurrent (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.091574052+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Get_ReqMTX001_Concurrent","Elapsed":0}
{"Time":"2025-10-04T21:53:57.091588783+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Close_ReqMTX001_Success"}
{"Time":"2025-10-04T21:53:57.091598532+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Close_ReqMTX001_Success","Output":"=== RUN   TestClient_Close_ReqMTX001_Success\n"}
{"Time":"2025-10-04T21:53:57.092483919+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Close_ReqMTX001_Success","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.093677889+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateOptionalString","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.09372812+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateOptionalString","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.093761282+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateOptionalString","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.093774734+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateOptionalString","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.093784693+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateOptionalString","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.093794511+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateOptionalString","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.093803795+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateOptionalString","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.093815093+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateOptionalString","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.093826412+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateOptionalString","Output":"        \tTest:       \tTestInputValidator_ValidateOptionalString\n"}
{"Time":"2025-10-04T21:53:57.093835808+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateOptionalString","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.094098087+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateOptionalString","Output":"--- FAIL: TestInputValidator_ValidateOptionalString (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.094134767+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateOptionalString","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.094333077+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateBooleanParameter"}
{"Time":"2025-10-04T21:53:57.09436816+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateBooleanParameter","Output":"=== RUN   TestInputValidator_ValidateBooleanParameter\n"}
{"Time":"2025-10-04T21:53:57.096125119+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateBooleanParameter","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.096464557+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Close_ReqMTX001_Success","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.096532105+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Close_ReqMTX001_Success","Output":"--- FAIL: TestClient_Close_ReqMTX001_Success (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.096555672+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestClient_Close_ReqMTX001_Success","Elapsed":0}
{"Time":"2025-10-04T21:53:57.096570679+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetConfig_ReqMTX003"}
{"Time":"2025-10-04T21:53:57.09658042+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetConfig_ReqMTX003","Output":"=== RUN   TestController_GetConfig_ReqMTX003\n"}
{"Time":"2025-10-04T21:53:57.0974721+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetConfig_ReqMTX003","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.100697754+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetConfig_ReqMTX003","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.100777556+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetConfig_ReqMTX003","Output":"--- FAIL: TestController_GetConfig_ReqMTX003 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.100801605+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetConfig_ReqMTX003","Elapsed":0}
{"Time":"2025-10-04T21:53:57.100818258+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_UpdateConfig_ReqMTX003"}
{"Time":"2025-10-04T21:53:57.100828254+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_UpdateConfig_ReqMTX003","Output":"=== RUN   TestController_UpdateConfig_ReqMTX003\n"}
{"Time":"2025-10-04T21:53:57.101897494+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_UpdateConfig_ReqMTX003","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.102368626+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateBooleanParameter","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.102404536+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateBooleanParameter","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.102420709+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateBooleanParameter","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.102444542+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateBooleanParameter","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.102457296+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateBooleanParameter","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.102468867+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateBooleanParameter","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.102479703+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateBooleanParameter","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.102490851+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateBooleanParameter","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.102504166+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateBooleanParameter","Output":"        \tTest:       \tTestInputValidator_ValidateBooleanParameter\n"}
{"Time":"2025-10-04T21:53:57.10251499+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateBooleanParameter","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.10253814+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateBooleanParameter","Output":"--- FAIL: TestInputValidator_ValidateBooleanParameter (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.102551734+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateBooleanParameter","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.102566202+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePaginationParams"}
{"Time":"2025-10-04T21:53:57.102600433+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePaginationParams","Output":"=== RUN   TestInputValidator_ValidatePaginationParams\n"}
{"Time":"2025-10-04T21:53:57.104280746+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePaginationParams","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.10537969+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_UpdateConfig_ReqMTX003","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.105429092+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_UpdateConfig_ReqMTX003","Output":"--- FAIL: TestController_UpdateConfig_ReqMTX003 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.105470475+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_UpdateConfig_ReqMTX003","Elapsed":0}
{"Time":"2025-10-04T21:53:57.105487781+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_UpdateConfig_InvalidConfig_ReqMTX004"}
{"Time":"2025-10-04T21:53:57.105498184+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_UpdateConfig_InvalidConfig_ReqMTX004","Output":"=== RUN   TestController_UpdateConfig_InvalidConfig_ReqMTX004\n"}
{"Time":"2025-10-04T21:53:57.107373853+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_UpdateConfig_InvalidConfig_ReqMTX004","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.109891775+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePaginationParams","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.109950303+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePaginationParams","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.109965857+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePaginationParams","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.10997757+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePaginationParams","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.109987798+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePaginationParams","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.110020324+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePaginationParams","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.110034139+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePaginationParams","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.110046714+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePaginationParams","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.110081853+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePaginationParams","Output":"        \tTest:       \tTestInputValidator_ValidatePaginationParams\n"}
{"Time":"2025-10-04T21:53:57.110099296+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePaginationParams","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.110122082+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePaginationParams","Output":"--- FAIL: TestInputValidator_ValidatePaginationParams (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.110142106+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidatePaginationParams","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.110161167+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateCommonRecordingParams"}
{"Time":"2025-10-04T21:53:57.110172561+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateCommonRecordingParams","Output":"=== RUN   TestInputValidator_ValidateCommonRecordingParams\n"}
{"Time":"2025-10-04T21:53:57.11052871+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_UpdateConfig_InvalidConfig_ReqMTX004","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.110696504+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_UpdateConfig_InvalidConfig_ReqMTX004","Output":"--- FAIL: TestController_UpdateConfig_InvalidConfig_ReqMTX004 (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.11073927+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_UpdateConfig_InvalidConfig_ReqMTX004","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.110756525+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetConfig_NotRunning_ReqMTX004"}
{"Time":"2025-10-04T21:53:57.110767466+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetConfig_NotRunning_ReqMTX004","Output":"=== RUN   TestController_GetConfig_NotRunning_ReqMTX004\n"}
{"Time":"2025-10-04T21:53:57.112026816+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetConfig_NotRunning_ReqMTX004","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.112034996+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateCommonRecordingParams","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.115556892+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateCommonRecordingParams","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.115634958+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateCommonRecordingParams","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.115651034+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateCommonRecordingParams","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.115662039+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateCommonRecordingParams","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.11567272+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateCommonRecordingParams","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.115683812+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateCommonRecordingParams","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.115694342+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateCommonRecordingParams","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.115706231+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateCommonRecordingParams","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.115739628+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateCommonRecordingParams","Output":"        \tTest:       \tTestInputValidator_ValidateCommonRecordingParams\n"}
{"Time":"2025-10-04T21:53:57.115753299+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateCommonRecordingParams","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.115775436+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateCommonRecordingParams","Output":"--- FAIL: TestInputValidator_ValidateCommonRecordingParams (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.115792915+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateCommonRecordingParams","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.115814619+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateOffset_Complete"}
{"Time":"2025-10-04T21:53:57.115825321+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateOffset_Complete","Output":"=== RUN   TestInputValidator_ValidateOffset_Complete\n"}
{"Time":"2025-10-04T21:53:57.116356597+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetConfig_NotRunning_ReqMTX004","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.116450268+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetConfig_NotRunning_ReqMTX004","Output":"--- FAIL: TestController_GetConfig_NotRunning_ReqMTX004 (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.116953987+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetConfig_NotRunning_ReqMTX004","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.116999444+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_UpdateConfig_NotRunning_ReqMTX004"}
{"Time":"2025-10-04T21:53:57.117013469+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_UpdateConfig_NotRunning_ReqMTX004","Output":"=== RUN   TestController_UpdateConfig_NotRunning_ReqMTX004\n"}
{"Time":"2025-10-04T21:53:57.117045626+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateOffset_Complete","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.118435717+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_UpdateConfig_NotRunning_ReqMTX004","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.12116501+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateOffset_Complete","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.121266664+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateOffset_Complete","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.121294819+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateOffset_Complete","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.121307414+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateOffset_Complete","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.12131836+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateOffset_Complete","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.121329355+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateOffset_Complete","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.121339149+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateOffset_Complete","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.121351647+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateOffset_Complete","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.121363158+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateOffset_Complete","Output":"        \tTest:       \tTestInputValidator_ValidateOffset_Complete\n"}
{"Time":"2025-10-04T21:53:57.121371971+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateOffset_Complete","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.121391788+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateOffset_Complete","Output":"--- FAIL: TestInputValidator_ValidateOffset_Complete (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.121410519+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateOffset_Complete","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.121426681+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateAutoCleanup_EdgeCases"}
{"Time":"2025-10-04T21:53:57.121436053+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateAutoCleanup_EdgeCases","Output":"=== RUN   TestInputValidator_ValidateAutoCleanup_EdgeCases\n"}
{"Time":"2025-10-04T21:53:57.122536442+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateAutoCleanup_EdgeCases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.123367952+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_UpdateConfig_NotRunning_ReqMTX004","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.123415322+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_UpdateConfig_NotRunning_ReqMTX004","Output":"--- FAIL: TestController_UpdateConfig_NotRunning_ReqMTX004 (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.123433939+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_UpdateConfig_NotRunning_ReqMTX004","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.123450319+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConfigIntegration_GetVersionInfo"}
{"Time":"2025-10-04T21:53:57.123461521+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConfigIntegration_GetVersionInfo","Output":"=== RUN   TestConfigIntegration_GetVersionInfo\n"}
{"Time":"2025-10-04T21:53:57.124930826+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConfigIntegration_GetVersionInfo","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.125985348+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateAutoCleanup_EdgeCases","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.126023751+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateAutoCleanup_EdgeCases","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.126038935+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateAutoCleanup_EdgeCases","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.126051095+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateAutoCleanup_EdgeCases","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.126062442+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateAutoCleanup_EdgeCases","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.126092426+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateAutoCleanup_EdgeCases","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.126104201+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateAutoCleanup_EdgeCases","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.126116145+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateAutoCleanup_EdgeCases","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.126128019+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateAutoCleanup_EdgeCases","Output":"        \tTest:       \tTestInputValidator_ValidateAutoCleanup_EdgeCases\n"}
{"Time":"2025-10-04T21:53:57.126137976+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateAutoCleanup_EdgeCases","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.126161652+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateAutoCleanup_EdgeCases","Output":"--- FAIL: TestInputValidator_ValidateAutoCleanup_EdgeCases (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.126179687+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidator_ValidateAutoCleanup_EdgeCases","Elapsed":0}
{"Time":"2025-10-04T21:53:57.126193697+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenGeneration"}
{"Time":"2025-10-04T21:53:57.126204248+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenGeneration","Output":"=== RUN   TestJWTHandler_TokenGeneration\n"}
{"Time":"2025-10-04T21:53:57.126231913+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenGeneration","Output":"=== PAUSE TestJWTHandler_TokenGeneration\n"}
{"Time":"2025-10-04T21:53:57.126244436+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenGeneration"}
{"Time":"2025-10-04T21:53:57.126255537+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit"}
{"Time":"2025-10-04T21:53:57.126269527+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit","Output":"=== RUN   TestJWTHandler_CheckRateLimit\n"}
{"Time":"2025-10-04T21:53:57.126281467+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Within_limit"}
{"Time":"2025-10-04T21:53:57.126291283+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Within_limit","Output":"=== RUN   TestJWTHandler_CheckRateLimit/Within_limit\n"}
{"Time":"2025-10-04T21:53:57.126315315+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Within_limit","Output":"=== PAUSE TestJWTHandler_CheckRateLimit/Within_limit\n"}
{"Time":"2025-10-04T21:53:57.126327026+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Within_limit"}
{"Time":"2025-10-04T21:53:57.126337815+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/At_limit"}
{"Time":"2025-10-04T21:53:57.12634787+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/At_limit","Output":"=== RUN   TestJWTHandler_CheckRateLimit/At_limit\n"}
{"Time":"2025-10-04T21:53:57.126368699+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/At_limit","Output":"=== PAUSE TestJWTHandler_CheckRateLimit/At_limit\n"}
{"Time":"2025-10-04T21:53:57.126379983+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/At_limit"}
{"Time":"2025-10-04T21:53:57.126390561+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Over_limit"}
{"Time":"2025-10-04T21:53:57.126399811+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Over_limit","Output":"=== RUN   TestJWTHandler_CheckRateLimit/Over_limit\n"}
{"Time":"2025-10-04T21:53:57.126410682+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Over_limit","Output":"=== PAUSE TestJWTHandler_CheckRateLimit/Over_limit\n"}
{"Time":"2025-10-04T21:53:57.126421816+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Over_limit"}
{"Time":"2025-10-04T21:53:57.126433939+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Multiple_clients"}
{"Time":"2025-10-04T21:53:57.126443323+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Multiple_clients","Output":"=== RUN   TestJWTHandler_CheckRateLimit/Multiple_clients\n"}
{"Time":"2025-10-04T21:53:57.126458324+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Multiple_clients","Output":"=== PAUSE TestJWTHandler_CheckRateLimit/Multiple_clients\n"}
{"Time":"2025-10-04T21:53:57.126468432+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Multiple_clients"}
{"Time":"2025-10-04T21:53:57.126479439+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Within_limit"}
{"Time":"2025-10-04T21:53:57.126488561+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Within_limit","Output":"=== CONT  TestJWTHandler_CheckRateLimit/Within_limit\n"}
{"Time":"2025-10-04T21:53:57.128079157+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Over_limit"}
{"Time":"2025-10-04T21:53:57.128119657+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Over_limit","Output":"=== CONT  TestJWTHandler_CheckRateLimit/Over_limit\n"}
{"Time":"2025-10-04T21:53:57.128152573+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/At_limit"}
{"Time":"2025-10-04T21:53:57.128165115+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/At_limit","Output":"=== CONT  TestJWTHandler_CheckRateLimit/At_limit\n"}
{"Time":"2025-10-04T21:53:57.128471456+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/At_limit","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.129374182+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/At_limit","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.129632779+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Multiple_clients"}
{"Time":"2025-10-04T21:53:57.129660065+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Multiple_clients","Output":"=== CONT  TestJWTHandler_CheckRateLimit/Multiple_clients\n"}
{"Time":"2025-10-04T21:53:57.131071273+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConfigIntegration_GetVersionInfo","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.131086033+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Multiple_clients","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.13118719+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConfigIntegration_GetVersionInfo","Output":"--- FAIL: TestConfigIntegration_GetVersionInfo (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.131286304+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Multiple_clients","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.131363516+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConfigIntegration_GetVersionInfo","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.131458578+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConfigIntegration_GetRecordingConfig_ReqMTX001_Success_Refactored"}
{"Time":"2025-10-04T21:53:57.131474902+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConfigIntegration_GetRecordingConfig_ReqMTX001_Success_Refactored","Output":"=== RUN   TestConfigIntegration_GetRecordingConfig_ReqMTX001_Success_Refactored\n"}
{"Time":"2025-10-04T21:53:57.134279662+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConfigIntegration_GetRecordingConfig_ReqMTX001_Success_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.138683535+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConfigIntegration_GetRecordingConfig_ReqMTX001_Success_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.139061527+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConfigIntegration_GetRecordingConfig_ReqMTX001_Success_Refactored","Output":"--- FAIL: TestConfigIntegration_GetRecordingConfig_ReqMTX001_Success_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.139351885+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConfigIntegration_GetRecordingConfig_ReqMTX001_Success_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.139645214+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConfigIntegration_GetSnapshotConfig_ReqMTX001_Success_Refactored"}
{"Time":"2025-10-04T21:53:57.139675049+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConfigIntegration_GetSnapshotConfig_ReqMTX001_Success_Refactored","Output":"=== RUN   TestConfigIntegration_GetSnapshotConfig_ReqMTX001_Success_Refactored\n"}
{"Time":"2025-10-04T21:53:57.140884955+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Multiple_clients","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.140952382+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Multiple_clients","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.140968227+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Multiple_clients","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.140979904+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Multiple_clients","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.140990653+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Multiple_clients","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.141001399+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Multiple_clients","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.141011608+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Multiple_clients","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.141044627+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Multiple_clients","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.141058675+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Multiple_clients","Output":"        \tTest:       \tTestJWTHandler_CheckRateLimit/Multiple_clients\n"}
{"Time":"2025-10-04T21:53:57.14106882+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Multiple_clients","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.141088641+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Multiple_clients","Output":"--- FAIL: TestJWTHandler_CheckRateLimit/Multiple_clients (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.143236533+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConfigIntegration_GetSnapshotConfig_ReqMTX001_Success_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.143219386+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Multiple_clients","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.143328083+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/At_limit","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.143342053+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/At_limit","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.143370904+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/At_limit","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.143383549+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/At_limit","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.143394542+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/At_limit","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.143404915+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/At_limit","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.143455922+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/At_limit","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.143473278+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/At_limit","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.143484902+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/At_limit","Output":"        \tTest:       \tTestJWTHandler_CheckRateLimit/At_limit\n"}
{"Time":"2025-10-04T21:53:57.143494462+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/At_limit","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.143510055+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/At_limit","Output":"--- FAIL: TestJWTHandler_CheckRateLimit/At_limit (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.143640448+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/At_limit","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.143658164+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Within_limit","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.143669559+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Within_limit","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.143898963+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Within_limit","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.143919328+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Within_limit","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.143928862+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Within_limit","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.143938192+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Within_limit","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.143960735+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Within_limit","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.143974025+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Within_limit","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.143984167+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Within_limit","Output":"        \tTest:       \tTestJWTHandler_CheckRateLimit/Within_limit\n"}
{"Time":"2025-10-04T21:53:57.143999308+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Within_limit","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.144013534+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Within_limit","Output":"--- FAIL: TestJWTHandler_CheckRateLimit/Within_limit (0.02s)\n"}
{"Time":"2025-10-04T21:53:57.144501642+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Within_limit","Elapsed":0.02}
{"Time":"2025-10-04T21:53:57.144593385+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Over_limit","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.144625883+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Over_limit","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.144639782+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Over_limit","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.144650544+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Over_limit","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.14466011+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Over_limit","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.144670051+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Over_limit","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.144679327+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Over_limit","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.144721607+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Over_limit","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.144740996+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Over_limit","Output":"        \tTest:       \tTestJWTHandler_CheckRateLimit/Over_limit\n"}
{"Time":"2025-10-04T21:53:57.144752399+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Over_limit","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.14478301+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Over_limit","Output":"--- FAIL: TestJWTHandler_CheckRateLimit/Over_limit (0.02s)\n"}
{"Time":"2025-10-04T21:53:57.144802107+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit/Over_limit","Elapsed":0.02}
{"Time":"2025-10-04T21:53:57.144814347+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit","Output":"--- FAIL: TestJWTHandler_CheckRateLimit (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.144832758+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CheckRateLimit","Elapsed":0}
{"Time":"2025-10-04T21:53:57.144867563+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_RecordRequest"}
{"Time":"2025-10-04T21:53:57.144880324+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_RecordRequest","Output":"=== RUN   TestJWTHandler_RecordRequest\n"}
{"Time":"2025-10-04T21:53:57.145064002+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_RecordRequest","Output":"=== PAUSE TestJWTHandler_RecordRequest\n"}
{"Time":"2025-10-04T21:53:57.145146986+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_RecordRequest"}
{"Time":"2025-10-04T21:53:57.145196016+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetClientRateInfo"}
{"Time":"2025-10-04T21:53:57.145283261+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetClientRateInfo","Output":"=== RUN   TestJWTHandler_GetClientRateInfo\n"}
{"Time":"2025-10-04T21:53:57.145320272+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetClientRateInfo","Output":"=== PAUSE TestJWTHandler_GetClientRateInfo\n"}
{"Time":"2025-10-04T21:53:57.145373907+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetClientRateInfo"}
{"Time":"2025-10-04T21:53:57.145403104+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_SetRateLimit"}
{"Time":"2025-10-04T21:53:57.145477974+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_SetRateLimit","Output":"=== RUN   TestJWTHandler_SetRateLimit\n"}
{"Time":"2025-10-04T21:53:57.145544713+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_SetRateLimit","Output":"=== PAUSE TestJWTHandler_SetRateLimit\n"}
{"Time":"2025-10-04T21:53:57.145573151+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_SetRateLimit"}
{"Time":"2025-10-04T21:53:57.145624581+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CleanupExpiredClients"}
{"Time":"2025-10-04T21:53:57.145638007+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CleanupExpiredClients","Output":"=== RUN   TestJWTHandler_CleanupExpiredClients\n"}
{"Time":"2025-10-04T21:53:57.145649275+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CleanupExpiredClients","Output":"=== PAUSE TestJWTHandler_CleanupExpiredClients\n"}
{"Time":"2025-10-04T21:53:57.145658506+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CleanupExpiredClients"}
{"Time":"2025-10-04T21:53:57.145668586+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_IsTokenExpired"}
{"Time":"2025-10-04T21:53:57.145699825+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_IsTokenExpired","Output":"=== RUN   TestJWTHandler_IsTokenExpired\n"}
{"Time":"2025-10-04T21:53:57.145711064+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_IsTokenExpired","Output":"=== PAUSE TestJWTHandler_IsTokenExpired\n"}
{"Time":"2025-10-04T21:53:57.145720248+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_IsTokenExpired"}
{"Time":"2025-10-04T21:53:57.145729865+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetSecretKey"}
{"Time":"2025-10-04T21:53:57.145737989+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetSecretKey","Output":"=== RUN   TestJWTHandler_GetSecretKey\n"}
{"Time":"2025-10-04T21:53:57.145747861+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetSecretKey","Output":"=== PAUSE TestJWTHandler_GetSecretKey\n"}
{"Time":"2025-10-04T21:53:57.14577532+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetSecretKey"}
{"Time":"2025-10-04T21:53:57.1457867+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetAlgorithm"}
{"Time":"2025-10-04T21:53:57.145795888+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetAlgorithm","Output":"=== RUN   TestJWTHandler_GetAlgorithm\n"}
{"Time":"2025-10-04T21:53:57.145805884+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetAlgorithm","Output":"=== PAUSE TestJWTHandler_GetAlgorithm\n"}
{"Time":"2025-10-04T21:53:57.145814808+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetAlgorithm"}
{"Time":"2025-10-04T21:53:57.145858642+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation"}
{"Time":"2025-10-04T21:53:57.145873048+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation","Output":"=== RUN   TestJWTHandler_TokenValidation\n"}
{"Time":"2025-10-04T21:53:57.145885373+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation","Output":"=== PAUSE TestJWTHandler_TokenValidation\n"}
{"Time":"2025-10-04T21:53:57.145895337+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation"}
{"Time":"2025-10-04T21:53:57.145906366+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_ExpiryHandling"}
{"Time":"2025-10-04T21:53:57.145963918+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_ExpiryHandling","Output":"=== RUN   TestJWTHandler_ExpiryHandling\n"}
{"Time":"2025-10-04T21:53:57.145978624+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_ExpiryHandling","Output":"=== PAUSE TestJWTHandler_ExpiryHandling\n"}
{"Time":"2025-10-04T21:53:57.145989015+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_ExpiryHandling"}
{"Time":"2025-10-04T21:53:57.145999496+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_ClaimsValidation"}
{"Time":"2025-10-04T21:53:57.14603179+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_ClaimsValidation","Output":"=== RUN   TestJWTHandler_ClaimsValidation\n"}
{"Time":"2025-10-04T21:53:57.14604398+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_ClaimsValidation","Output":"=== PAUSE TestJWTHandler_ClaimsValidation\n"}
{"Time":"2025-10-04T21:53:57.146053978+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_ClaimsValidation"}
{"Time":"2025-10-04T21:53:57.146065361+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_ErrorHandling"}
{"Time":"2025-10-04T21:53:57.146074723+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_ErrorHandling","Output":"=== RUN   TestJWTHandler_ErrorHandling\n"}
{"Time":"2025-10-04T21:53:57.146104503+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_ErrorHandling","Output":"=== PAUSE TestJWTHandler_ErrorHandling\n"}
{"Time":"2025-10-04T21:53:57.146117901+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_ErrorHandling"}
{"Time":"2025-10-04T21:53:57.146129175+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation_ErrorPaths"}
{"Time":"2025-10-04T21:53:57.146139382+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation_ErrorPaths","Output":"=== RUN   TestJWTHandler_TokenValidation_ErrorPaths\n"}
{"Time":"2025-10-04T21:53:57.146150302+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation_ErrorPaths","Output":"=== PAUSE TestJWTHandler_TokenValidation_ErrorPaths\n"}
{"Time":"2025-10-04T21:53:57.146187922+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation_ErrorPaths"}
{"Time":"2025-10-04T21:53:57.146203361+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewAuthMiddleware"}
{"Time":"2025-10-04T21:53:57.146245101+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewAuthMiddleware","Output":"=== RUN   TestNewAuthMiddleware\n"}
{"Time":"2025-10-04T21:53:57.146911385+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewAuthMiddleware","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.15020533+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewAuthMiddleware","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.150394106+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewAuthMiddleware","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.150419215+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewAuthMiddleware","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.150435645+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewAuthMiddleware","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.150446506+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewAuthMiddleware","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.150559134+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewAuthMiddleware","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.15057741+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewAuthMiddleware","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.150589899+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewAuthMiddleware","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.150601657+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewAuthMiddleware","Output":"        \tTest:       \tTestNewAuthMiddleware\n"}
{"Time":"2025-10-04T21:53:57.150611438+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewAuthMiddleware","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.150753267+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewAuthMiddleware","Output":"--- FAIL: TestNewAuthMiddleware (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.150776538+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewAuthMiddleware","Elapsed":0}
{"Time":"2025-10-04T21:53:57.150902057+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAuthMiddleware_RequireAuth_Authenticated"}
{"Time":"2025-10-04T21:53:57.150924218+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAuthMiddleware_RequireAuth_Authenticated","Output":"=== RUN   TestAuthMiddleware_RequireAuth_Authenticated\n"}
{"Time":"2025-10-04T21:53:57.151059066+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConfigIntegration_GetSnapshotConfig_ReqMTX001_Success_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.151093799+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConfigIntegration_GetSnapshotConfig_ReqMTX001_Success_Refactored","Output":"--- FAIL: TestConfigIntegration_GetSnapshotConfig_ReqMTX001_Success_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.15110789+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConfigIntegration_GetSnapshotConfig_ReqMTX001_Success_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.151241571+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConfigIntegration_GetFFmpegConfig_ReqMTX001_Success_Refactored"}
{"Time":"2025-10-04T21:53:57.151268743+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConfigIntegration_GetFFmpegConfig_ReqMTX001_Success_Refactored","Output":"=== RUN   TestConfigIntegration_GetFFmpegConfig_ReqMTX001_Success_Refactored\n"}
{"Time":"2025-10-04T21:53:57.152452629+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConfigIntegration_GetFFmpegConfig_ReqMTX001_Success_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.153237713+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAuthMiddleware_RequireAuth_Authenticated","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.156380841+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAuthMiddleware_RequireAuth_Authenticated","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.156451409+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAuthMiddleware_RequireAuth_Authenticated","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.156468719+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAuthMiddleware_RequireAuth_Authenticated","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.156502691+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAuthMiddleware_RequireAuth_Authenticated","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.156517092+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAuthMiddleware_RequireAuth_Authenticated","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.156527941+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAuthMiddleware_RequireAuth_Authenticated","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.156538209+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAuthMiddleware_RequireAuth_Authenticated","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.156550677+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAuthMiddleware_RequireAuth_Authenticated","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.156563932+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAuthMiddleware_RequireAuth_Authenticated","Output":"        \tTest:       \tTestAuthMiddleware_RequireAuth_Authenticated\n"}
{"Time":"2025-10-04T21:53:57.156573841+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAuthMiddleware_RequireAuth_Authenticated","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.156595257+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAuthMiddleware_RequireAuth_Authenticated","Output":"--- FAIL: TestAuthMiddleware_RequireAuth_Authenticated (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.156612294+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAuthMiddleware_RequireAuth_Authenticated","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.15662884+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAuthMiddleware_RequireAuth_NotAuthenticated"}
{"Time":"2025-10-04T21:53:57.156639712+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAuthMiddleware_RequireAuth_NotAuthenticated","Output":"=== RUN   TestAuthMiddleware_RequireAuth_NotAuthenticated\n"}
{"Time":"2025-10-04T21:53:57.157703518+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAuthMiddleware_RequireAuth_NotAuthenticated","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.15779255+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConfigIntegration_GetFFmpegConfig_ReqMTX001_Success_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.157824266+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConfigIntegration_GetFFmpegConfig_ReqMTX001_Success_Refactored","Output":"--- FAIL: TestConfigIntegration_GetFFmpegConfig_ReqMTX001_Success_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.157842683+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConfigIntegration_GetFFmpegConfig_ReqMTX001_Success_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.157859287+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConfigIntegration_GetCameraConfig_ReqMTX001_Success_Refactored"}
{"Time":"2025-10-04T21:53:57.157870484+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConfigIntegration_GetCameraConfig_ReqMTX001_Success_Refactored","Output":"=== RUN   TestConfigIntegration_GetCameraConfig_ReqMTX001_Success_Refactored\n"}
{"Time":"2025-10-04T21:53:57.159508784+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConfigIntegration_GetCameraConfig_ReqMTX001_Success_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.161157714+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAuthMiddleware_RequireAuth_NotAuthenticated","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.161255691+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAuthMiddleware_RequireAuth_NotAuthenticated","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.161274811+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAuthMiddleware_RequireAuth_NotAuthenticated","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.161286308+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAuthMiddleware_RequireAuth_NotAuthenticated","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.161400357+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAuthMiddleware_RequireAuth_NotAuthenticated","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.16142039+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAuthMiddleware_RequireAuth_NotAuthenticated","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.161453063+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAuthMiddleware_RequireAuth_NotAuthenticated","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.161476084+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAuthMiddleware_RequireAuth_NotAuthenticated","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.161489172+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAuthMiddleware_RequireAuth_NotAuthenticated","Output":"        \tTest:       \tTestAuthMiddleware_RequireAuth_NotAuthenticated\n"}
{"Time":"2025-10-04T21:53:57.161499653+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAuthMiddleware_RequireAuth_NotAuthenticated","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.161520698+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAuthMiddleware_RequireAuth_NotAuthenticated","Output":"--- FAIL: TestAuthMiddleware_RequireAuth_NotAuthenticated (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.161540596+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestAuthMiddleware_RequireAuth_NotAuthenticated","Elapsed":0}
{"Time":"2025-10-04T21:53:57.161554806+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewRBACMiddleware"}
{"Time":"2025-10-04T21:53:57.161563223+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewRBACMiddleware","Output":"=== RUN   TestNewRBACMiddleware\n"}
{"Time":"2025-10-04T21:53:57.162675704+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewRBACMiddleware","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.165005536+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConfigIntegration_GetCameraConfig_ReqMTX001_Success_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.165092706+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConfigIntegration_GetCameraConfig_ReqMTX001_Success_Refactored","Output":"--- FAIL: TestConfigIntegration_GetCameraConfig_ReqMTX001_Success_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.165115839+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConfigIntegration_GetCameraConfig_ReqMTX001_Success_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.165328907+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConfigIntegration_GetPerformanceConfig_ReqMTX001_Success_Refactored"}
{"Time":"2025-10-04T21:53:57.165346271+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConfigIntegration_GetPerformanceConfig_ReqMTX001_Success_Refactored","Output":"=== RUN   TestConfigIntegration_GetPerformanceConfig_ReqMTX001_Success_Refactored\n"}
{"Time":"2025-10-04T21:53:57.165861741+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewRBACMiddleware","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.16590004+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewRBACMiddleware","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.16591534+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewRBACMiddleware","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.166033927+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewRBACMiddleware","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.166046869+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewRBACMiddleware","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.166056897+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewRBACMiddleware","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.166066353+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewRBACMiddleware","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.166077445+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewRBACMiddleware","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.166317331+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewRBACMiddleware","Output":"        \tTest:       \tTestNewRBACMiddleware\n"}
{"Time":"2025-10-04T21:53:57.166334982+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewRBACMiddleware","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.166352947+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewRBACMiddleware","Output":"--- FAIL: TestNewRBACMiddleware (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.166371653+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewRBACMiddleware","Elapsed":0}
{"Time":"2025-10-04T21:53:57.166400368+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRBACMiddleware_RequireRole_SufficientRole"}
{"Time":"2025-10-04T21:53:57.166411861+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRBACMiddleware_RequireRole_SufficientRole","Output":"=== RUN   TestRBACMiddleware_RequireRole_SufficientRole\n"}
{"Time":"2025-10-04T21:53:57.166873116+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConfigIntegration_GetPerformanceConfig_ReqMTX001_Success_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.167224576+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRBACMiddleware_RequireRole_SufficientRole","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.169511375+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:53:57.170670485+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRBACMiddleware_RequireRole_SufficientRole","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.170718696+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRBACMiddleware_RequireRole_SufficientRole","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.170841413+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRBACMiddleware_RequireRole_SufficientRole","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.170854503+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRBACMiddleware_RequireRole_SufficientRole","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.170864305+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRBACMiddleware_RequireRole_SufficientRole","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.170874247+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRBACMiddleware_RequireRole_SufficientRole","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.170883764+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRBACMiddleware_RequireRole_SufficientRole","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.171115102+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRBACMiddleware_RequireRole_SufficientRole","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.17116079+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRBACMiddleware_RequireRole_SufficientRole","Output":"        \tTest:       \tTestRBACMiddleware_RequireRole_SufficientRole\n"}
{"Time":"2025-10-04T21:53:57.171175221+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRBACMiddleware_RequireRole_SufficientRole","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.171196799+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRBACMiddleware_RequireRole_SufficientRole","Output":"--- FAIL: TestRBACMiddleware_RequireRole_SufficientRole (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.171231268+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRBACMiddleware_RequireRole_SufficientRole","Elapsed":0}
{"Time":"2025-10-04T21:53:57.171257617+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRBACMiddleware_RequireRole_InsufficientRole"}
{"Time":"2025-10-04T21:53:57.171270145+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRBACMiddleware_RequireRole_InsufficientRole","Output":"=== RUN   TestRBACMiddleware_RequireRole_InsufficientRole\n"}
{"Time":"2025-10-04T21:53:57.172023518+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConfigIntegration_GetPerformanceConfig_ReqMTX001_Success_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.172078521+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConfigIntegration_GetPerformanceConfig_ReqMTX001_Success_Refactored","Output":"--- FAIL: TestConfigIntegration_GetPerformanceConfig_ReqMTX001_Success_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.172559159+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRBACMiddleware_RequireRole_InsufficientRole","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.17282599+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestConfigIntegration_GetPerformanceConfig_ReqMTX001_Success_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.172879746+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetConfig_ReqMTX001_Success_Refactored"}
{"Time":"2025-10-04T21:53:57.173063201+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetConfig_ReqMTX001_Success_Refactored","Output":"=== RUN   TestController_GetConfig_ReqMTX001_Success_Refactored\n"}
{"Time":"2025-10-04T21:53:57.174629566+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetConfig_ReqMTX001_Success_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.178281295+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRBACMiddleware_RequireRole_InsufficientRole","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.178364453+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRBACMiddleware_RequireRole_InsufficientRole","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.178381555+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRBACMiddleware_RequireRole_InsufficientRole","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.17839291+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRBACMiddleware_RequireRole_InsufficientRole","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.178403255+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRBACMiddleware_RequireRole_InsufficientRole","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.178413706+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRBACMiddleware_RequireRole_InsufficientRole","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.178424124+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRBACMiddleware_RequireRole_InsufficientRole","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.178436112+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRBACMiddleware_RequireRole_InsufficientRole","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.178448202+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRBACMiddleware_RequireRole_InsufficientRole","Output":"        \tTest:       \tTestRBACMiddleware_RequireRole_InsufficientRole\n"}
{"Time":"2025-10-04T21:53:57.178458361+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRBACMiddleware_RequireRole_InsufficientRole","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.178479792+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRBACMiddleware_RequireRole_InsufficientRole","Output":"--- FAIL: TestRBACMiddleware_RequireRole_InsufficientRole (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.178497701+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRBACMiddleware_RequireRole_InsufficientRole","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.178545443+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecurityMiddleware_Integration"}
{"Time":"2025-10-04T21:53:57.178559062+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecurityMiddleware_Integration","Output":"=== RUN   TestSecurityMiddleware_Integration\n"}
{"Time":"2025-10-04T21:53:57.179498286+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetConfig_ReqMTX001_Success_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.179553645+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetConfig_ReqMTX001_Success_Refactored","Output":"--- FAIL: TestController_GetConfig_ReqMTX001_Success_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.179574912+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetConfig_ReqMTX001_Success_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.17958911+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetHealth_ReqMTX004_Success_Refactored"}
{"Time":"2025-10-04T21:53:57.179598301+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetHealth_ReqMTX004_Success_Refactored","Output":"=== RUN   TestController_GetHealth_ReqMTX004_Success_Refactored\n"}
{"Time":"2025-10-04T21:53:57.180448095+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:57.180502944+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:57.180519619+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:57.180531433+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:53:57.180547127+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:57.180557764+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:53:57.180582534+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:53:57.180591796+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:53:57.18060268+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:53:57.180610891+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"    camera_asserters_test.go:147: ✅ Monitor stopped successfully\n"}
{"Time":"2025-10-04T21:53:57.180628951+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecurityMiddleware_Integration","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.181193964+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetHealth_ReqMTX004_Success_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.184354192+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetHealth_ReqMTX004_Success_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.184459839+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetHealth_ReqMTX004_Success_Refactored","Output":"--- FAIL: TestController_GetHealth_ReqMTX004_Success_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.18447869+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetHealth_ReqMTX004_Success_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:57.184601261+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetMetrics_ReqMTX004_Success_Refactored"}
{"Time":"2025-10-04T21:53:57.184618276+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetMetrics_ReqMTX004_Success_Refactored","Output":"=== RUN   TestController_GetMetrics_ReqMTX004_Success_Refactored\n"}
{"Time":"2025-10-04T21:53:57.185795268+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetMetrics_ReqMTX004_Success_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.18589944+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecurityMiddleware_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.185917305+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecurityMiddleware_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.18592969+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecurityMiddleware_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.185950459+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecurityMiddleware_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.185963968+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecurityMiddleware_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.185974894+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecurityMiddleware_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.185985148+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecurityMiddleware_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.185997271+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecurityMiddleware_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.186009909+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecurityMiddleware_Integration","Output":"        \tTest:       \tTestSecurityMiddleware_Integration\n"}
{"Time":"2025-10-04T21:53:57.186020092+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecurityMiddleware_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.186038067+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecurityMiddleware_Integration","Output":"--- FAIL: TestSecurityMiddleware_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.186055292+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecurityMiddleware_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.18607218+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecurityMiddleware_EdgeCases"}
{"Time":"2025-10-04T21:53:57.186082216+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecurityMiddleware_EdgeCases","Output":"=== RUN   TestSecurityMiddleware_EdgeCases\n"}
{"Time":"2025-10-04T21:53:57.187704324+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecurityMiddleware_EdgeCases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.189240483+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetMetrics_ReqMTX004_Success_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.189411192+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetMetrics_ReqMTX004_Success_Refactored","Output":"--- FAIL: TestController_GetMetrics_ReqMTX004_Success_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.189435592+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetMetrics_ReqMTX004_Success_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:57.189450608+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetSystemMetrics_ReqMTX004_Success_Refactored"}
{"Time":"2025-10-04T21:53:57.189459246+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetSystemMetrics_ReqMTX004_Success_Refactored","Output":"=== RUN   TestController_GetSystemMetrics_ReqMTX004_Success_Refactored\n"}
{"Time":"2025-10-04T21:53:57.190666333+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetSystemMetrics_ReqMTX004_Success_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.190977895+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:57.19100948+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:53:57.191034064+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:53:57.191160974+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:57.19117468+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:53:57.191321538+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:53:57.191351114+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:53:57.191364832+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:53:57.191376185+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:53:57.191398384+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:53:57.191411024+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:53:57.19142481+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:53:57.191707589+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:53:57.191739695+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:53:57.191764145+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:53:57.191775114+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:53:57.191785114+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:53:57.191798759+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:53:57.191820383+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:53:57.192839566+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecurityMiddleware_EdgeCases","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.192890223+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecurityMiddleware_EdgeCases","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.193012681+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecurityMiddleware_EdgeCases","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.193025613+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecurityMiddleware_EdgeCases","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.193036362+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecurityMiddleware_EdgeCases","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.193046595+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecurityMiddleware_EdgeCases","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.193056949+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecurityMiddleware_EdgeCases","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.193180558+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecurityMiddleware_EdgeCases","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.193194812+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecurityMiddleware_EdgeCases","Output":"        \tTest:       \tTestSecurityMiddleware_EdgeCases\n"}
{"Time":"2025-10-04T21:53:57.19332054+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecurityMiddleware_EdgeCases","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.193349011+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecurityMiddleware_EdgeCases","Output":"--- FAIL: TestSecurityMiddleware_EdgeCases (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.193361579+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecurityMiddleware_EdgeCases","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.19361165+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewSecureMethodRegistry"}
{"Time":"2025-10-04T21:53:57.193633786+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewSecureMethodRegistry","Output":"=== RUN   TestNewSecureMethodRegistry\n"}
{"Time":"2025-10-04T21:53:57.193646756+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewSecureMethodRegistry","Output":"=== PAUSE TestNewSecureMethodRegistry\n"}
{"Time":"2025-10-04T21:53:57.193656704+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewSecureMethodRegistry"}
{"Time":"2025-10-04T21:53:57.193667338+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_RegisterMethod"}
{"Time":"2025-10-04T21:53:57.193676276+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_RegisterMethod","Output":"=== RUN   TestSecureMethodRegistry_RegisterMethod\n"}
{"Time":"2025-10-04T21:53:57.193686775+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_RegisterMethod","Output":"=== PAUSE TestSecureMethodRegistry_RegisterMethod\n"}
{"Time":"2025-10-04T21:53:57.193695861+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_RegisterMethod"}
{"Time":"2025-10-04T21:53:57.193706274+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_GetMethod"}
{"Time":"2025-10-04T21:53:57.193715129+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_GetMethod","Output":"=== RUN   TestSecureMethodRegistry_GetMethod\n"}
{"Time":"2025-10-04T21:53:57.193725773+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_GetMethod","Output":"=== PAUSE TestSecureMethodRegistry_GetMethod\n"}
{"Time":"2025-10-04T21:53:57.193735115+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_GetMethod"}
{"Time":"2025-10-04T21:53:57.193745644+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_GetAllMethods"}
{"Time":"2025-10-04T21:53:57.193758538+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_GetAllMethods","Output":"=== RUN   TestSecureMethodRegistry_GetAllMethods\n"}
{"Time":"2025-10-04T21:53:57.19376978+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_GetAllMethods","Output":"=== PAUSE TestSecureMethodRegistry_GetAllMethods\n"}
{"Time":"2025-10-04T21:53:57.193779495+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_GetAllMethods"}
{"Time":"2025-10-04T21:53:57.193789375+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_GetMethodSecurityInfo"}
{"Time":"2025-10-04T21:53:57.19379817+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_GetMethodSecurityInfo","Output":"=== RUN   TestSecureMethodRegistry_GetMethodSecurityInfo\n"}
{"Time":"2025-10-04T21:53:57.193817774+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_GetMethodSecurityInfo","Output":"=== PAUSE TestSecureMethodRegistry_GetMethodSecurityInfo\n"}
{"Time":"2025-10-04T21:53:57.193827973+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_GetMethodSecurityInfo"}
{"Time":"2025-10-04T21:53:57.193838319+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestDefaultRateLimitConfig"}
{"Time":"2025-10-04T21:53:57.19384797+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestDefaultRateLimitConfig","Output":"=== RUN   TestDefaultRateLimitConfig\n"}
{"Time":"2025-10-04T21:53:57.193859192+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestDefaultRateLimitConfig","Output":"=== PAUSE TestDefaultRateLimitConfig\n"}
{"Time":"2025-10-04T21:53:57.193868585+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestDefaultRateLimitConfig"}
{"Time":"2025-10-04T21:53:57.193878648+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewEnhancedRateLimiter"}
{"Time":"2025-10-04T21:53:57.193887744+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewEnhancedRateLimiter","Output":"=== RUN   TestNewEnhancedRateLimiter\n"}
{"Time":"2025-10-04T21:53:57.193897853+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewEnhancedRateLimiter","Output":"=== PAUSE TestNewEnhancedRateLimiter\n"}
{"Time":"2025-10-04T21:53:57.193906937+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewEnhancedRateLimiter"}
{"Time":"2025-10-04T21:53:57.19391681+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_SetMethodRateLimit"}
{"Time":"2025-10-04T21:53:57.193926429+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_SetMethodRateLimit","Output":"=== RUN   TestEnhancedRateLimiter_SetMethodRateLimit\n"}
{"Time":"2025-10-04T21:53:57.193937388+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_SetMethodRateLimit","Output":"=== PAUSE TestEnhancedRateLimiter_SetMethodRateLimit\n"}
{"Time":"2025-10-04T21:53:57.193946964+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_SetMethodRateLimit"}
{"Time":"2025-10-04T21:53:57.19395727+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit"}
{"Time":"2025-10-04T21:53:57.193966125+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit","Output":"=== RUN   TestEnhancedRateLimiter_CheckLimit\n"}
{"Time":"2025-10-04T21:53:57.193976314+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit","Output":"=== PAUSE TestEnhancedRateLimiter_CheckLimit\n"}
{"Time":"2025-10-04T21:53:57.193985466+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit"}
{"Time":"2025-10-04T21:53:57.193995571+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_ResetClientLimits"}
{"Time":"2025-10-04T21:53:57.194012457+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_ResetClientLimits","Output":"=== RUN   TestEnhancedRateLimiter_ResetClientLimits\n"}
{"Time":"2025-10-04T21:53:57.194024384+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_ResetClientLimits","Output":"=== PAUSE TestEnhancedRateLimiter_ResetClientLimits\n"}
{"Time":"2025-10-04T21:53:57.194034055+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_ResetClientLimits"}
{"Time":"2025-10-04T21:53:57.194044348+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_GetClientStats"}
{"Time":"2025-10-04T21:53:57.194053632+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_GetClientStats","Output":"=== RUN   TestEnhancedRateLimiter_GetClientStats\n"}
{"Time":"2025-10-04T21:53:57.194064218+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_GetClientStats","Output":"=== PAUSE TestEnhancedRateLimiter_GetClientStats\n"}
{"Time":"2025-10-04T21:53:57.194073188+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_GetClientStats"}
{"Time":"2025-10-04T21:53:57.194083158+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_GetMethodStats"}
{"Time":"2025-10-04T21:53:57.194092489+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_GetMethodStats","Output":"=== RUN   TestEnhancedRateLimiter_GetMethodStats\n"}
{"Time":"2025-10-04T21:53:57.194102865+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_GetMethodStats","Output":"=== PAUSE TestEnhancedRateLimiter_GetMethodStats\n"}
{"Time":"2025-10-04T21:53:57.194112243+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_GetMethodStats"}
{"Time":"2025-10-04T21:53:57.194122745+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_GetGlobalStats"}
{"Time":"2025-10-04T21:53:57.194132331+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_GetGlobalStats","Output":"=== RUN   TestEnhancedRateLimiter_GetGlobalStats\n"}
{"Time":"2025-10-04T21:53:57.194142709+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_GetGlobalStats","Output":"=== PAUSE TestEnhancedRateLimiter_GetGlobalStats\n"}
{"Time":"2025-10-04T21:53:57.194151731+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_GetGlobalStats"}
{"Time":"2025-10-04T21:53:57.194161975+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CleanupOldClients"}
{"Time":"2025-10-04T21:53:57.194171188+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CleanupOldClients","Output":"=== RUN   TestEnhancedRateLimiter_CleanupOldClients\n"}
{"Time":"2025-10-04T21:53:57.194185661+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CleanupOldClients","Output":"=== PAUSE TestEnhancedRateLimiter_CleanupOldClients\n"}
{"Time":"2025-10-04T21:53:57.194202745+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CleanupOldClients"}
{"Time":"2025-10-04T21:53:57.194231105+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_StartCleanupRoutine"}
{"Time":"2025-10-04T21:53:57.194242656+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_StartCleanupRoutine","Output":"=== RUN   TestEnhancedRateLimiter_StartCleanupRoutine\n"}
{"Time":"2025-10-04T21:53:57.194253723+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_StartCleanupRoutine","Output":"=== PAUSE TestEnhancedRateLimiter_StartCleanupRoutine\n"}
{"Time":"2025-10-04T21:53:57.194263448+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_StartCleanupRoutine"}
{"Time":"2025-10-04T21:53:57.194273929+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_RoleHierarchy"}
{"Time":"2025-10-04T21:53:57.194283257+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_RoleHierarchy","Output":"=== RUN   TestPermissionChecker_RoleHierarchy\n"}
{"Time":"2025-10-04T21:53:57.194871939+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetSystemMetrics_ReqMTX004_Success_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.194917698+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_RoleHierarchy","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.195267852+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetSystemMetrics_ReqMTX004_Success_Refactored","Output":"--- FAIL: TestController_GetSystemMetrics_ReqMTX004_Success_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.195304649+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetSystemMetrics_ReqMTX004_Success_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.19543031+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetHealth_ReqMTX001_Concurrent_Refactored"}
{"Time":"2025-10-04T21:53:57.195444116+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetHealth_ReqMTX001_Concurrent_Refactored","Output":"=== RUN   TestController_GetHealth_ReqMTX001_Concurrent_Refactored\n"}
{"Time":"2025-10-04T21:53:57.196270592+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetHealth_ReqMTX001_Concurrent_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.201299704+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetHealth_ReqMTX001_Concurrent_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.201535323+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetHealth_ReqMTX001_Concurrent_Refactored","Output":"--- FAIL: TestController_GetHealth_ReqMTX001_Concurrent_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.201560775+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetHealth_ReqMTX001_Concurrent_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.201579011+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetHealth_ReqMTX004_Monitoring_Refactored"}
{"Time":"2025-10-04T21:53:57.201588136+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetHealth_ReqMTX004_Monitoring_Refactored","Output":"=== RUN   TestController_GetHealth_ReqMTX004_Monitoring_Refactored\n"}
{"Time":"2025-10-04T21:53:57.202597247+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_RoleHierarchy","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.203542737+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_RoleHierarchy","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.203561546+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_RoleHierarchy","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.20358406+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_RoleHierarchy","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.203594841+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_RoleHierarchy","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.203604304+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_RoleHierarchy","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.203612897+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_RoleHierarchy","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.203627073+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_RoleHierarchy","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.203659336+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_RoleHierarchy","Output":"        \tTest:       \tTestPermissionChecker_RoleHierarchy\n"}
{"Time":"2025-10-04T21:53:57.203672972+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_RoleHierarchy","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.203693926+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_RoleHierarchy","Output":"--- FAIL: TestPermissionChecker_RoleHierarchy (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.203721594+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_RoleHierarchy","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.203740893+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_MethodPermissions"}
{"Time":"2025-10-04T21:53:57.20375114+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_MethodPermissions","Output":"=== RUN   TestPermissionChecker_MethodPermissions\n"}
{"Time":"2025-10-04T21:53:57.20384549+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetHealth_ReqMTX004_Monitoring_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.204752469+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_MethodPermissions","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.207613631+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetHealth_ReqMTX004_Monitoring_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.207703585+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetHealth_ReqMTX004_Monitoring_Refactored","Output":"--- FAIL: TestController_GetHealth_ReqMTX004_Monitoring_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.208006202+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetHealth_ReqMTX004_Monitoring_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.208044646+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetHealth_ReqMTX004_Monitoring_Extended_Refactored"}
{"Time":"2025-10-04T21:53:57.208058686+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetHealth_ReqMTX004_Monitoring_Extended_Refactored","Output":"=== RUN   TestController_GetHealth_ReqMTX004_Monitoring_Extended_Refactored\n"}
{"Time":"2025-10-04T21:53:57.20895066+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetHealth_ReqMTX004_Monitoring_Extended_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.209640647+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_MethodPermissions","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.20968261+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_MethodPermissions","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.209699454+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_MethodPermissions","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.209711966+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_MethodPermissions","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.209723072+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_MethodPermissions","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.209740532+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_MethodPermissions","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.209752924+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_MethodPermissions","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.2097656+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_MethodPermissions","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.209778709+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_MethodPermissions","Output":"        \tTest:       \tTestPermissionChecker_MethodPermissions\n"}
{"Time":"2025-10-04T21:53:57.209789268+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_MethodPermissions","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.209812851+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_MethodPermissions","Output":"--- FAIL: TestPermissionChecker_MethodPermissions (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.209840899+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_MethodPermissions","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.209854924+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_EdgeCases"}
{"Time":"2025-10-04T21:53:57.209864864+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_EdgeCases","Output":"=== RUN   TestPermissionChecker_EdgeCases\n"}
{"Time":"2025-10-04T21:53:57.211560548+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_EdgeCases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.212753946+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetHealth_ReqMTX004_Monitoring_Extended_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.212991002+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetHealth_ReqMTX004_Monitoring_Extended_Refactored","Output":"--- FAIL: TestController_GetHealth_ReqMTX004_Monitoring_Extended_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.213027741+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetHealth_ReqMTX004_Monitoring_Extended_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:57.21305142+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetHealth_ReqMTX004_ServerDown_Error"}
{"Time":"2025-10-04T21:53:57.213063623+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetHealth_ReqMTX004_ServerDown_Error","Output":"=== RUN   TestController_GetHealth_ReqMTX004_ServerDown_Error\n"}
{"Time":"2025-10-04T21:53:57.213818095+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetHealth_ReqMTX004_ServerDown_Error","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.216641829+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_EdgeCases","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.216727223+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_EdgeCases","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.216744907+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_EdgeCases","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.216965617+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_EdgeCases","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.21699375+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_EdgeCases","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.21700756+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_EdgeCases","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.217017698+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_EdgeCases","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.21702782+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_EdgeCases","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.217038594+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_EdgeCases","Output":"        \tTest:       \tTestPermissionChecker_EdgeCases\n"}
{"Time":"2025-10-04T21:53:57.217048141+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_EdgeCases","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.217067463+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_EdgeCases","Output":"--- FAIL: TestPermissionChecker_EdgeCases (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.217079085+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_EdgeCases","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.217112363+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_AdditionalEdgeCases"}
{"Time":"2025-10-04T21:53:57.217123266+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_AdditionalEdgeCases","Output":"=== RUN   TestPermissionChecker_AdditionalEdgeCases\n"}
{"Time":"2025-10-04T21:53:57.21713385+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_AdditionalEdgeCases/get_required_role_with_whitespace"}
{"Time":"2025-10-04T21:53:57.217142494+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_AdditionalEdgeCases/get_required_role_with_whitespace","Output":"=== RUN   TestPermissionChecker_AdditionalEdgeCases/get_required_role_with_whitespace\n"}
{"Time":"2025-10-04T21:53:57.217151783+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_AdditionalEdgeCases/get_required_role_with_whitespace","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Permission checker initialized\"\n"}
{"Time":"2025-10-04T21:53:57.217174951+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_AdditionalEdgeCases/get_required_role_with_whitespace","Output":"--- PASS: TestPermissionChecker_AdditionalEdgeCases/get_required_role_with_whitespace (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.217188181+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_AdditionalEdgeCases/get_required_role_with_whitespace","Elapsed":0}
{"Time":"2025-10-04T21:53:57.217199637+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_AdditionalEdgeCases/add_method_permission_with_whitespace"}
{"Time":"2025-10-04T21:53:57.217226255+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_AdditionalEdgeCases/add_method_permission_with_whitespace","Output":"=== RUN   TestPermissionChecker_AdditionalEdgeCases/add_method_permission_with_whitespace\n"}
{"Time":"2025-10-04T21:53:57.217240519+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_AdditionalEdgeCases/add_method_permission_with_whitespace","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Permission checker initialized\"\n"}
{"Time":"2025-10-04T21:53:57.2172529+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_AdditionalEdgeCases/add_method_permission_with_whitespace","Output":"--- PASS: TestPermissionChecker_AdditionalEdgeCases/add_method_permission_with_whitespace (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.217267208+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_AdditionalEdgeCases/add_method_permission_with_whitespace","Elapsed":0}
{"Time":"2025-10-04T21:53:57.21727815+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_AdditionalEdgeCases/remove_method_permission_with_whitespace"}
{"Time":"2025-10-04T21:53:57.217287152+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_AdditionalEdgeCases/remove_method_permission_with_whitespace","Output":"=== RUN   TestPermissionChecker_AdditionalEdgeCases/remove_method_permission_with_whitespace\n"}
{"Time":"2025-10-04T21:53:57.217296738+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_AdditionalEdgeCases/remove_method_permission_with_whitespace","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Permission checker initialized\"\n"}
{"Time":"2025-10-04T21:53:57.217312397+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_AdditionalEdgeCases/remove_method_permission_with_whitespace","Output":"--- PASS: TestPermissionChecker_AdditionalEdgeCases/remove_method_permission_with_whitespace (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.217325375+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_AdditionalEdgeCases/remove_method_permission_with_whitespace","Elapsed":0}
{"Time":"2025-10-04T21:53:57.217336831+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_AdditionalEdgeCases/add_method_permission_with_invalid_role"}
{"Time":"2025-10-04T21:53:57.217346451+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_AdditionalEdgeCases/add_method_permission_with_invalid_role","Output":"=== RUN   TestPermissionChecker_AdditionalEdgeCases/add_method_permission_with_invalid_role\n"}
{"Time":"2025-10-04T21:53:57.21736883+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_AdditionalEdgeCases/add_method_permission_with_invalid_role","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Permission checker initialized\"\n"}
{"Time":"2025-10-04T21:53:57.21738591+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_AdditionalEdgeCases/add_method_permission_with_invalid_role","Output":"--- PASS: TestPermissionChecker_AdditionalEdgeCases/add_method_permission_with_invalid_role (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.217397348+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_AdditionalEdgeCases/add_method_permission_with_invalid_role","Elapsed":0}
{"Time":"2025-10-04T21:53:57.217410453+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_AdditionalEdgeCases","Output":"--- PASS: TestPermissionChecker_AdditionalEdgeCases (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.217421343+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_AdditionalEdgeCases","Elapsed":0}
{"Time":"2025-10-04T21:53:57.217433084+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole"}
{"Time":"2025-10-04T21:53:57.217443032+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole","Output":"=== RUN   TestPermissionChecker_GetPermissionsForRole\n"}
{"Time":"2025-10-04T21:53:57.217454713+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole","Output":"=== PAUSE TestPermissionChecker_GetPermissionsForRole\n"}
{"Time":"2025-10-04T21:53:57.217464891+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole"}
{"Time":"2025-10-04T21:53:57.217475271+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRole_String"}
{"Time":"2025-10-04T21:53:57.217485496+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRole_String","Output":"=== RUN   TestRole_String\n"}
{"Time":"2025-10-04T21:53:57.217496832+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRole_String","Output":"=== PAUSE TestRole_String\n"}
{"Time":"2025-10-04T21:53:57.217506345+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRole_String"}
{"Time":"2025-10-04T21:53:57.217516309+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_SessionLifecycle"}
{"Time":"2025-10-04T21:53:57.217526139+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_SessionLifecycle","Output":"=== RUN   TestSessionManager_SessionLifecycle\n"}
{"Time":"2025-10-04T21:53:57.217557432+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetHealth_ReqMTX004_ServerDown_Error","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.217584412+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetHealth_ReqMTX004_ServerDown_Error","Output":"--- FAIL: TestController_GetHealth_ReqMTX004_ServerDown_Error (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.217598481+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetHealth_ReqMTX004_ServerDown_Error","Elapsed":0}
{"Time":"2025-10-04T21:53:57.217610045+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetHealth_ReqMTX004_Timeout_Error"}
{"Time":"2025-10-04T21:53:57.217620455+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetHealth_ReqMTX004_Timeout_Error","Output":"=== RUN   TestController_GetHealth_ReqMTX004_Timeout_Error\n"}
{"Time":"2025-10-04T21:53:57.218406021+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetHealth_ReqMTX004_Timeout_Error","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.218661305+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_SessionLifecycle","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.221892573+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetHealth_ReqMTX004_Timeout_Error","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.221994134+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetHealth_ReqMTX004_Timeout_Error","Output":"--- FAIL: TestController_GetHealth_ReqMTX004_Timeout_Error (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.22201335+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetHealth_ReqMTX004_Timeout_Error","Elapsed":0}
{"Time":"2025-10-04T21:53:57.222132997+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetMetrics_ReqMTX004_ServerDown_Error"}
{"Time":"2025-10-04T21:53:57.222149641+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetMetrics_ReqMTX004_ServerDown_Error","Output":"=== RUN   TestController_GetMetrics_ReqMTX004_ServerDown_Error\n"}
{"Time":"2025-10-04T21:53:57.223238751+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetMetrics_ReqMTX004_ServerDown_Error","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.223923281+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_SessionLifecycle","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.224086117+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_SessionLifecycle","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.224105837+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_SessionLifecycle","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.224117653+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_SessionLifecycle","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.224127762+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_SessionLifecycle","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.224137821+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_SessionLifecycle","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.224247303+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_SessionLifecycle","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.224273335+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_SessionLifecycle","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.224297443+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_SessionLifecycle","Output":"        \tTest:       \tTestSessionManager_SessionLifecycle\n"}
{"Time":"2025-10-04T21:53:57.224309131+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_SessionLifecycle","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.22443758+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_SessionLifecycle","Output":"--- FAIL: TestSessionManager_SessionLifecycle (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.224458195+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_SessionLifecycle","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.224578457+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_Concurrency"}
{"Time":"2025-10-04T21:53:57.224600651+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_Concurrency","Output":"=== RUN   TestSessionManager_Concurrency\n"}
{"Time":"2025-10-04T21:53:57.225981556+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_Concurrency","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.228247767+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetMetrics_ReqMTX004_ServerDown_Error","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.228334051+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetMetrics_ReqMTX004_ServerDown_Error","Output":"--- FAIL: TestController_GetMetrics_ReqMTX004_ServerDown_Error (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.228352178+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetMetrics_ReqMTX004_ServerDown_Error","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.228369928+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetSystemMetrics_ReqMTX004_Timeout_Error"}
{"Time":"2025-10-04T21:53:57.228380169+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetSystemMetrics_ReqMTX004_Timeout_Error","Output":"=== RUN   TestController_GetSystemMetrics_ReqMTX004_Timeout_Error\n"}
{"Time":"2025-10-04T21:53:57.229914625+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetSystemMetrics_ReqMTX004_Timeout_Error","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.232041832+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_Concurrency","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.232686158+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_Concurrency","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.232737241+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_Concurrency","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.232754371+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_Concurrency","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.232766212+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_Concurrency","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.232776082+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_Concurrency","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.232803945+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_Concurrency","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.232817174+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_Concurrency","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.232830087+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_Concurrency","Output":"        \tTest:       \tTestSessionManager_Concurrency\n"}
{"Time":"2025-10-04T21:53:57.232841381+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_Concurrency","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.232889214+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_Concurrency","Output":"--- FAIL: TestSessionManager_Concurrency (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.23290722+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_Concurrency","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.232927175+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ExpiryHandling"}
{"Time":"2025-10-04T21:53:57.232939319+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ExpiryHandling","Output":"=== RUN   TestSessionManager_ExpiryHandling\n"}
{"Time":"2025-10-04T21:53:57.234254775+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ExpiryHandling","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.23666601+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetSystemMetrics_ReqMTX004_Timeout_Error","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.236755677+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetSystemMetrics_ReqMTX004_Timeout_Error","Output":"--- FAIL: TestController_GetSystemMetrics_ReqMTX004_Timeout_Error (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.236781137+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetSystemMetrics_ReqMTX004_Timeout_Error","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.236820791+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_Success_Refactored"}
{"Time":"2025-10-04T21:53:57.236833377+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_Success_Refactored","Output":"=== RUN   TestController_StartRecording_ReqMTX002_Success_Refactored\n"}
{"Time":"2025-10-04T21:53:57.237636548+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ExpiryHandling","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.237679148+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ExpiryHandling","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.237693855+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ExpiryHandling","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.237703892+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ExpiryHandling","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.237713683+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ExpiryHandling","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.237723645+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ExpiryHandling","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.237733958+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ExpiryHandling","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.237745502+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ExpiryHandling","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.23775736+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ExpiryHandling","Output":"        \tTest:       \tTestSessionManager_ExpiryHandling\n"}
{"Time":"2025-10-04T21:53:57.237769397+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ExpiryHandling","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.237785176+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ExpiryHandling","Output":"--- FAIL: TestSessionManager_ExpiryHandling (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.237813486+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ExpiryHandling","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.237828337+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_EdgeCases"}
{"Time":"2025-10-04T21:53:57.237837758+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_EdgeCases","Output":"=== RUN   TestSessionManager_EdgeCases\n"}
{"Time":"2025-10-04T21:53:57.238687713+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_Success_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.239164369+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_EdgeCases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.242281948+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_EdgeCases","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.242358539+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_EdgeCases","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.242375521+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_EdgeCases","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.242387308+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_EdgeCases","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.24239812+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_EdgeCases","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.242408793+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_EdgeCases","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.242418335+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_EdgeCases","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.242428313+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_EdgeCases","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.242459471+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_EdgeCases","Output":"        \tTest:       \tTestSessionManager_EdgeCases\n"}
{"Time":"2025-10-04T21:53:57.242471402+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_EdgeCases","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.242491727+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_EdgeCases","Output":"--- FAIL: TestSessionManager_EdgeCases (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.242509769+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_EdgeCases","Elapsed":0}
{"Time":"2025-10-04T21:53:57.242525387+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_AdditionalEdgeCases"}
{"Time":"2025-10-04T21:53:57.242536396+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_AdditionalEdgeCases","Output":"=== RUN   TestSessionManager_AdditionalEdgeCases\n"}
{"Time":"2025-10-04T21:53:57.243570002+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_AdditionalEdgeCases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.244701203+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_Success_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.244760474+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_Success_Refactored","Output":"--- FAIL: TestController_StartRecording_ReqMTX002_Success_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.244964514+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_Success_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.244993355+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StopRecording_ReqMTX002_Success_Refactored"}
{"Time":"2025-10-04T21:53:57.245005689+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StopRecording_ReqMTX002_Success_Refactored","Output":"=== RUN   TestController_StopRecording_ReqMTX002_Success_Refactored\n"}
{"Time":"2025-10-04T21:53:57.247060004+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StopRecording_ReqMTX002_Success_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.247908198+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_AdditionalEdgeCases","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.247980539+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_AdditionalEdgeCases","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.247997354+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_AdditionalEdgeCases","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.248020059+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_AdditionalEdgeCases","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.248031141+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_AdditionalEdgeCases","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.248042105+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_AdditionalEdgeCases","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.248052707+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_AdditionalEdgeCases","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.248063898+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_AdditionalEdgeCases","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.248075249+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_AdditionalEdgeCases","Output":"        \tTest:       \tTestSessionManager_AdditionalEdgeCases\n"}
{"Time":"2025-10-04T21:53:57.248085805+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_AdditionalEdgeCases","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.248111993+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_AdditionalEdgeCases","Output":"--- FAIL: TestSessionManager_AdditionalEdgeCases (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.248124977+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_AdditionalEdgeCases","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.248142786+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown"}
{"Time":"2025-10-04T21:53:57.248151756+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown","Output":"=== RUN   TestSessionManager_ContextAwareShutdown\n"}
{"Time":"2025-10-04T21:53:57.248170478+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/graceful_shutdown_with_context"}
{"Time":"2025-10-04T21:53:57.248184359+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/graceful_shutdown_with_context","Output":"=== RUN   TestSessionManager_ContextAwareShutdown/graceful_shutdown_with_context\n"}
{"Time":"2025-10-04T21:53:57.249333381+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/graceful_shutdown_with_context","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.251665346+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StopRecording_ReqMTX002_Success_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.251744328+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StopRecording_ReqMTX002_Success_Refactored","Output":"--- FAIL: TestController_StopRecording_ReqMTX002_Success_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.251766776+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StopRecording_ReqMTX002_Success_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.251795245+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_Advanced_Refactored"}
{"Time":"2025-10-04T21:53:57.251806636+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_Advanced_Refactored","Output":"=== RUN   TestController_StartRecording_ReqMTX002_Advanced_Refactored\n"}
{"Time":"2025-10-04T21:53:57.252779523+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/graceful_shutdown_with_context","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.252823634+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/graceful_shutdown_with_context","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.252838732+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/graceful_shutdown_with_context","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.252849881+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/graceful_shutdown_with_context","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.252860901+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/graceful_shutdown_with_context","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.252892328+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/graceful_shutdown_with_context","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.252905184+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/graceful_shutdown_with_context","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.252917069+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/graceful_shutdown_with_context","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.252928878+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/graceful_shutdown_with_context","Output":"        \tTest:       \tTestSessionManager_ContextAwareShutdown/graceful_shutdown_with_context\n"}
{"Time":"2025-10-04T21:53:57.252939583+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/graceful_shutdown_with_context","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.252957159+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/graceful_shutdown_with_context","Output":"--- FAIL: TestSessionManager_ContextAwareShutdown/graceful_shutdown_with_context (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.252975976+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/graceful_shutdown_with_context","Elapsed":0}
{"Time":"2025-10-04T21:53:57.252996229+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/shutdown_with_cancelled_context"}
{"Time":"2025-10-04T21:53:57.253006044+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/shutdown_with_cancelled_context","Output":"=== RUN   TestSessionManager_ContextAwareShutdown/shutdown_with_cancelled_context\n"}
{"Time":"2025-10-04T21:53:57.253499295+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_Advanced_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.254158414+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/shutdown_with_cancelled_context","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.257560933+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/shutdown_with_cancelled_context","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.257635366+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/shutdown_with_cancelled_context","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.257652503+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/shutdown_with_cancelled_context","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.257663693+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/shutdown_with_cancelled_context","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.257673387+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/shutdown_with_cancelled_context","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.257683363+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/shutdown_with_cancelled_context","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.257693432+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/shutdown_with_cancelled_context","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.257705657+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/shutdown_with_cancelled_context","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.257718012+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/shutdown_with_cancelled_context","Output":"        \tTest:       \tTestSessionManager_ContextAwareShutdown/shutdown_with_cancelled_context\n"}
{"Time":"2025-10-04T21:53:57.257728867+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/shutdown_with_cancelled_context","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.257751308+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/shutdown_with_cancelled_context","Output":"--- FAIL: TestSessionManager_ContextAwareShutdown/shutdown_with_cancelled_context (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.257793297+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/shutdown_with_cancelled_context","Elapsed":0}
{"Time":"2025-10-04T21:53:57.257811067+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/shutdown_timeout_handling"}
{"Time":"2025-10-04T21:53:57.257821618+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/shutdown_timeout_handling","Output":"=== RUN   TestSessionManager_ContextAwareShutdown/shutdown_timeout_handling\n"}
{"Time":"2025-10-04T21:53:57.258241008+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_Advanced_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.258429375+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_Advanced_Refactored","Output":"--- FAIL: TestController_StartRecording_ReqMTX002_Advanced_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.258457835+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_Advanced_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.258477621+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_Stream_Refactored"}
{"Time":"2025-10-04T21:53:57.258488899+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_Stream_Refactored","Output":"=== RUN   TestController_StartRecording_ReqMTX002_Stream_Refactored\n"}
{"Time":"2025-10-04T21:53:57.259011317+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/shutdown_timeout_handling","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.259956503+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_Stream_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.262966489+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/shutdown_timeout_handling","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.263047699+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/shutdown_timeout_handling","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.263065378+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/shutdown_timeout_handling","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.263096089+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/shutdown_timeout_handling","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.263108844+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/shutdown_timeout_handling","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.263118581+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/shutdown_timeout_handling","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.263128776+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/shutdown_timeout_handling","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.263140948+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/shutdown_timeout_handling","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.263153795+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/shutdown_timeout_handling","Output":"        \tTest:       \tTestSessionManager_ContextAwareShutdown/shutdown_timeout_handling\n"}
{"Time":"2025-10-04T21:53:57.263163245+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/shutdown_timeout_handling","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.263974442+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/shutdown_timeout_handling","Output":"--- FAIL: TestSessionManager_ContextAwareShutdown/shutdown_timeout_handling (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.26402674+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/shutdown_timeout_handling","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.264047043+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/double_stop_handling"}
{"Time":"2025-10-04T21:53:57.264058426+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/double_stop_handling","Output":"=== RUN   TestSessionManager_ContextAwareShutdown/double_stop_handling\n"}
{"Time":"2025-10-04T21:53:57.264835275+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/double_stop_handling","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.265021021+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_Stream_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.265059484+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_Stream_Refactored","Output":"--- FAIL: TestController_StartRecording_ReqMTX002_Stream_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.265088795+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_Stream_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.265105677+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_InvalidCamera_Error"}
{"Time":"2025-10-04T21:53:57.265117382+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_InvalidCamera_Error","Output":"=== RUN   TestController_StartRecording_ReqMTX002_InvalidCamera_Error\n"}
{"Time":"2025-10-04T21:53:57.266939974+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_InvalidCamera_Error","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.269397477+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/double_stop_handling","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.269471309+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/double_stop_handling","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.269507+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/double_stop_handling","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.269518566+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/double_stop_handling","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.269527776+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/double_stop_handling","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.269536978+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/double_stop_handling","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.269564903+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/double_stop_handling","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.269578664+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/double_stop_handling","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.26959644+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/double_stop_handling","Output":"        \tTest:       \tTestSessionManager_ContextAwareShutdown/double_stop_handling\n"}
{"Time":"2025-10-04T21:53:57.269608201+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/double_stop_handling","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.269628203+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/double_stop_handling","Output":"--- FAIL: TestSessionManager_ContextAwareShutdown/double_stop_handling (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.269639528+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown/double_stop_handling","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.269657826+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown","Output":"--- FAIL: TestSessionManager_ContextAwareShutdown (0.02s)\n"}
{"Time":"2025-10-04T21:53:57.269669362+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManager_ContextAwareShutdown","Elapsed":0.02}
{"Time":"2025-10-04T21:53:57.27139015+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRoleBasics"}
{"Time":"2025-10-04T21:53:57.271857691+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRoleBasics","Output":"=== RUN   TestRoleBasics\n"}
{"Time":"2025-10-04T21:53:57.272035351+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRoleBasics","Output":"--- PASS: TestRoleBasics (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.272232553+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRoleBasics","Elapsed":0}
{"Time":"2025-10-04T21:53:57.272489548+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionCheckerBasics"}
{"Time":"2025-10-04T21:53:57.272644407+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionCheckerBasics","Output":"=== RUN   TestPermissionCheckerBasics\n"}
{"Time":"2025-10-04T21:53:57.272664769+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionCheckerBasics","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Permission checker initialized\"\n"}
{"Time":"2025-10-04T21:53:57.272702533+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionCheckerBasics","Output":"--- PASS: TestPermissionCheckerBasics (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.272720181+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionCheckerBasics","Elapsed":0}
{"Time":"2025-10-04T21:53:57.272734369+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManagerBasics"}
{"Time":"2025-10-04T21:53:57.27274532+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManagerBasics","Output":"=== RUN   TestSessionManagerBasics\n"}
{"Time":"2025-10-04T21:53:57.272756802+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManagerBasics","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Session manager initialized with custom configuration\"\n"}
{"Time":"2025-10-04T21:53:57.272768782+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManagerBasics","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Session created successfully\"\n"}
{"Time":"2025-10-04T21:53:57.272779823+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManagerBasics","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Session manager stopped\"\n"}
{"Time":"2025-10-04T21:53:57.272999723+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManagerBasics","Output":"--- PASS: TestSessionManagerBasics (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.27301861+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSessionManagerBasics","Elapsed":0}
{"Time":"2025-10-04T21:53:57.273032739+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidatorBasics"}
{"Time":"2025-10-04T21:53:57.27304395+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidatorBasics","Output":"=== RUN   TestInputValidatorBasics\n"}
{"Time":"2025-10-04T21:53:57.273067551+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidatorBasics","Output":"--- PASS: TestInputValidatorBasics (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.273083693+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestInputValidatorBasics","Elapsed":0}
{"Time":"2025-10-04T21:53:57.273097043+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenGeneration"}
{"Time":"2025-10-04T21:53:57.273107189+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenGeneration","Output":"=== CONT  TestJWTHandler_TokenGeneration\n"}
{"Time":"2025-10-04T21:53:57.273317453+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_GetMethod"}
{"Time":"2025-10-04T21:53:57.273335782+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_GetMethod","Output":"=== CONT  TestSecureMethodRegistry_GetMethod\n"}
{"Time":"2025-10-04T21:53:57.273361208+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_GetMethod","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Method registered with security enforcement\"\n"}
{"Time":"2025-10-04T21:53:57.273390288+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_GetMethod","Output":"--- PASS: TestSecureMethodRegistry_GetMethod (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.273407164+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_GetMethod","Elapsed":0}
{"Time":"2025-10-04T21:53:57.273420092+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRole_String"}
{"Time":"2025-10-04T21:53:57.273431672+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRole_String","Output":"=== CONT  TestRole_String\n"}
{"Time":"2025-10-04T21:53:57.273597768+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRole_String/viewer"}
{"Time":"2025-10-04T21:53:57.273798637+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRole_String/viewer","Output":"=== RUN   TestRole_String/viewer\n"}
{"Time":"2025-10-04T21:53:57.273829592+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRole_String/viewer","Output":"--- PASS: TestRole_String/viewer (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.273847215+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRole_String/viewer","Elapsed":0}
{"Time":"2025-10-04T21:53:57.273860582+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRole_String/operator"}
{"Time":"2025-10-04T21:53:57.273871813+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRole_String/operator","Output":"=== RUN   TestRole_String/operator\n"}
{"Time":"2025-10-04T21:53:57.273885348+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRole_String/operator","Output":"--- PASS: TestRole_String/operator (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.273899127+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRole_String/operator","Elapsed":0}
{"Time":"2025-10-04T21:53:57.273916698+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRole_String","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.2739307+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRole_String/admin"}
{"Time":"2025-10-04T21:53:57.274093231+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRole_String/admin","Output":"=== RUN   TestRole_String/admin\n"}
{"Time":"2025-10-04T21:53:57.274142837+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRole_String/admin","Output":"--- PASS: TestRole_String/admin (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.274160232+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRole_String/admin","Elapsed":0}
{"Time":"2025-10-04T21:53:57.274173291+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRole_String/unknown"}
{"Time":"2025-10-04T21:53:57.274184141+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRole_String/unknown","Output":"=== RUN   TestRole_String/unknown\n"}
{"Time":"2025-10-04T21:53:57.274218092+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRole_String/unknown","Output":"--- PASS: TestRole_String/unknown (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.274235545+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRole_String/unknown","Elapsed":0}
{"Time":"2025-10-04T21:53:57.274249374+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRole_String","Output":"--- PASS: TestRole_String (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.27426102+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestRole_String","Elapsed":0}
{"Time":"2025-10-04T21:53:57.274463906+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole"}
{"Time":"2025-10-04T21:53:57.274488363+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole","Output":"=== CONT  TestPermissionChecker_GetPermissionsForRole\n"}
{"Time":"2025-10-04T21:53:57.27450403+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Permission checker initialized\"\n"}
{"Time":"2025-10-04T21:53:57.274519534+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole/admin_permissions"}
{"Time":"2025-10-04T21:53:57.274538428+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole/admin_permissions","Output":"=== RUN   TestPermissionChecker_GetPermissionsForRole/admin_permissions\n"}
{"Time":"2025-10-04T21:53:57.274555068+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole/admin_permissions","Output":"--- PASS: TestPermissionChecker_GetPermissionsForRole/admin_permissions (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.274568485+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole/admin_permissions","Elapsed":0}
{"Time":"2025-10-04T21:53:57.274582238+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole/operator_permissions"}
{"Time":"2025-10-04T21:53:57.274593746+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole/operator_permissions","Output":"=== RUN   TestPermissionChecker_GetPermissionsForRole/operator_permissions\n"}
{"Time":"2025-10-04T21:53:57.274806607+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole/operator_permissions","Output":"--- PASS: TestPermissionChecker_GetPermissionsForRole/operator_permissions (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.274826586+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole/operator_permissions","Elapsed":0}
{"Time":"2025-10-04T21:53:57.274841443+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole/viewer_permissions"}
{"Time":"2025-10-04T21:53:57.274864161+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole/viewer_permissions","Output":"=== RUN   TestPermissionChecker_GetPermissionsForRole/viewer_permissions\n"}
{"Time":"2025-10-04T21:53:57.274881927+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole/viewer_permissions","Output":"--- PASS: TestPermissionChecker_GetPermissionsForRole/viewer_permissions (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.274895899+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole/viewer_permissions","Elapsed":0}
{"Time":"2025-10-04T21:53:57.274909733+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole/invalid_role"}
{"Time":"2025-10-04T21:53:57.274921188+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole/invalid_role","Output":"=== RUN   TestPermissionChecker_GetPermissionsForRole/invalid_role\n"}
{"Time":"2025-10-04T21:53:57.275565701+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole/invalid_role","Output":"--- PASS: TestPermissionChecker_GetPermissionsForRole/invalid_role (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.275606344+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole/invalid_role","Elapsed":0}
{"Time":"2025-10-04T21:53:57.275624696+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole/empty_role"}
{"Time":"2025-10-04T21:53:57.275636978+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole/empty_role","Output":"=== RUN   TestPermissionChecker_GetPermissionsForRole/empty_role\n"}
{"Time":"2025-10-04T21:53:57.275651464+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole/empty_role","Output":"--- PASS: TestPermissionChecker_GetPermissionsForRole/empty_role (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.275664623+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole/empty_role","Elapsed":0}
{"Time":"2025-10-04T21:53:57.275688167+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole/uppercase_role"}
{"Time":"2025-10-04T21:53:57.27569964+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole/uppercase_role","Output":"=== RUN   TestPermissionChecker_GetPermissionsForRole/uppercase_role\n"}
{"Time":"2025-10-04T21:53:57.275713359+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole/uppercase_role","Output":"--- PASS: TestPermissionChecker_GetPermissionsForRole/uppercase_role (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.275726271+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole/uppercase_role","Elapsed":0}
{"Time":"2025-10-04T21:53:57.275739293+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole/numeric_role"}
{"Time":"2025-10-04T21:53:57.275764168+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole/numeric_role","Output":"=== RUN   TestPermissionChecker_GetPermissionsForRole/numeric_role\n"}
{"Time":"2025-10-04T21:53:57.275781254+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole/numeric_role","Output":"--- PASS: TestPermissionChecker_GetPermissionsForRole/numeric_role (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.275795464+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole/numeric_role","Elapsed":0}
{"Time":"2025-10-04T21:53:57.27580858+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole/special_chars_role"}
{"Time":"2025-10-04T21:53:57.275819452+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole/special_chars_role","Output":"=== RUN   TestPermissionChecker_GetPermissionsForRole/special_chars_role\n"}
{"Time":"2025-10-04T21:53:57.275833659+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole/special_chars_role","Output":"--- PASS: TestPermissionChecker_GetPermissionsForRole/special_chars_role (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.275846836+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole/special_chars_role","Elapsed":0}
{"Time":"2025-10-04T21:53:57.275861432+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole","Output":"--- PASS: TestPermissionChecker_GetPermissionsForRole (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.275875557+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestPermissionChecker_GetPermissionsForRole","Elapsed":0}
{"Time":"2025-10-04T21:53:57.275887657+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_StartCleanupRoutine"}
{"Time":"2025-10-04T21:53:57.275898199+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_StartCleanupRoutine","Output":"=== CONT  TestEnhancedRateLimiter_StartCleanupRoutine\n"}
{"Time":"2025-10-04T21:53:57.275910258+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CleanupOldClients"}
{"Time":"2025-10-04T21:53:57.275921054+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CleanupOldClients","Output":"=== CONT  TestEnhancedRateLimiter_CleanupOldClients\n"}
{"Time":"2025-10-04T21:53:57.275936685+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_GetGlobalStats"}
{"Time":"2025-10-04T21:53:57.27594941+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_GetGlobalStats","Output":"=== CONT  TestEnhancedRateLimiter_GetGlobalStats\n"}
{"Time":"2025-10-04T21:53:57.275964109+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_GetGlobalStats","Output":"--- PASS: TestEnhancedRateLimiter_GetGlobalStats (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.275977305+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_GetGlobalStats","Elapsed":0}
{"Time":"2025-10-04T21:53:57.275998908+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_SetMethodRateLimit"}
{"Time":"2025-10-04T21:53:57.276011629+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_SetMethodRateLimit","Output":"=== CONT  TestEnhancedRateLimiter_SetMethodRateLimit\n"}
{"Time":"2025-10-04T21:53:57.27602314+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_SetMethodRateLimit","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Method rate limit configured\"\n"}
{"Time":"2025-10-04T21:53:57.276042159+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_SetMethodRateLimit","Output":"--- PASS: TestEnhancedRateLimiter_SetMethodRateLimit (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.276055988+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_SetMethodRateLimit","Elapsed":0}
{"Time":"2025-10-04T21:53:57.27606742+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_GetMethodStats"}
{"Time":"2025-10-04T21:53:57.276078201+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_GetMethodStats","Output":"=== CONT  TestEnhancedRateLimiter_GetMethodStats\n"}
{"Time":"2025-10-04T21:53:57.276088996+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_GetMethodStats","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Method rate limit configured\"\n"}
{"Time":"2025-10-04T21:53:57.276102129+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_GetMethodStats","Output":"--- PASS: TestEnhancedRateLimiter_GetMethodStats (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.27611475+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_GetMethodStats","Elapsed":0}
{"Time":"2025-10-04T21:53:57.276126591+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_GetClientStats"}
{"Time":"2025-10-04T21:53:57.276136763+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_GetClientStats","Output":"=== CONT  TestEnhancedRateLimiter_GetClientStats\n"}
{"Time":"2025-10-04T21:53:57.276150687+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_GetClientStats","Output":"--- PASS: TestEnhancedRateLimiter_GetClientStats (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.276163251+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_GetClientStats","Elapsed":0}
{"Time":"2025-10-04T21:53:57.276174793+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_ResetClientLimits"}
{"Time":"2025-10-04T21:53:57.276184969+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_ResetClientLimits","Output":"=== CONT  TestEnhancedRateLimiter_ResetClientLimits\n"}
{"Time":"2025-10-04T21:53:57.276196235+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_ResetClientLimits","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Client rate limits reset\"\n"}
{"Time":"2025-10-04T21:53:57.276725258+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_ResetClientLimits","Output":"--- PASS: TestEnhancedRateLimiter_ResetClientLimits (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.276762044+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_ResetClientLimits","Elapsed":0}
{"Time":"2025-10-04T21:53:57.276778973+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit"}
{"Time":"2025-10-04T21:53:57.276790135+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit","Output":"=== CONT  TestEnhancedRateLimiter_CheckLimit\n"}
{"Time":"2025-10-04T21:53:57.276802437+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit/successful_requests"}
{"Time":"2025-10-04T21:53:57.276817521+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit/successful_requests","Output":"=== RUN   TestEnhancedRateLimiter_CheckLimit/successful_requests\n"}
{"Time":"2025-10-04T21:53:57.276832387+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit/successful_requests","Output":"--- PASS: TestEnhancedRateLimiter_CheckLimit/successful_requests (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.276845962+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit/successful_requests","Elapsed":0}
{"Time":"2025-10-04T21:53:57.276858738+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit/blocked_client"}
{"Time":"2025-10-04T21:53:57.276870294+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit/blocked_client","Output":"=== RUN   TestEnhancedRateLimiter_CheckLimit/blocked_client\n"}
{"Time":"2025-10-04T21:53:57.276880939+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit/blocked_client","Output":"time=\"2025-10-04 21:53:57\" level=warning msg=\"Client blocked due to rate limit violations\"\n"}
{"Time":"2025-10-04T21:53:57.276898198+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit/blocked_client","Output":"--- PASS: TestEnhancedRateLimiter_CheckLimit/blocked_client (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.276908948+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit/blocked_client","Elapsed":0}
{"Time":"2025-10-04T21:53:57.276920737+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit/client_unblock_after_duration"}
{"Time":"2025-10-04T21:53:57.276931393+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit/client_unblock_after_duration","Output":"=== RUN   TestEnhancedRateLimiter_CheckLimit/client_unblock_after_duration\n"}
{"Time":"2025-10-04T21:53:57.276944539+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit/client_unblock_after_duration","Output":"--- PASS: TestEnhancedRateLimiter_CheckLimit/client_unblock_after_duration (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.276970129+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit/client_unblock_after_duration","Elapsed":0}
{"Time":"2025-10-04T21:53:57.276986189+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit/new_client_creation"}
{"Time":"2025-10-04T21:53:57.27699801+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit/new_client_creation","Output":"=== RUN   TestEnhancedRateLimiter_CheckLimit/new_client_creation\n"}
{"Time":"2025-10-04T21:53:57.277012747+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit/new_client_creation","Output":"--- PASS: TestEnhancedRateLimiter_CheckLimit/new_client_creation (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.277025987+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit/new_client_creation","Elapsed":0}
{"Time":"2025-10-04T21:53:57.277037912+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit/method_specific_rate_limit"}
{"Time":"2025-10-04T21:53:57.277048646+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit/method_specific_rate_limit","Output":"=== RUN   TestEnhancedRateLimiter_CheckLimit/method_specific_rate_limit\n"}
{"Time":"2025-10-04T21:53:57.277059722+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit/method_specific_rate_limit","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Configuration-based rate limit applied\"\n"}
{"Time":"2025-10-04T21:53:57.277070429+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit/method_specific_rate_limit","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Method rate limit configured\"\n"}
{"Time":"2025-10-04T21:53:57.277084002+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit/method_specific_rate_limit","Output":"--- PASS: TestEnhancedRateLimiter_CheckLimit/method_specific_rate_limit (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.277097244+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit/method_specific_rate_limit","Elapsed":0}
{"Time":"2025-10-04T21:53:57.277110182+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit/client_rate_limit_per_minute"}
{"Time":"2025-10-04T21:53:57.27712173+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit/client_rate_limit_per_minute","Output":"=== RUN   TestEnhancedRateLimiter_CheckLimit/client_rate_limit_per_minute\n"}
{"Time":"2025-10-04T21:53:57.277133199+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit/client_rate_limit_per_minute","Output":"time=\"2025-10-04 21:53:57\" level=warning msg=\"Client rate limit exceeded\"\n"}
{"Time":"2025-10-04T21:53:57.277147076+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit/client_rate_limit_per_minute","Output":"--- PASS: TestEnhancedRateLimiter_CheckLimit/client_rate_limit_per_minute (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.277169258+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit/client_rate_limit_per_minute","Elapsed":0}
{"Time":"2025-10-04T21:53:57.27718773+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit/client_blocking_excessive_requests"}
{"Time":"2025-10-04T21:53:57.277199989+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit/client_blocking_excessive_requests","Output":"=== RUN   TestEnhancedRateLimiter_CheckLimit/client_blocking_excessive_requests\n"}
{"Time":"2025-10-04T21:53:57.277223805+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit/client_blocking_excessive_requests","Output":"time=\"2025-10-04 21:53:57\" level=warning msg=\"Client rate limit exceeded\"\n"}
{"Time":"2025-10-04T21:53:57.277243714+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit/client_blocking_excessive_requests","Output":"time=\"2025-10-04 21:53:57\" level=warning msg=\"Client blocked due to excessive requests\"\n"}
{"Time":"2025-10-04T21:53:57.277260495+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit/client_blocking_excessive_requests","Output":"--- PASS: TestEnhancedRateLimiter_CheckLimit/client_blocking_excessive_requests (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.277274049+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit/client_blocking_excessive_requests","Elapsed":0}
{"Time":"2025-10-04T21:53:57.277289116+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit","Output":"--- PASS: TestEnhancedRateLimiter_CheckLimit (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.277303201+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CheckLimit","Elapsed":0}
{"Time":"2025-10-04T21:53:57.277314935+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation"}
{"Time":"2025-10-04T21:53:57.277324685+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation","Output":"=== CONT  TestJWTHandler_TokenValidation\n"}
{"Time":"2025-10-04T21:53:57.277348374+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.277362476+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Old client rate limit entries cleaned up\"\n"}
{"Time":"2025-10-04T21:53:57.277377281+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CleanupOldClients","Output":"--- PASS: TestEnhancedRateLimiter_CleanupOldClients (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.277390522+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_CleanupOldClients","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.277414445+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_RegisterMethod"}
{"Time":"2025-10-04T21:53:57.277427447+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_RegisterMethod","Output":"=== CONT  TestSecureMethodRegistry_RegisterMethod\n"}
{"Time":"2025-10-04T21:53:57.277443582+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_RegisterMethod","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Method registered with security enforcement\"\n"}
{"Time":"2025-10-04T21:53:57.277456652+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_RegisterMethod","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Method registered with security enforcement\"\n"}
{"Time":"2025-10-04T21:53:57.277470694+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_RegisterMethod","Output":"--- PASS: TestSecureMethodRegistry_RegisterMethod (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.277484016+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_RegisterMethod","Elapsed":0}
{"Time":"2025-10-04T21:53:57.277494919+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewSecureMethodRegistry"}
{"Time":"2025-10-04T21:53:57.277504465+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewSecureMethodRegistry","Output":"=== CONT  TestNewSecureMethodRegistry\n"}
{"Time":"2025-10-04T21:53:57.277516996+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewSecureMethodRegistry","Output":"--- PASS: TestNewSecureMethodRegistry (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.277534618+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewSecureMethodRegistry","Elapsed":0}
{"Time":"2025-10-04T21:53:57.277548213+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation_ErrorPaths"}
{"Time":"2025-10-04T21:53:57.277558634+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation_ErrorPaths","Output":"=== CONT  TestJWTHandler_TokenValidation_ErrorPaths\n"}
{"Time":"2025-10-04T21:53:57.280319726+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_StartCleanupRoutine","Output":"--- PASS: TestEnhancedRateLimiter_StartCleanupRoutine (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.280379993+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestEnhancedRateLimiter_StartCleanupRoutine","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.280397263+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_ErrorHandling"}
{"Time":"2025-10-04T21:53:57.280407949+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_ErrorHandling","Output":"=== CONT  TestJWTHandler_ErrorHandling\n"}
{"Time":"2025-10-04T21:53:57.280428627+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_ErrorHandling","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"JWT handler initialized with rate limiting\"\n"}
{"Time":"2025-10-04T21:53:57.28044058+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_ErrorHandling","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"JWT handler initialized with rate limiting\"\n"}
{"Time":"2025-10-04T21:53:57.280472864+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_ErrorHandling","Output":"--- PASS: TestJWTHandler_ErrorHandling (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.280487759+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_ErrorHandling","Elapsed":0}
{"Time":"2025-10-04T21:53:57.280498805+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_ClaimsValidation"}
{"Time":"2025-10-04T21:53:57.280513127+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_ClaimsValidation","Output":"=== CONT  TestJWTHandler_ClaimsValidation\n"}
{"Time":"2025-10-04T21:53:57.280523824+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_ClaimsValidation","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"JWT handler initialized with rate limiting\"\n"}
{"Time":"2025-10-04T21:53:57.280535976+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_ClaimsValidation","Output":"--- PASS: TestJWTHandler_ClaimsValidation (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.280546648+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_ClaimsValidation","Elapsed":0}
{"Time":"2025-10-04T21:53:57.280556526+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_ExpiryHandling"}
{"Time":"2025-10-04T21:53:57.280565678+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_ExpiryHandling","Output":"=== CONT  TestJWTHandler_ExpiryHandling\n"}
{"Time":"2025-10-04T21:53:57.280575535+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_ExpiryHandling","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"JWT handler initialized with rate limiting\"\n"}
{"Time":"2025-10-04T21:53:57.280588341+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_ExpiryHandling","Output":"--- PASS: TestJWTHandler_ExpiryHandling (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.280598366+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_ExpiryHandling","Elapsed":0}
{"Time":"2025-10-04T21:53:57.280612374+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestDefaultRateLimitConfig"}
{"Time":"2025-10-04T21:53:57.280622161+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestDefaultRateLimitConfig","Output":"=== CONT  TestDefaultRateLimitConfig\n"}
{"Time":"2025-10-04T21:53:57.280633679+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestDefaultRateLimitConfig","Output":"--- PASS: TestDefaultRateLimitConfig (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.280662601+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestDefaultRateLimitConfig","Elapsed":0}
{"Time":"2025-10-04T21:53:57.280674632+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewEnhancedRateLimiter"}
{"Time":"2025-10-04T21:53:57.280691921+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewEnhancedRateLimiter","Output":"=== CONT  TestNewEnhancedRateLimiter\n"}
{"Time":"2025-10-04T21:53:57.280708436+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewEnhancedRateLimiter/Nil_config"}
{"Time":"2025-10-04T21:53:57.280718084+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewEnhancedRateLimiter/Nil_config","Output":"=== RUN   TestNewEnhancedRateLimiter/Nil_config\n"}
{"Time":"2025-10-04T21:53:57.280729714+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewEnhancedRateLimiter/Nil_config","Output":"--- PASS: TestNewEnhancedRateLimiter/Nil_config (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.280741383+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewEnhancedRateLimiter/Nil_config","Elapsed":0}
{"Time":"2025-10-04T21:53:57.28075705+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewEnhancedRateLimiter/Valid_config"}
{"Time":"2025-10-04T21:53:57.280766854+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewEnhancedRateLimiter/Valid_config","Output":"=== RUN   TestNewEnhancedRateLimiter/Valid_config\n"}
{"Time":"2025-10-04T21:53:57.280777211+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewEnhancedRateLimiter/Valid_config","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Configuration-based rate limit applied\"\n"}
{"Time":"2025-10-04T21:53:57.280789228+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewEnhancedRateLimiter/Valid_config","Output":"--- PASS: TestNewEnhancedRateLimiter/Valid_config (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.280804387+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewEnhancedRateLimiter/Valid_config","Elapsed":0}
{"Time":"2025-10-04T21:53:57.280817228+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewEnhancedRateLimiter","Output":"--- PASS: TestNewEnhancedRateLimiter (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.280829261+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestNewEnhancedRateLimiter","Elapsed":0}
{"Time":"2025-10-04T21:53:57.280839693+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CleanupExpiredClients"}
{"Time":"2025-10-04T21:53:57.280848573+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CleanupExpiredClients","Output":"=== CONT  TestJWTHandler_CleanupExpiredClients\n"}
{"Time":"2025-10-04T21:53:57.280859576+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenGeneration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.280872647+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenGeneration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.280886217+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenGeneration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.280909987+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenGeneration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.280923325+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenGeneration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.280932437+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenGeneration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.280941436+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenGeneration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.280951622+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenGeneration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.280963216+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenGeneration","Output":"        \tTest:       \tTestJWTHandler_TokenGeneration\n"}
{"Time":"2025-10-04T21:53:57.280973912+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenGeneration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.28098727+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenGeneration","Output":"--- FAIL: TestJWTHandler_TokenGeneration (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.281004264+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenGeneration","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.281015352+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetAlgorithm"}
{"Time":"2025-10-04T21:53:57.281023906+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetAlgorithm","Output":"=== CONT  TestJWTHandler_GetAlgorithm\n"}
{"Time":"2025-10-04T21:53:57.281033652+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetAlgorithm","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.285815813+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetAlgorithm","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.28584515+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_InvalidCamera_Error","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.285951714+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_InvalidCamera_Error","Output":"--- FAIL: TestController_StartRecording_ReqMTX002_InvalidCamera_Error (0.02s)\n"}
{"Time":"2025-10-04T21:53:57.285970063+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_InvalidCamera_Error","Elapsed":0.02}
{"Time":"2025-10-04T21:53:57.28598952+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_EmptyCamera_Error"}
{"Time":"2025-10-04T21:53:57.286000328+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_EmptyCamera_Error","Output":"=== RUN   TestController_StartRecording_ReqMTX002_EmptyCamera_Error\n"}
{"Time":"2025-10-04T21:53:57.286011997+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_EmptyCamera_Error","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.287241602+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetAlgorithm","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.292010526+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.292074278+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.292092096+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.292104905+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.292116285+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.292132212+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.291990314+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_EmptyCamera_Error","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.292187848+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_EmptyCamera_Error","Output":"--- FAIL: TestController_StartRecording_ReqMTX002_EmptyCamera_Error (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.292206877+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_EmptyCamera_Error","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.292245947+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_AlreadyRecording_Error"}
{"Time":"2025-10-04T21:53:57.292259708+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_AlreadyRecording_Error","Output":"=== RUN   TestController_StartRecording_ReqMTX002_AlreadyRecording_Error\n"}
{"Time":"2025-10-04T21:53:57.292127113+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:53:57.292144767+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.292294024+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.292309623+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation","Output":"        \tTest:       \tTestJWTHandler_TokenValidation\n"}
{"Time":"2025-10-04T21:53:57.292322017+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.292347678+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation","Output":"--- FAIL: TestJWTHandler_TokenValidation (0.02s)\n"}
{"Time":"2025-10-04T21:53:57.292363227+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation","Elapsed":0.02}
{"Time":"2025-10-04T21:53:57.292376009+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetSecretKey"}
{"Time":"2025-10-04T21:53:57.292396213+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetSecretKey","Output":"=== CONT  TestJWTHandler_GetSecretKey\n"}
{"Time":"2025-10-04T21:53:57.29429304+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_AlreadyRecording_Error","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.294625882+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetSecretKey","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.297261968+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CleanupExpiredClients","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.297339021+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CleanupExpiredClients","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.29735811+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CleanupExpiredClients","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.297371594+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CleanupExpiredClients","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.29738464+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CleanupExpiredClients","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.297397213+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CleanupExpiredClients","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.297408554+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CleanupExpiredClients","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.297421014+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CleanupExpiredClients","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.297434526+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CleanupExpiredClients","Output":"        \tTest:       \tTestJWTHandler_CleanupExpiredClients\n"}
{"Time":"2025-10-04T21:53:57.297446382+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CleanupExpiredClients","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.297485656+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CleanupExpiredClients","Output":"--- FAIL: TestJWTHandler_CleanupExpiredClients (0.02s)\n"}
{"Time":"2025-10-04T21:53:57.297503219+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_CleanupExpiredClients","Elapsed":0.02}
{"Time":"2025-10-04T21:53:57.297521286+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_IsTokenExpired"}
{"Time":"2025-10-04T21:53:57.297532694+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_IsTokenExpired","Output":"=== CONT  TestJWTHandler_IsTokenExpired\n"}
{"Time":"2025-10-04T21:53:57.298251262+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_AlreadyRecording_Error","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.298479095+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetAlgorithm","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.298511166+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetAlgorithm","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.298526625+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetAlgorithm","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.298550204+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetAlgorithm","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.298565659+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetAlgorithm","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.29857825+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetAlgorithm","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.298589013+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetAlgorithm","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.298601458+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetAlgorithm","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.298629258+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetAlgorithm","Output":"        \tTest:       \tTestJWTHandler_GetAlgorithm\n"}
{"Time":"2025-10-04T21:53:57.298645224+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetAlgorithm","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.298660798+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetAlgorithm","Output":"--- FAIL: TestJWTHandler_GetAlgorithm (0.02s)\n"}
{"Time":"2025-10-04T21:53:57.298672892+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetAlgorithm","Elapsed":0.02}
{"Time":"2025-10-04T21:53:57.29868663+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_GetMethodSecurityInfo"}
{"Time":"2025-10-04T21:53:57.298696795+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_GetMethodSecurityInfo","Output":"=== CONT  TestSecureMethodRegistry_GetMethodSecurityInfo\n"}
{"Time":"2025-10-04T21:53:57.298712279+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_GetMethodSecurityInfo","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Method registered with security enforcement\"\n"}
{"Time":"2025-10-04T21:53:57.298727758+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_GetMethodSecurityInfo","Output":"--- PASS: TestSecureMethodRegistry_GetMethodSecurityInfo (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.29873997+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_GetMethodSecurityInfo","Elapsed":0}
{"Time":"2025-10-04T21:53:57.298750316+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetClientRateInfo"}
{"Time":"2025-10-04T21:53:57.29875987+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetClientRateInfo","Output":"=== CONT  TestJWTHandler_GetClientRateInfo\n"}
{"Time":"2025-10-04T21:53:57.29898749+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_AlreadyRecording_Error","Output":"--- FAIL: TestController_StartRecording_ReqMTX002_AlreadyRecording_Error (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.299425099+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_AlreadyRecording_Error","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.299591806+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StopRecording_ReqMTX002_NotRecording_Error"}
{"Time":"2025-10-04T21:53:57.299748719+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StopRecording_ReqMTX002_NotRecording_Error","Output":"=== RUN   TestController_StopRecording_ReqMTX002_NotRecording_Error\n"}
{"Time":"2025-10-04T21:53:57.302299682+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StopRecording_ReqMTX002_NotRecording_Error","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.302371372+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetClientRateInfo","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.302399361+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:57.302426998+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:57.302444635+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:57.302510157+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:53:57.302688555+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:57.302710434+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:53:57.302722528+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:53:57.302734723+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:53:57.302745186+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:53:57.302792814+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"    camera_asserters_test.go:147: ✅ Monitor stopped successfully\n"}
{"Time":"2025-10-04T21:53:57.304571627+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetClientRateInfo","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.309988856+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StopRecording_ReqMTX002_NotRecording_Error","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.310267072+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StopRecording_ReqMTX002_NotRecording_Error","Output":"--- FAIL: TestController_StopRecording_ReqMTX002_NotRecording_Error (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.310435054+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StopRecording_ReqMTX002_NotRecording_Error","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.311067787+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StopRecording_ReqMTX002_InvalidCamera_Error"}
{"Time":"2025-10-04T21:53:57.311251326+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StopRecording_ReqMTX002_InvalidCamera_Error","Output":"=== RUN   TestController_StopRecording_ReqMTX002_InvalidCamera_Error\n"}
{"Time":"2025-10-04T21:53:57.311422274+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StopRecording_ReqMTX002_InvalidCamera_Error","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.311602804+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_IsTokenExpired","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.311758715+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_IsTokenExpired","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.31191645+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_IsTokenExpired","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.31207528+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_IsTokenExpired","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.312226741+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_IsTokenExpired","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.312385945+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_IsTokenExpired","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.312559758+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_IsTokenExpired","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.31272147+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_IsTokenExpired","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.312761669+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_IsTokenExpired","Output":"        \tTest:       \tTestJWTHandler_IsTokenExpired\n"}
{"Time":"2025-10-04T21:53:57.312776571+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_IsTokenExpired","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.312796381+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_IsTokenExpired","Output":"--- FAIL: TestJWTHandler_IsTokenExpired (0.02s)\n"}
{"Time":"2025-10-04T21:53:57.312809128+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_IsTokenExpired","Elapsed":0.02}
{"Time":"2025-10-04T21:53:57.312828179+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_SetRateLimit"}
{"Time":"2025-10-04T21:53:57.312840169+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_SetRateLimit","Output":"=== CONT  TestJWTHandler_SetRateLimit\n"}
{"Time":"2025-10-04T21:53:57.31338561+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:57.313429508+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:53:57.313464981+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:53:57.313477229+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:57.313379258+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_SetRateLimit","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.313488575+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:53:57.313545604+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:53:57.313559303+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:53:57.313575226+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:53:57.313590597+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:53:57.313603018+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:53:57.313615137+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:53:57.313711074+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:53:57.313829998+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:53:57.31385172+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:53:57.313865636+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:53:57.31392429+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:53:57.313940925+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:53:57.313955284+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:53:57.313997659+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:53:57.314052397+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetClientRateInfo","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.314179259+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetClientRateInfo","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.314193454+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetClientRateInfo","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.314202738+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetClientRateInfo","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.314329279+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetClientRateInfo","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.314346053+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetClientRateInfo","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.3143577+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetClientRateInfo","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.314374112+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetClientRateInfo","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.314495166+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetClientRateInfo","Output":"        \tTest:       \tTestJWTHandler_GetClientRateInfo\n"}
{"Time":"2025-10-04T21:53:57.314509727+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetClientRateInfo","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.314527425+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetClientRateInfo","Output":"--- FAIL: TestJWTHandler_GetClientRateInfo (0.02s)\n"}
{"Time":"2025-10-04T21:53:57.314539632+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetClientRateInfo","Elapsed":0.02}
{"Time":"2025-10-04T21:53:57.314709355+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_RecordRequest"}
{"Time":"2025-10-04T21:53:57.314755185+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_RecordRequest","Output":"=== CONT  TestJWTHandler_RecordRequest\n"}
{"Time":"2025-10-04T21:53:57.314777889+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetSecretKey","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.314797627+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetSecretKey","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.314926432+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetSecretKey","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.314939307+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetSecretKey","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.314954286+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetSecretKey","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.314968099+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetSecretKey","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.315087299+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetSecretKey","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.315100917+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetSecretKey","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.315112742+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetSecretKey","Output":"        \tTest:       \tTestJWTHandler_GetSecretKey\n"}
{"Time":"2025-10-04T21:53:57.315122959+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetSecretKey","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.315234944+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetSecretKey","Output":"--- FAIL: TestJWTHandler_GetSecretKey (0.02s)\n"}
{"Time":"2025-10-04T21:53:57.315272608+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_GetSecretKey","Elapsed":0.02}
{"Time":"2025-10-04T21:53:57.315287627+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_GetAllMethods"}
{"Time":"2025-10-04T21:53:57.315400038+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_GetAllMethods","Output":"=== CONT  TestSecureMethodRegistry_GetAllMethods\n"}
{"Time":"2025-10-04T21:53:57.315422726+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_GetAllMethods","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Method registered with security enforcement\"\n"}
{"Time":"2025-10-04T21:53:57.315435585+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_GetAllMethods","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Method registered with security enforcement\"\n"}
{"Time":"2025-10-04T21:53:57.315449165+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_GetAllMethods","Output":"--- PASS: TestSecureMethodRegistry_GetAllMethods (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.316063627+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_GetAllMethods","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.31800907+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StopRecording_ReqMTX002_InvalidCamera_Error","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.318080786+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StopRecording_ReqMTX002_InvalidCamera_Error","Output":"--- FAIL: TestController_StopRecording_ReqMTX002_InvalidCamera_Error (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.319008604+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StopRecording_ReqMTX002_InvalidCamera_Error","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.319041295+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_Success_Refactored"}
{"Time":"2025-10-04T21:53:57.319051298+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_Success_Refactored","Output":"=== RUN   TestController_TakeSnapshot_ReqMTX002_Success_Refactored\n"}
{"Time":"2025-10-04T21:53:57.319547489+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_Success_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.320155214+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestSecureMethodRegistry_GetAllMethods","Elapsed":0}
{"Time":"2025-10-04T21:53:57.320233395+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation_ErrorPaths","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.320252857+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation_ErrorPaths","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.320265494+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation_ErrorPaths","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.320282619+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation_ErrorPaths","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.32029557+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation_ErrorPaths","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.320306577+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation_ErrorPaths","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.32067452+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation_ErrorPaths","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.320706201+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation_ErrorPaths","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.320721353+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation_ErrorPaths","Output":"        \tTest:       \tTestJWTHandler_TokenValidation_ErrorPaths\n"}
{"Time":"2025-10-04T21:53:57.320732591+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation_ErrorPaths","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.320756604+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation_ErrorPaths","Output":"--- FAIL: TestJWTHandler_TokenValidation_ErrorPaths (0.04s)\n"}
{"Time":"2025-10-04T21:53:57.323687784+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_TokenValidation_ErrorPaths","Elapsed":0.04}
{"Time":"2025-10-04T21:53:57.323763248+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_SetRateLimit","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.323798131+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_SetRateLimit","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.323809015+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_SetRateLimit","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.32381871+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_SetRateLimit","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.323828158+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_SetRateLimit","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.323837093+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_SetRateLimit","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.323845936+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_SetRateLimit","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.323856238+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_SetRateLimit","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.323866645+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_SetRateLimit","Output":"        \tTest:       \tTestJWTHandler_SetRateLimit\n"}
{"Time":"2025-10-04T21:53:57.323874868+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_SetRateLimit","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.32388907+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_SetRateLimit","Output":"--- FAIL: TestJWTHandler_SetRateLimit (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.324645754+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_Success_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.324728974+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_Success_Refactored","Output":"--- FAIL: TestController_TakeSnapshot_ReqMTX002_Success_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.324646997+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_SetRateLimit","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.324762345+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_RecordRequest","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:53:57.32477546+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_RecordRequest","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:53:57.324786571+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_RecordRequest","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:53:57.324797273+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_RecordRequest","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:50\n"}
{"Time":"2025-10-04T21:53:57.324807864+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_RecordRequest","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:43\n"}
{"Time":"2025-10-04T21:53:57.324818296+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_RecordRequest","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/security/test_helpers.go:35\n"}
{"Time":"2025-10-04T21:53:57.324829304+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_RecordRequest","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:53:57.324840534+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_RecordRequest","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.324852374+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_RecordRequest","Output":"        \tTest:       \tTestJWTHandler_RecordRequest\n"}
{"Time":"2025-10-04T21:53:57.324863091+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_RecordRequest","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:53:57.32488192+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_RecordRequest","Output":"--- FAIL: TestJWTHandler_RecordRequest (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.324910356+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Test":"TestJWTHandler_RecordRequest","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.324924372+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Output":"FAIL\n"}
{"Time":"2025-10-04T21:53:57.32505253+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_Success_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.325077504+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_ListSnapshots_ReqMTX002_Success_Refactored"}
{"Time":"2025-10-04T21:53:57.325088102+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_ListSnapshots_ReqMTX002_Success_Refactored","Output":"=== RUN   TestController_ListSnapshots_ReqMTX002_Success_Refactored\n"}
{"Time":"2025-10-04T21:53:57.326847925+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_ListSnapshots_ReqMTX002_Success_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.331755123+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_ListSnapshots_ReqMTX002_Success_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.331859865+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_ListSnapshots_ReqMTX002_Success_Refactored","Output":"--- FAIL: TestController_ListSnapshots_ReqMTX002_Success_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.331876303+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_ListSnapshots_ReqMTX002_Success_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.332110605+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_Advanced_Refactored"}
{"Time":"2025-10-04T21:53:57.332124753+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_Advanced_Refactored","Output":"=== RUN   TestController_TakeSnapshot_ReqMTX002_Advanced_Refactored\n"}
{"Time":"2025-10-04T21:53:57.333510178+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_Advanced_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.333738852+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Output":"coverage: 8.6% of statements in ./...\n"}
{"Time":"2025-10-04T21:53:57.338192268+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_Advanced_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.338333996+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_Advanced_Refactored","Output":"--- FAIL: TestController_TakeSnapshot_ReqMTX002_Advanced_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.338351611+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_Advanced_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.338368879+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_Concurrent_Refactored"}
{"Time":"2025-10-04T21:53:57.338481431+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_Concurrent_Refactored","Output":"=== RUN   TestController_TakeSnapshot_ReqMTX002_Concurrent_Refactored\n"}
{"Time":"2025-10-04T21:53:57.339503689+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_Concurrent_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.344496284+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_Concurrent_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.344611355+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_Concurrent_Refactored","Output":"--- FAIL: TestController_TakeSnapshot_ReqMTX002_Concurrent_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.344642029+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_Concurrent_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.344680088+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_ErrorHandling_Refactored"}
{"Time":"2025-10-04T21:53:57.344693605+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_ErrorHandling_Refactored","Output":"=== RUN   TestController_TakeSnapshot_ReqMTX002_ErrorHandling_Refactored\n"}
{"Time":"2025-10-04T21:53:57.346221662+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_ErrorHandling_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.352611361+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_ErrorHandling_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.352725305+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_ErrorHandling_Refactored","Output":"--- FAIL: TestController_TakeSnapshot_ReqMTX002_ErrorHandling_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.352750485+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_ErrorHandling_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.352768953+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_InvalidCamera_Error"}
{"Time":"2025-10-04T21:53:57.352781266+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_InvalidCamera_Error","Output":"=== RUN   TestController_TakeSnapshot_ReqMTX002_InvalidCamera_Error\n"}
{"Time":"2025-10-04T21:53:57.354708091+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_InvalidCamera_Error","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.358406134+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Output":"FAIL\tgithub.com/camerarecorder/mediamtx-camera-service-go/internal/security\t0.430s\n"}
{"Time":"2025-10-04T21:53:57.358465376+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/security","Elapsed":0.431}
{"Time":"2025-10-04T21:53:57.359573349+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_InvalidCamera_Error","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.359629482+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_InvalidCamera_Error","Output":"--- FAIL: TestController_TakeSnapshot_ReqMTX002_InvalidCamera_Error (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.359650655+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_InvalidCamera_Error","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.359667765+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_EmptyCamera_Error"}
{"Time":"2025-10-04T21:53:57.359678241+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_EmptyCamera_Error","Output":"=== RUN   TestController_TakeSnapshot_ReqMTX002_EmptyCamera_Error\n"}
{"Time":"2025-10-04T21:53:57.360663085+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_EmptyCamera_Error","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.364269451+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_EmptyCamera_Error","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.364356923+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_EmptyCamera_Error","Output":"--- FAIL: TestController_TakeSnapshot_ReqMTX002_EmptyCamera_Error (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.364381918+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_EmptyCamera_Error","Elapsed":0}
{"Time":"2025-10-04T21:53:57.364400446+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_InvalidFormat_Error"}
{"Time":"2025-10-04T21:53:57.364411025+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_InvalidFormat_Error","Output":"=== RUN   TestController_TakeSnapshot_ReqMTX002_InvalidFormat_Error\n"}
{"Time":"2025-10-04T21:53:57.365250754+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_InvalidFormat_Error","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.368249345+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_InvalidFormat_Error","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.368326271+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_InvalidFormat_Error","Output":"--- FAIL: TestController_TakeSnapshot_ReqMTX002_InvalidFormat_Error (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.368343291+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_InvalidFormat_Error","Elapsed":0}
{"Time":"2025-10-04T21:53:57.368359491+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_InvalidQuality_Error"}
{"Time":"2025-10-04T21:53:57.368369613+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_InvalidQuality_Error","Output":"=== RUN   TestController_TakeSnapshot_ReqMTX002_InvalidQuality_Error\n"}
{"Time":"2025-10-04T21:53:57.369219482+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_InvalidQuality_Error","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.372236048+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_InvalidQuality_Error","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.372316541+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_InvalidQuality_Error","Output":"--- FAIL: TestController_TakeSnapshot_ReqMTX002_InvalidQuality_Error (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.372339022+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_InvalidQuality_Error","Elapsed":0}
{"Time":"2025-10-04T21:53:57.372354981+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_NilOptions_Error"}
{"Time":"2025-10-04T21:53:57.37237621+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_NilOptions_Error","Output":"=== RUN   TestController_TakeSnapshot_ReqMTX002_NilOptions_Error\n"}
{"Time":"2025-10-04T21:53:57.374585103+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_NilOptions_Error","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.380084205+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_NilOptions_Error","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.380178718+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_NilOptions_Error","Output":"--- FAIL: TestController_TakeSnapshot_ReqMTX002_NilOptions_Error (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.38019727+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_TakeSnapshot_ReqMTX002_NilOptions_Error","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.380225299+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_ListSnapshots_ReqMTX002_InvalidPagination_Error"}
{"Time":"2025-10-04T21:53:57.380245294+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_ListSnapshots_ReqMTX002_InvalidPagination_Error","Output":"=== RUN   TestController_ListSnapshots_ReqMTX002_InvalidPagination_Error\n"}
{"Time":"2025-10-04T21:53:57.381557339+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_ListSnapshots_ReqMTX002_InvalidPagination_Error","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.386567082+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_ListSnapshots_ReqMTX002_InvalidPagination_Error","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.386657499+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_ListSnapshots_ReqMTX002_InvalidPagination_Error","Output":"--- FAIL: TestController_ListSnapshots_ReqMTX002_InvalidPagination_Error (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.386679614+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_ListSnapshots_ReqMTX002_InvalidPagination_Error","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.386696958+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_ListSnapshots_ReqMTX002_InvalidOffset_Error"}
{"Time":"2025-10-04T21:53:57.386708005+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_ListSnapshots_ReqMTX002_InvalidOffset_Error","Output":"=== RUN   TestController_ListSnapshots_ReqMTX002_InvalidOffset_Error\n"}
{"Time":"2025-10-04T21:53:57.388008319+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_ListSnapshots_ReqMTX002_InvalidOffset_Error","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.393033959+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_ListSnapshots_ReqMTX002_InvalidOffset_Error","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.39311637+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_ListSnapshots_ReqMTX002_InvalidOffset_Error","Output":"--- FAIL: TestController_ListSnapshots_ReqMTX002_InvalidOffset_Error (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.393136269+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_ListSnapshots_ReqMTX002_InvalidOffset_Error","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.393223118+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetPaths_ReqMTX003_Success_Refactored"}
{"Time":"2025-10-04T21:53:57.39326117+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetPaths_ReqMTX003_Success_Refactored","Output":"=== RUN   TestController_GetPaths_ReqMTX003_Success_Refactored\n"}
{"Time":"2025-10-04T21:53:57.394476371+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetPaths_ReqMTX003_Success_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.399489877+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetPaths_ReqMTX003_Success_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.399570496+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetPaths_ReqMTX003_Success_Refactored","Output":"--- FAIL: TestController_GetPaths_ReqMTX003_Success_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.399591071+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetPaths_ReqMTX003_Success_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.399607972+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetStreams_ReqMTX002_Success_Refactored"}
{"Time":"2025-10-04T21:53:57.399617839+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetStreams_ReqMTX002_Success_Refactored","Output":"=== RUN   TestController_GetStreams_ReqMTX002_Success_Refactored\n"}
{"Time":"2025-10-04T21:53:57.400857227+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetStreams_ReqMTX002_Success_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.405796681+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetStreams_ReqMTX002_Success_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.405871411+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetStreams_ReqMTX002_Success_Refactored","Output":"--- FAIL: TestController_GetStreams_ReqMTX002_Success_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.405892976+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetStreams_ReqMTX002_Success_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.405911112+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetStream_ReqMTX002_Success_Refactored"}
{"Time":"2025-10-04T21:53:57.405939967+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetStream_ReqMTX002_Success_Refactored","Output":"=== RUN   TestController_GetStream_ReqMTX002_Success_Refactored\n"}
{"Time":"2025-10-04T21:53:57.407141105+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetStream_ReqMTX002_Success_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.411371137+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetStream_ReqMTX002_Success_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.411462365+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetStream_ReqMTX002_Success_Refactored","Output":"--- FAIL: TestController_GetStream_ReqMTX002_Success_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.411479768+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetStream_ReqMTX002_Success_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.41150434+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_CreateStream_ReqMTX002_StreamManagement_Refactored"}
{"Time":"2025-10-04T21:53:57.411514812+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_CreateStream_ReqMTX002_StreamManagement_Refactored","Output":"=== RUN   TestController_CreateStream_ReqMTX002_StreamManagement_Refactored\n"}
{"Time":"2025-10-04T21:53:57.412362024+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_CreateStream_ReqMTX002_StreamManagement_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.414032439+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:53:57.415592619+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_CreateStream_ReqMTX002_StreamManagement_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.415664353+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_CreateStream_ReqMTX002_StreamManagement_Refactored","Output":"--- FAIL: TestController_CreateStream_ReqMTX002_StreamManagement_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.415708124+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_CreateStream_ReqMTX002_StreamManagement_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:57.415727698+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_DeleteStream_ReqMTX002_Success_Refactored"}
{"Time":"2025-10-04T21:53:57.415739096+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_DeleteStream_ReqMTX002_Success_Refactored","Output":"=== RUN   TestController_DeleteStream_ReqMTX002_Success_Refactored\n"}
{"Time":"2025-10-04T21:53:57.416515508+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_DeleteStream_ReqMTX002_Success_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.419491462+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_DeleteStream_ReqMTX002_Success_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.419565339+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_DeleteStream_ReqMTX002_Success_Refactored","Output":"--- FAIL: TestController_DeleteStream_ReqMTX002_Success_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.419588367+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_DeleteStream_ReqMTX002_Success_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:57.419603152+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetStream_ReqMTX004_RTSPOperations_Refactored"}
{"Time":"2025-10-04T21:53:57.419612607+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetStream_ReqMTX004_RTSPOperations_Refactored","Output":"=== RUN   TestController_GetStream_ReqMTX004_RTSPOperations_Refactored\n"}
{"Time":"2025-10-04T21:53:57.42043697+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetStream_ReqMTX004_RTSPOperations_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.423554468+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetStream_ReqMTX004_RTSPOperations_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.423647542+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetStream_ReqMTX004_RTSPOperations_Refactored","Output":"--- FAIL: TestController_GetStream_ReqMTX004_RTSPOperations_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.423694827+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetStream_ReqMTX004_RTSPOperations_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:57.423715222+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetPaths_ReqMTX003_Management_Refactored"}
{"Time":"2025-10-04T21:53:57.423726509+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetPaths_ReqMTX003_Management_Refactored","Output":"=== RUN   TestController_GetPaths_ReqMTX003_Management_Refactored\n"}
{"Time":"2025-10-04T21:53:57.424299535+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:57.424491168+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:57.424512332+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:57.424528169+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:53:57.424691894+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetPaths_ReqMTX003_Management_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.42472808+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:57.424743553+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:53:57.42475843+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:53:57.424773191+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:53:57.424785371+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:53:57.425307213+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"    camera_asserters_test.go:147: ✅ Monitor stopped successfully\n"}
{"Time":"2025-10-04T21:53:57.428710574+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetPaths_ReqMTX003_Management_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.428795386+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetPaths_ReqMTX003_Management_Refactored","Output":"--- FAIL: TestController_GetPaths_ReqMTX003_Management_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.428814685+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetPaths_ReqMTX003_Management_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.428835393+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_Stream_Integration_Refactored"}
{"Time":"2025-10-04T21:53:57.428845328+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_Stream_Integration_Refactored","Output":"=== RUN   TestController_StartRecording_ReqMTX002_Stream_Integration_Refactored\n"}
{"Time":"2025-10-04T21:53:57.430158646+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_Stream_Integration_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.435143601+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"    camera_edge_cases_test.go:33: ✅ Rapid start/stop cycles validated\n"}
{"Time":"2025-10-04T21:53:57.435245853+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Output":"--- PASS: TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles (0.61s)\n"}
{"Time":"2025-10-04T21:53:57.435271131+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/rapid_start_stop_cycles","Elapsed":0.61}
{"Time":"2025-10-04T21:53:57.435289162+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases"}
{"Time":"2025-10-04T21:53:57.435298593+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"=== RUN   TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases\n"}
{"Time":"2025-10-04T21:53:57.435323997+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_Stream_Integration_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.43538482+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_Stream_Integration_Refactored","Output":"--- FAIL: TestController_StartRecording_ReqMTX002_Stream_Integration_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.435401622+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StartRecording_ReqMTX002_Stream_Integration_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.435418859+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewErrorMetricsCollector_ReqMTX008"}
{"Time":"2025-10-04T21:53:57.435431071+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewErrorMetricsCollector_ReqMTX008","Output":"=== RUN   TestNewErrorMetricsCollector_ReqMTX008\n"}
{"Time":"2025-10-04T21:53:57.435450695+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:53:57.435462178+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:53:57.435472793+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:53:57.435706959+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:57.435861728+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:53:57.435887482+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:53:57.435907269+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:57.435920517+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:53:57.435941924+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:53:57.435955817+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:53:57.435969948+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:53:57.435980693+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:53:57.435993126+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:53:57.436149711+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:53:57.436351297+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:53:57.436608024+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:53:57.437561506+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewErrorMetricsCollector_ReqMTX008","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.442446981+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewErrorMetricsCollector_ReqMTX008","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.442541127+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewErrorMetricsCollector_ReqMTX008","Output":"--- FAIL: TestNewErrorMetricsCollector_ReqMTX008 (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.442562955+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewErrorMetricsCollector_ReqMTX008","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.442600241+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorMetricsCollector_RecordError_ReqMTX008"}
{"Time":"2025-10-04T21:53:57.44260948+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorMetricsCollector_RecordError_ReqMTX008","Output":"=== RUN   TestErrorMetricsCollector_RecordError_ReqMTX008\n"}
{"Time":"2025-10-04T21:53:57.443973991+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorMetricsCollector_RecordError_ReqMTX008","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.448468623+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:53:57.44853641+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:53:57.448560104+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:53:57.44857145+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:53:57.448580548+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:53:57.448590311+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:53:57.448599395+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:53:57.44925158+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorMetricsCollector_RecordError_ReqMTX008","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.449313196+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorMetricsCollector_RecordError_ReqMTX008","Output":"--- FAIL: TestErrorMetricsCollector_RecordError_ReqMTX008 (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.449340076+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorMetricsCollector_RecordError_ReqMTX008","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.449401724+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorMetricsCollector_RecordRecoveryAttempt_ReqMTX008"}
{"Time":"2025-10-04T21:53:57.449414242+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorMetricsCollector_RecordRecoveryAttempt_ReqMTX008","Output":"=== RUN   TestErrorMetricsCollector_RecordRecoveryAttempt_ReqMTX008\n"}
{"Time":"2025-10-04T21:53:57.450732387+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorMetricsCollector_RecordRecoveryAttempt_ReqMTX008","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.455684259+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorMetricsCollector_RecordRecoveryAttempt_ReqMTX008","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.455763361+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorMetricsCollector_RecordRecoveryAttempt_ReqMTX008","Output":"--- FAIL: TestErrorMetricsCollector_RecordRecoveryAttempt_ReqMTX008 (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.455783204+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorMetricsCollector_RecordRecoveryAttempt_ReqMTX008","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.455806603+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorMetricsCollector_GetMetrics_ReqMTX008"}
{"Time":"2025-10-04T21:53:57.455816942+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorMetricsCollector_GetMetrics_ReqMTX008","Output":"=== RUN   TestErrorMetricsCollector_GetMetrics_ReqMTX008\n"}
{"Time":"2025-10-04T21:53:57.457060309+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorMetricsCollector_GetMetrics_ReqMTX008","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.461018663+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorMetricsCollector_GetMetrics_ReqMTX008","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.461110212+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorMetricsCollector_GetMetrics_ReqMTX008","Output":"--- FAIL: TestErrorMetricsCollector_GetMetrics_ReqMTX008 (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.461128614+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorMetricsCollector_GetMetrics_ReqMTX008","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.461174963+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorMetricsCollector_GetUptime_ReqMTX008"}
{"Time":"2025-10-04T21:53:57.46118968+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorMetricsCollector_GetUptime_ReqMTX008","Output":"=== RUN   TestErrorMetricsCollector_GetUptime_ReqMTX008\n"}
{"Time":"2025-10-04T21:53:57.462073313+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorMetricsCollector_GetUptime_ReqMTX008","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.465224844+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorMetricsCollector_GetUptime_ReqMTX008","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.465308369+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorMetricsCollector_GetUptime_ReqMTX008","Output":"--- FAIL: TestErrorMetricsCollector_GetUptime_ReqMTX008 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.465327644+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorMetricsCollector_GetUptime_ReqMTX008","Elapsed":0}
{"Time":"2025-10-04T21:53:57.465341954+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorMetricsCollector_Reset_ReqMTX008"}
{"Time":"2025-10-04T21:53:57.465351191+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorMetricsCollector_Reset_ReqMTX008","Output":"=== RUN   TestErrorMetricsCollector_Reset_ReqMTX008\n"}
{"Time":"2025-10-04T21:53:57.466232635+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorMetricsCollector_Reset_ReqMTX008","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.469360154+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorMetricsCollector_Reset_ReqMTX008","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.469434378+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorMetricsCollector_Reset_ReqMTX008","Output":"--- FAIL: TestErrorMetricsCollector_Reset_ReqMTX008 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.469446772+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorMetricsCollector_Reset_ReqMTX008","Elapsed":0}
{"Time":"2025-10-04T21:53:57.469489388+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewErrorAlerter_ReqMTX008"}
{"Time":"2025-10-04T21:53:57.469500051+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewErrorAlerter_ReqMTX008","Output":"=== RUN   TestNewErrorAlerter_ReqMTX008\n"}
{"Time":"2025-10-04T21:53:57.470349539+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewErrorAlerter_ReqMTX008","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.473576464+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewErrorAlerter_ReqMTX008","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.473661935+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewErrorAlerter_ReqMTX008","Output":"--- FAIL: TestNewErrorAlerter_ReqMTX008 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.473683074+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewErrorAlerter_ReqMTX008","Elapsed":0}
{"Time":"2025-10-04T21:53:57.47369757+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorAlerter_CheckThresholds_ReqMTX008"}
{"Time":"2025-10-04T21:53:57.473706799+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorAlerter_CheckThresholds_ReqMTX008","Output":"=== RUN   TestErrorAlerter_CheckThresholds_ReqMTX008\n"}
{"Time":"2025-10-04T21:53:57.474605146+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorAlerter_CheckThresholds_ReqMTX008","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.477740377+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorAlerter_CheckThresholds_ReqMTX008","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.477825308+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorAlerter_CheckThresholds_ReqMTX008","Output":"--- FAIL: TestErrorAlerter_CheckThresholds_ReqMTX008 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.477839625+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorAlerter_CheckThresholds_ReqMTX008","Elapsed":0}
{"Time":"2025-10-04T21:53:57.477859431+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorAlerter_GetAlertStatus_ReqMTX008"}
{"Time":"2025-10-04T21:53:57.477869949+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorAlerter_GetAlertStatus_ReqMTX008","Output":"=== RUN   TestErrorAlerter_GetAlertStatus_ReqMTX008\n"}
{"Time":"2025-10-04T21:53:57.478723505+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorAlerter_GetAlertStatus_ReqMTX008","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.482625968+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorAlerter_GetAlertStatus_ReqMTX008","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.482724061+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorAlerter_GetAlertStatus_ReqMTX008","Output":"--- FAIL: TestErrorAlerter_GetAlertStatus_ReqMTX008 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.482742795+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorAlerter_GetAlertStatus_ReqMTX008","Elapsed":0}
{"Time":"2025-10-04T21:53:57.482765603+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorAlerter_RateLimit_ReqMTX008"}
{"Time":"2025-10-04T21:53:57.482777504+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorAlerter_RateLimit_ReqMTX008","Output":"=== RUN   TestErrorAlerter_RateLimit_ReqMTX008\n"}
{"Time":"2025-10-04T21:53:57.483687106+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorAlerter_RateLimit_ReqMTX008","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.486861769+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorAlerter_RateLimit_ReqMTX008","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.486961004+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorAlerter_RateLimit_ReqMTX008","Output":"--- FAIL: TestErrorAlerter_RateLimit_ReqMTX008 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.486983898+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorAlerter_RateLimit_ReqMTX008","Elapsed":0}
{"Time":"2025-10-04T21:53:57.486999277+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorAlertThresholds_ReqMTX008"}
{"Time":"2025-10-04T21:53:57.487019306+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorAlertThresholds_ReqMTX008","Output":"=== RUN   TestErrorAlertThresholds_ReqMTX008\n"}
{"Time":"2025-10-04T21:53:57.487052675+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorAlertThresholds_ReqMTX008","Output":"--- PASS: TestErrorAlertThresholds_ReqMTX008 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.487064132+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorAlertThresholds_ReqMTX008","Elapsed":0}
{"Time":"2025-10-04T21:53:57.487076333+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorMetrics_ReqMTX008"}
{"Time":"2025-10-04T21:53:57.487085261+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorMetrics_ReqMTX008","Output":"=== RUN   TestErrorMetrics_ReqMTX008\n"}
{"Time":"2025-10-04T21:53:57.487095966+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorMetrics_ReqMTX008","Output":"--- PASS: TestErrorMetrics_ReqMTX008 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.487107884+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorMetrics_ReqMTX008","Elapsed":0}
{"Time":"2025-10-04T21:53:57.487116809+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewErrorRecoveryManager_ReqMTX007"}
{"Time":"2025-10-04T21:53:57.487124402+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewErrorRecoveryManager_ReqMTX007","Output":"=== RUN   TestNewErrorRecoveryManager_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:57.488112788+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewErrorRecoveryManager_ReqMTX007","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.491164412+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewErrorRecoveryManager_ReqMTX007","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.491251693+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewErrorRecoveryManager_ReqMTX007","Output":"--- FAIL: TestNewErrorRecoveryManager_ReqMTX007 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.491272275+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewErrorRecoveryManager_ReqMTX007","Elapsed":0}
{"Time":"2025-10-04T21:53:57.491290382+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_RegisterStrategy_ReqMTX007"}
{"Time":"2025-10-04T21:53:57.491300426+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_RegisterStrategy_ReqMTX007","Output":"=== RUN   TestErrorRecoveryManager_RegisterStrategy_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:57.492124283+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_RegisterStrategy_ReqMTX007","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.495240576+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_RegisterStrategy_ReqMTX007","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.495352259+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_RegisterStrategy_ReqMTX007","Output":"--- FAIL: TestErrorRecoveryManager_RegisterStrategy_ReqMTX007 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.495368888+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_RegisterStrategy_ReqMTX007","Elapsed":0}
{"Time":"2025-10-04T21:53:57.49538693+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_HandleError_NoRecovery_ReqMTX007"}
{"Time":"2025-10-04T21:53:57.495396163+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_HandleError_NoRecovery_ReqMTX007","Output":"=== RUN   TestErrorRecoveryManager_HandleError_NoRecovery_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:57.496269689+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_HandleError_NoRecovery_ReqMTX007","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.499367939+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_HandleError_NoRecovery_ReqMTX007","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.49945321+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_HandleError_NoRecovery_ReqMTX007","Output":"--- FAIL: TestErrorRecoveryManager_HandleError_NoRecovery_ReqMTX007 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.499478203+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_HandleError_NoRecovery_ReqMTX007","Elapsed":0}
{"Time":"2025-10-04T21:53:57.499498383+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_HandleError_NoApplicableStrategy_ReqMTX007"}
{"Time":"2025-10-04T21:53:57.499512491+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_HandleError_NoApplicableStrategy_ReqMTX007","Output":"=== RUN   TestErrorRecoveryManager_HandleError_NoApplicableStrategy_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:57.500376388+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_HandleError_NoApplicableStrategy_ReqMTX007","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.50440645+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_HandleError_NoApplicableStrategy_ReqMTX007","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.504496668+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_HandleError_NoApplicableStrategy_ReqMTX007","Output":"--- FAIL: TestErrorRecoveryManager_HandleError_NoApplicableStrategy_ReqMTX007 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.504521782+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_HandleError_NoApplicableStrategy_ReqMTX007","Elapsed":0}
{"Time":"2025-10-04T21:53:57.504540687+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_HandleError_SuccessfulRecovery_ReqMTX007"}
{"Time":"2025-10-04T21:53:57.504552982+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_HandleError_SuccessfulRecovery_ReqMTX007","Output":"=== RUN   TestErrorRecoveryManager_HandleError_SuccessfulRecovery_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:57.505502391+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_HandleError_SuccessfulRecovery_ReqMTX007","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.508799235+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_HandleError_SuccessfulRecovery_ReqMTX007","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.508882547+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_HandleError_SuccessfulRecovery_ReqMTX007","Output":"--- FAIL: TestErrorRecoveryManager_HandleError_SuccessfulRecovery_ReqMTX007 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.508900952+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_HandleError_SuccessfulRecovery_ReqMTX007","Elapsed":0}
{"Time":"2025-10-04T21:53:57.508924728+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_HandleError_FailedRecovery_ReqMTX007"}
{"Time":"2025-10-04T21:53:57.508938926+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_HandleError_FailedRecovery_ReqMTX007","Output":"=== RUN   TestErrorRecoveryManager_HandleError_FailedRecovery_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:57.509782863+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_HandleError_FailedRecovery_ReqMTX007","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.512951017+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_HandleError_FailedRecovery_ReqMTX007","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.513027915+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_HandleError_FailedRecovery_ReqMTX007","Output":"--- FAIL: TestErrorRecoveryManager_HandleError_FailedRecovery_ReqMTX007 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.513042149+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_HandleError_FailedRecovery_ReqMTX007","Elapsed":0}
{"Time":"2025-10-04T21:53:57.513059503+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_HandleError_MultipleStrategies_ReqMTX007"}
{"Time":"2025-10-04T21:53:57.513070607+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_HandleError_MultipleStrategies_ReqMTX007","Output":"=== RUN   TestErrorRecoveryManager_HandleError_MultipleStrategies_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:57.513932375+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_HandleError_MultipleStrategies_ReqMTX007","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.517037102+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_HandleError_MultipleStrategies_ReqMTX007","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.517121151+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_HandleError_MultipleStrategies_ReqMTX007","Output":"--- FAIL: TestErrorRecoveryManager_HandleError_MultipleStrategies_ReqMTX007 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.517140291+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_HandleError_MultipleStrategies_ReqMTX007","Elapsed":0}
{"Time":"2025-10-04T21:53:57.517164372+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_HandleError_RecoveryInProgress_ReqMTX007"}
{"Time":"2025-10-04T21:53:57.517178231+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_HandleError_RecoveryInProgress_ReqMTX007","Output":"=== RUN   TestErrorRecoveryManager_HandleError_RecoveryInProgress_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:57.518030934+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_HandleError_RecoveryInProgress_ReqMTX007","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.521173176+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_HandleError_RecoveryInProgress_ReqMTX007","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.521285251+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_HandleError_RecoveryInProgress_ReqMTX007","Output":"--- FAIL: TestErrorRecoveryManager_HandleError_RecoveryInProgress_ReqMTX007 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.521304692+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_HandleError_RecoveryInProgress_ReqMTX007","Elapsed":0}
{"Time":"2025-10-04T21:53:57.521337775+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_GetMetrics_ReqMTX008"}
{"Time":"2025-10-04T21:53:57.521352681+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_GetMetrics_ReqMTX008","Output":"=== RUN   TestErrorRecoveryManager_GetMetrics_ReqMTX008\n"}
{"Time":"2025-10-04T21:53:57.522157416+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_GetMetrics_ReqMTX008","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.527298363+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_GetMetrics_ReqMTX008","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.527409459+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_GetMetrics_ReqMTX008","Output":"--- FAIL: TestErrorRecoveryManager_GetMetrics_ReqMTX008 (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.5274283+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorRecoveryManager_GetMetrics_ReqMTX008","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.527447059+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXError_ReqMTX007"}
{"Time":"2025-10-04T21:53:57.527458318+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXError_ReqMTX007","Output":"=== RUN   TestNewMediaMTXError_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:57.527498803+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXError_ReqMTX007","Output":"--- PASS: TestNewMediaMTXError_ReqMTX007 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.527513048+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXError_ReqMTX007","Elapsed":0}
{"Time":"2025-10-04T21:53:57.527523795+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorWithOp_ReqMTX007"}
{"Time":"2025-10-04T21:53:57.527532753+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorWithOp_ReqMTX007","Output":"=== RUN   TestNewMediaMTXErrorWithOp_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:57.52754364+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorWithOp_ReqMTX007","Output":"--- PASS: TestNewMediaMTXErrorWithOp_ReqMTX007 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.527555025+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorWithOp_ReqMTX007","Elapsed":0}
{"Time":"2025-10-04T21:53:57.527565816+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007"}
{"Time":"2025-10-04T21:53:57.527575488+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007","Output":"=== RUN   TestNewMediaMTXErrorFromHTTP_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:57.527586246+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007/Unauthorized"}
{"Time":"2025-10-04T21:53:57.527595751+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007/Unauthorized","Output":"=== RUN   TestNewMediaMTXErrorFromHTTP_ReqMTX007/Unauthorized\n"}
{"Time":"2025-10-04T21:53:57.527607427+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007/Unauthorized","Output":"--- PASS: TestNewMediaMTXErrorFromHTTP_ReqMTX007/Unauthorized (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.527618541+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007/Unauthorized","Elapsed":0}
{"Time":"2025-10-04T21:53:57.52762972+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007/Forbidden"}
{"Time":"2025-10-04T21:53:57.527639775+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007/Forbidden","Output":"=== RUN   TestNewMediaMTXErrorFromHTTP_ReqMTX007/Forbidden\n"}
{"Time":"2025-10-04T21:53:57.527651083+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007/Forbidden","Output":"--- PASS: TestNewMediaMTXErrorFromHTTP_ReqMTX007/Forbidden (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.52766163+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007/Forbidden","Elapsed":0}
{"Time":"2025-10-04T21:53:57.527672374+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007/Not_Found"}
{"Time":"2025-10-04T21:53:57.527690793+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007/Not_Found","Output":"=== RUN   TestNewMediaMTXErrorFromHTTP_ReqMTX007/Not_Found\n"}
{"Time":"2025-10-04T21:53:57.528914823+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007/Not_Found","Output":"--- PASS: TestNewMediaMTXErrorFromHTTP_ReqMTX007/Not_Found (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.529089541+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007/Not_Found","Elapsed":0}
{"Time":"2025-10-04T21:53:57.529114917+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007/Conflict"}
{"Time":"2025-10-04T21:53:57.52913429+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007/Conflict","Output":"=== RUN   TestNewMediaMTXErrorFromHTTP_ReqMTX007/Conflict\n"}
{"Time":"2025-10-04T21:53:57.529148353+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007/Conflict","Output":"--- PASS: TestNewMediaMTXErrorFromHTTP_ReqMTX007/Conflict (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.529158948+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007/Conflict","Elapsed":0}
{"Time":"2025-10-04T21:53:57.529168509+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007/Internal_Server_Error"}
{"Time":"2025-10-04T21:53:57.529176902+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007/Internal_Server_Error","Output":"=== RUN   TestNewMediaMTXErrorFromHTTP_ReqMTX007/Internal_Server_Error\n"}
{"Time":"2025-10-04T21:53:57.529189354+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007/Internal_Server_Error","Output":"--- PASS: TestNewMediaMTXErrorFromHTTP_ReqMTX007/Internal_Server_Error (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.529205263+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007/Internal_Server_Error","Elapsed":0}
{"Time":"2025-10-04T21:53:57.529232955+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007/Bad_Gateway"}
{"Time":"2025-10-04T21:53:57.529242674+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007/Bad_Gateway","Output":"=== RUN   TestNewMediaMTXErrorFromHTTP_ReqMTX007/Bad_Gateway\n"}
{"Time":"2025-10-04T21:53:57.529254208+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007/Bad_Gateway","Output":"--- PASS: TestNewMediaMTXErrorFromHTTP_ReqMTX007/Bad_Gateway (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.529264299+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007/Bad_Gateway","Elapsed":0}
{"Time":"2025-10-04T21:53:57.529273951+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007/Service_Unavailable"}
{"Time":"2025-10-04T21:53:57.52928263+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007/Service_Unavailable","Output":"=== RUN   TestNewMediaMTXErrorFromHTTP_ReqMTX007/Service_Unavailable\n"}
{"Time":"2025-10-04T21:53:57.529313476+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007/Service_Unavailable","Output":"--- PASS: TestNewMediaMTXErrorFromHTTP_ReqMTX007/Service_Unavailable (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.529331246+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007/Service_Unavailable","Elapsed":0}
{"Time":"2025-10-04T21:53:57.529342176+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007/Gateway_Timeout"}
{"Time":"2025-10-04T21:53:57.529351366+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007/Gateway_Timeout","Output":"=== RUN   TestNewMediaMTXErrorFromHTTP_ReqMTX007/Gateway_Timeout\n"}
{"Time":"2025-10-04T21:53:57.529362087+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007/Gateway_Timeout","Output":"--- PASS: TestNewMediaMTXErrorFromHTTP_ReqMTX007/Gateway_Timeout (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.52937165+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007/Gateway_Timeout","Elapsed":0}
{"Time":"2025-10-04T21:53:57.529380856+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007/#00"}
{"Time":"2025-10-04T21:53:57.529389292+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007/#00","Output":"=== RUN   TestNewMediaMTXErrorFromHTTP_ReqMTX007/#00\n"}
{"Time":"2025-10-04T21:53:57.529405218+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007/#00","Output":"--- PASS: TestNewMediaMTXErrorFromHTTP_ReqMTX007/#00 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.529416848+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007/#00","Elapsed":0}
{"Time":"2025-10-04T21:53:57.529428132+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007","Output":"--- PASS: TestNewMediaMTXErrorFromHTTP_ReqMTX007 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.529437993+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewMediaMTXErrorFromHTTP_ReqMTX007","Elapsed":0}
{"Time":"2025-10-04T21:53:57.529447941+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewPathError_ReqMTX007"}
{"Time":"2025-10-04T21:53:57.529456693+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewPathError_ReqMTX007","Output":"=== RUN   TestNewPathError_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:57.52946717+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewPathError_ReqMTX007","Output":"--- PASS: TestNewPathError_ReqMTX007 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.529485341+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewPathError_ReqMTX007","Elapsed":0}
{"Time":"2025-10-04T21:53:57.529501035+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_Error_ReqMTX007"}
{"Time":"2025-10-04T21:53:57.529518524+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_Error_ReqMTX007","Output":"=== RUN   TestError_Error_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:57.529529549+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_Error_ReqMTX007/MediaMTX_error:_Not_Found_(code:_404)"}
{"Time":"2025-10-04T21:53:57.529538268+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_Error_ReqMTX007/MediaMTX_error:_Not_Found_(code:_404)","Output":"=== RUN   TestError_Error_ReqMTX007/MediaMTX_error:_Not_Found_(code:_404)\n"}
{"Time":"2025-10-04T21:53:57.529549219+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_Error_ReqMTX007/MediaMTX_error:_Not_Found_(code:_404)","Output":"--- PASS: TestError_Error_ReqMTX007/MediaMTX_error:_Not_Found_(code:_404) (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.529559094+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_Error_ReqMTX007/MediaMTX_error:_Not_Found_(code:_404)","Elapsed":0}
{"Time":"2025-10-04T21:53:57.529569081+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_Error_ReqMTX007/MediaMTX_error_[CreatePath]:_Server_Error_(code:_500)"}
{"Time":"2025-10-04T21:53:57.529577384+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_Error_ReqMTX007/MediaMTX_error_[CreatePath]:_Server_Error_(code:_500)","Output":"=== RUN   TestError_Error_ReqMTX007/MediaMTX_error_[CreatePath]:_Server_Error_(code:_500)\n"}
{"Time":"2025-10-04T21:53:57.529590424+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_Error_ReqMTX007/MediaMTX_error_[CreatePath]:_Server_Error_(code:_500)","Output":"--- PASS: TestError_Error_ReqMTX007/MediaMTX_error_[CreatePath]:_Server_Error_(code:_500) (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.529606064+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_Error_ReqMTX007/MediaMTX_error_[CreatePath]:_Server_Error_(code:_500)","Elapsed":0}
{"Time":"2025-10-04T21:53:57.529620714+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_Error_ReqMTX007/path_path123:_Create:_Failed_to_create"}
{"Time":"2025-10-04T21:53:57.529632361+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_Error_ReqMTX007/path_path123:_Create:_Failed_to_create","Output":"=== RUN   TestError_Error_ReqMTX007/path_path123:_Create:_Failed_to_create\n"}
{"Time":"2025-10-04T21:53:57.529643456+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_Error_ReqMTX007/path_path123:_Create:_Failed_to_create","Output":"--- PASS: TestError_Error_ReqMTX007/path_path123:_Create:_Failed_to_create (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.529653618+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_Error_ReqMTX007/path_path123:_Create:_Failed_to_create","Elapsed":0}
{"Time":"2025-10-04T21:53:57.529666812+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_Error_ReqMTX007","Output":"--- PASS: TestError_Error_ReqMTX007 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.529676586+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_Error_ReqMTX007","Elapsed":0}
{"Time":"2025-10-04T21:53:57.529699053+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_Unwrap_ReqMTX007"}
{"Time":"2025-10-04T21:53:57.529710959+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_Unwrap_ReqMTX007","Output":"=== RUN   TestError_Unwrap_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:57.529722227+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_Unwrap_ReqMTX007","Output":"--- PASS: TestError_Unwrap_ReqMTX007 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.529731602+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_Unwrap_ReqMTX007","Elapsed":0}
{"Time":"2025-10-04T21:53:57.529744716+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_Is_ReqMTX007"}
{"Time":"2025-10-04T21:53:57.529753693+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_Is_ReqMTX007","Output":"=== RUN   TestError_Is_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:57.529763828+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_Is_ReqMTX007","Output":"--- PASS: TestError_Is_ReqMTX007 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.529772932+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_Is_ReqMTX007","Elapsed":0}
{"Time":"2025-10-04T21:53:57.529783136+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_As_ReqMTX007"}
{"Time":"2025-10-04T21:53:57.52980004+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_As_ReqMTX007","Output":"=== RUN   TestError_As_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:57.52981267+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_As_ReqMTX007","Output":"--- PASS: TestError_As_ReqMTX007 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.529822385+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_As_ReqMTX007","Elapsed":0}
{"Time":"2025-10-04T21:53:57.529832092+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_Validation_ReqMTX007"}
{"Time":"2025-10-04T21:53:57.529840361+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_Validation_ReqMTX007","Output":"=== RUN   TestError_Validation_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:57.529849625+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_Validation_ReqMTX007/Valid_MediaMTX_Error"}
{"Time":"2025-10-04T21:53:57.529857909+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_Validation_ReqMTX007/Valid_MediaMTX_Error","Output":"=== RUN   TestError_Validation_ReqMTX007/Valid_MediaMTX_Error\n"}
{"Time":"2025-10-04T21:53:57.529868372+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_Validation_ReqMTX007/Valid_MediaMTX_Error","Output":"--- PASS: TestError_Validation_ReqMTX007/Valid_MediaMTX_Error (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.529878829+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_Validation_ReqMTX007/Valid_MediaMTX_Error","Elapsed":0}
{"Time":"2025-10-04T21:53:57.529894228+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_Validation_ReqMTX007/Valid_Path_Error"}
{"Time":"2025-10-04T21:53:57.529911086+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_Validation_ReqMTX007/Valid_Path_Error","Output":"=== RUN   TestError_Validation_ReqMTX007/Valid_Path_Error\n"}
{"Time":"2025-10-04T21:53:57.529923618+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_Validation_ReqMTX007/Valid_Path_Error","Output":"--- PASS: TestError_Validation_ReqMTX007/Valid_Path_Error (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.529933398+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_Validation_ReqMTX007/Valid_Path_Error","Elapsed":0}
{"Time":"2025-10-04T21:53:57.529944318+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_Validation_ReqMTX007","Output":"--- PASS: TestError_Validation_ReqMTX007 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.529954237+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestError_Validation_ReqMTX007","Elapsed":0}
{"Time":"2025-10-04T21:53:57.529963381+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewFFmpegManager_ReqMTX001"}
{"Time":"2025-10-04T21:53:57.529971667+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewFFmpegManager_ReqMTX001","Output":"=== RUN   TestNewFFmpegManager_ReqMTX001\n"}
{"Time":"2025-10-04T21:53:57.531767382+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewFFmpegManager_ReqMTX001","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.537283543+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewFFmpegManager_ReqMTX001","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.537448407+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewFFmpegManager_ReqMTX001","Output":"--- FAIL: TestNewFFmpegManager_ReqMTX001 (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.53747519+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewFFmpegManager_ReqMTX001","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.537494567+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_SnapshotOnly_ReqMTX002"}
{"Time":"2025-10-04T21:53:57.537563704+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_SnapshotOnly_ReqMTX002","Output":"=== RUN   TestFFmpegManager_SnapshotOnly_ReqMTX002\n"}
{"Time":"2025-10-04T21:53:57.537302452+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:53:57.537591011+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"    camera_asserters_test.go:194: ✅ Device discovery completed: 1 devices found\n"}
{"Time":"2025-10-04T21:53:57.537653588+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases/non_existent_device"}
{"Time":"2025-10-04T21:53:57.537669233+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases/non_existent_device","Output":"=== RUN   TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases/non_existent_device\n"}
{"Time":"2025-10-04T21:53:57.537684857+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases/non_existent_device","Output":"--- PASS: TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases/non_existent_device (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.537701998+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases/non_existent_device","Elapsed":0}
{"Time":"2025-10-04T21:53:57.537740842+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"    camera_edge_cases_test.go:52: ✅ Device discovery edge cases validated\n"}
{"Time":"2025-10-04T21:53:57.537755955+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:57.537766678+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:57.537776952+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:57.537787499+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:53:57.538137513+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:57.538243932+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:53:57.538801396+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_SnapshotOnly_ReqMTX002","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.538847834+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:53:57.538878435+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:53:57.538892781+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:53:57.541732383+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_SnapshotOnly_ReqMTX002","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.541817212+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_SnapshotOnly_ReqMTX002","Output":"--- FAIL: TestFFmpegManager_SnapshotOnly_ReqMTX002 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.541840112+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_SnapshotOnly_ReqMTX002","Elapsed":0}
{"Time":"2025-10-04T21:53:57.541856511+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_StartProcess_ReqMTX002"}
{"Time":"2025-10-04T21:53:57.541867308+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_StartProcess_ReqMTX002","Output":"=== RUN   TestFFmpegManager_StartProcess_ReqMTX002\n"}
{"Time":"2025-10-04T21:53:57.542819011+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_StartProcess_ReqMTX002","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.545916525+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_StartProcess_ReqMTX002","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.545995932+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_StartProcess_ReqMTX002","Output":"--- FAIL: TestFFmpegManager_StartProcess_ReqMTX002 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.546029325+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_StartProcess_ReqMTX002","Elapsed":0}
{"Time":"2025-10-04T21:53:57.546045998+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_StopProcess_ReqMTX002"}
{"Time":"2025-10-04T21:53:57.546079582+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_StopProcess_ReqMTX002","Output":"=== RUN   TestFFmpegManager_StopProcess_ReqMTX002\n"}
{"Time":"2025-10-04T21:53:57.546881238+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_StopProcess_ReqMTX002","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.549965213+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_StopProcess_ReqMTX002","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.550046984+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_StopProcess_ReqMTX002","Output":"--- FAIL: TestFFmpegManager_StopProcess_ReqMTX002 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.550069272+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_StopProcess_ReqMTX002","Elapsed":0}
{"Time":"2025-10-04T21:53:57.550085681+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_IsProcessRunning_ReqMTX002"}
{"Time":"2025-10-04T21:53:57.55009609+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_IsProcessRunning_ReqMTX002","Output":"=== RUN   TestFFmpegManager_IsProcessRunning_ReqMTX002\n"}
{"Time":"2025-10-04T21:53:57.550884754+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_IsProcessRunning_ReqMTX002","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.553858753+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_IsProcessRunning_ReqMTX002","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.553927842+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_IsProcessRunning_ReqMTX002","Output":"--- FAIL: TestFFmpegManager_IsProcessRunning_ReqMTX002 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.553949693+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_IsProcessRunning_ReqMTX002","Elapsed":0}
{"Time":"2025-10-04T21:53:57.553965896+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_BuildCommand_ReqMTX002"}
{"Time":"2025-10-04T21:53:57.553974861+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_BuildCommand_ReqMTX002","Output":"=== RUN   TestFFmpegManager_BuildCommand_ReqMTX002\n"}
{"Time":"2025-10-04T21:53:57.554984427+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_BuildCommand_ReqMTX002","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.558803533+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_BuildCommand_ReqMTX002","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.558881209+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_BuildCommand_ReqMTX002","Output":"--- FAIL: TestFFmpegManager_BuildCommand_ReqMTX002 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.558897625+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_BuildCommand_ReqMTX002","Elapsed":0}
{"Time":"2025-10-04T21:53:57.558918427+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_ErrorHandling_ReqMTX007"}
{"Time":"2025-10-04T21:53:57.558929113+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_ErrorHandling_ReqMTX007","Output":"=== RUN   TestFFmpegManager_ErrorHandling_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:57.559727178+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_ErrorHandling_ReqMTX007","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.562759759+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_ErrorHandling_ReqMTX007","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.562837229+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_ErrorHandling_ReqMTX007","Output":"--- FAIL: TestFFmpegManager_ErrorHandling_ReqMTX007 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.562860295+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_ErrorHandling_ReqMTX007","Elapsed":0}
{"Time":"2025-10-04T21:53:57.562887896+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_ConcurrentAccess_ReqMTX001"}
{"Time":"2025-10-04T21:53:57.562900279+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_ConcurrentAccess_ReqMTX001","Output":"=== RUN   TestFFmpegManager_ConcurrentAccess_ReqMTX001\n"}
{"Time":"2025-10-04T21:53:57.563696788+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_ConcurrentAccess_ReqMTX001","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.566693778+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_ConcurrentAccess_ReqMTX001","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.566764483+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_ConcurrentAccess_ReqMTX001","Output":"--- FAIL: TestFFmpegManager_ConcurrentAccess_ReqMTX001 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.566787006+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_ConcurrentAccess_ReqMTX001","Elapsed":0}
{"Time":"2025-10-04T21:53:57.5668025+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_PerformanceMetrics_ReqMTX002"}
{"Time":"2025-10-04T21:53:57.566813028+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_PerformanceMetrics_ReqMTX002","Output":"=== RUN   TestFFmpegManager_PerformanceMetrics_ReqMTX002\n"}
{"Time":"2025-10-04T21:53:57.567590472+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_PerformanceMetrics_ReqMTX002","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.570638387+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_PerformanceMetrics_ReqMTX002","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.570707081+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_PerformanceMetrics_ReqMTX002","Output":"--- FAIL: TestFFmpegManager_PerformanceMetrics_ReqMTX002 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.570728624+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestFFmpegManager_PerformanceMetrics_ReqMTX002","Elapsed":0}
{"Time":"2025-10-04T21:53:57.570745464+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewHealthMonitor_ReqMTX004_Refactored"}
{"Time":"2025-10-04T21:53:57.570756487+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewHealthMonitor_ReqMTX004_Refactored","Output":"=== RUN   TestNewHealthMonitor_ReqMTX004_Refactored\n"}
{"Time":"2025-10-04T21:53:57.571540136+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewHealthMonitor_ReqMTX004_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.574587406+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewHealthMonitor_ReqMTX004_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.574670932+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewHealthMonitor_ReqMTX004_Refactored","Output":"--- FAIL: TestNewHealthMonitor_ReqMTX004_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.574694724+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewHealthMonitor_ReqMTX004_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:57.574711048+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_StartStop_ReqMTX004_Refactored"}
{"Time":"2025-10-04T21:53:57.574719947+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_StartStop_ReqMTX004_Refactored","Output":"=== RUN   TestHealthMonitor_StartStop_ReqMTX004_Refactored\n"}
{"Time":"2025-10-04T21:53:57.57556601+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_StartStop_ReqMTX004_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.57963476+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_StartStop_ReqMTX004_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.579717718+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_StartStop_ReqMTX004_Refactored","Output":"--- FAIL: TestHealthMonitor_StartStop_ReqMTX004_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.579740887+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_StartStop_ReqMTX004_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:57.579756616+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_GetStatus_ReqMTX004_Refactored"}
{"Time":"2025-10-04T21:53:57.579766781+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_GetStatus_ReqMTX004_Refactored","Output":"=== RUN   TestHealthMonitor_GetStatus_ReqMTX004_Refactored\n"}
{"Time":"2025-10-04T21:53:57.580564489+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_GetStatus_ReqMTX004_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.583536838+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_GetStatus_ReqMTX004_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.583616376+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_GetStatus_ReqMTX004_Refactored","Output":"--- FAIL: TestHealthMonitor_GetStatus_ReqMTX004_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.583640055+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_GetStatus_ReqMTX004_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:57.583656013+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_GetMetrics_ReqMTX004_Refactored"}
{"Time":"2025-10-04T21:53:57.583667044+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_GetMetrics_ReqMTX004_Refactored","Output":"=== RUN   TestHealthMonitor_GetMetrics_ReqMTX004_Refactored\n"}
{"Time":"2025-10-04T21:53:57.584437552+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_GetMetrics_ReqMTX004_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.587426698+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_GetMetrics_ReqMTX004_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.587496123+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_GetMetrics_ReqMTX004_Refactored","Output":"--- FAIL: TestHealthMonitor_GetMetrics_ReqMTX004_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.587517669+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_GetMetrics_ReqMTX004_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:57.587535322+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_RecordSuccess_ReqMTX004_Refactored"}
{"Time":"2025-10-04T21:53:57.587546389+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_RecordSuccess_ReqMTX004_Refactored","Output":"=== RUN   TestHealthMonitor_RecordSuccess_ReqMTX004_Refactored\n"}
{"Time":"2025-10-04T21:53:57.588375453+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_RecordSuccess_ReqMTX004_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.591455+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_RecordSuccess_ReqMTX004_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.591536963+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_RecordSuccess_ReqMTX004_Refactored","Output":"--- FAIL: TestHealthMonitor_RecordSuccess_ReqMTX004_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.591559413+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_RecordSuccess_ReqMTX004_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:57.591575437+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_RecordFailure_ReqMTX004_Refactored"}
{"Time":"2025-10-04T21:53:57.591584864+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_RecordFailure_ReqMTX004_Refactored","Output":"=== RUN   TestHealthMonitor_RecordFailure_ReqMTX004_Refactored\n"}
{"Time":"2025-10-04T21:53:57.592346528+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_RecordFailure_ReqMTX004_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.595322422+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_RecordFailure_ReqMTX004_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.595397442+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_RecordFailure_ReqMTX004_Refactored","Output":"--- FAIL: TestHealthMonitor_RecordFailure_ReqMTX004_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.595420078+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_RecordFailure_ReqMTX004_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:57.595436775+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_Configuration_ReqMTX004_Refactored"}
{"Time":"2025-10-04T21:53:57.595446713+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_Configuration_ReqMTX004_Refactored","Output":"=== RUN   TestHealthMonitor_Configuration_ReqMTX004_Refactored\n"}
{"Time":"2025-10-04T21:53:57.59625415+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_Configuration_ReqMTX004_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.599894373+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_Configuration_ReqMTX004_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.599974613+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_Configuration_ReqMTX004_Refactored","Output":"--- FAIL: TestHealthMonitor_Configuration_ReqMTX004_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.599991478+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_Configuration_ReqMTX004_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:57.600011923+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_DebounceMechanism_ReqMTX004_Refactored"}
{"Time":"2025-10-04T21:53:57.600021203+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_DebounceMechanism_ReqMTX004_Refactored","Output":"=== RUN   TestHealthMonitor_DebounceMechanism_ReqMTX004_Refactored\n"}
{"Time":"2025-10-04T21:53:57.600794845+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_DebounceMechanism_ReqMTX004_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.603791963+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_DebounceMechanism_ReqMTX004_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.603862535+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_DebounceMechanism_ReqMTX004_Refactored","Output":"--- FAIL: TestHealthMonitor_DebounceMechanism_ReqMTX004_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.603885333+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_DebounceMechanism_ReqMTX004_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:57.603901181+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_AtomicOperations_ReqMTX004_Refactored"}
{"Time":"2025-10-04T21:53:57.603911907+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_AtomicOperations_ReqMTX004_Refactored","Output":"=== RUN   TestHealthMonitor_AtomicOperations_ReqMTX004_Refactored\n"}
{"Time":"2025-10-04T21:53:57.604669982+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_AtomicOperations_ReqMTX004_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.607597369+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_AtomicOperations_ReqMTX004_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.607666034+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_AtomicOperations_ReqMTX004_Refactored","Output":"--- FAIL: TestHealthMonitor_AtomicOperations_ReqMTX004_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.60768778+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_AtomicOperations_ReqMTX004_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:57.607704797+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_StatusTransitions_ReqMTX004_Refactored"}
{"Time":"2025-10-04T21:53:57.607715146+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_StatusTransitions_ReqMTX004_Refactored","Output":"=== RUN   TestHealthMonitor_StatusTransitions_ReqMTX004_Refactored\n"}
{"Time":"2025-10-04T21:53:57.60850118+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_StatusTransitions_ReqMTX004_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.611588568+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_StatusTransitions_ReqMTX004_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.611662021+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_StatusTransitions_ReqMTX004_Refactored","Output":"--- FAIL: TestHealthMonitor_StatusTransitions_ReqMTX004_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.611679151+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_StatusTransitions_ReqMTX004_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:57.611699452+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_GetHealthAPI_ReqMTX004_Refactored"}
{"Time":"2025-10-04T21:53:57.611709468+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_GetHealthAPI_ReqMTX004_Refactored","Output":"=== RUN   TestHealthMonitor_GetHealthAPI_ReqMTX004_Refactored\n"}
{"Time":"2025-10-04T21:53:57.612560873+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_GetHealthAPI_ReqMTX004_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.615689801+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_GetHealthAPI_ReqMTX004_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.615767503+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_GetHealthAPI_ReqMTX004_Refactored","Output":"--- FAIL: TestHealthMonitor_GetHealthAPI_ReqMTX004_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.615790647+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_GetHealthAPI_ReqMTX004_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:57.615807527+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_GetHealthAPI_APICompliance_ReqAPI001_Refactored"}
{"Time":"2025-10-04T21:53:57.615817284+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_GetHealthAPI_APICompliance_ReqAPI001_Refactored","Output":"=== RUN   TestHealthMonitor_GetHealthAPI_APICompliance_ReqAPI001_Refactored\n"}
{"Time":"2025-10-04T21:53:57.616637254+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_GetHealthAPI_APICompliance_ReqAPI001_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.619660009+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_GetHealthAPI_APICompliance_ReqAPI001_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.619737985+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_GetHealthAPI_APICompliance_ReqAPI001_Refactored","Output":"--- FAIL: TestHealthMonitor_GetHealthAPI_APICompliance_ReqAPI001_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.619760027+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_GetHealthAPI_APICompliance_ReqAPI001_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:57.619776443+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_GetHealthAPI_ErrorScenarios_ReqMTX004_Refactored"}
{"Time":"2025-10-04T21:53:57.61978575+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_GetHealthAPI_ErrorScenarios_ReqMTX004_Refactored","Output":"=== RUN   TestHealthMonitor_GetHealthAPI_ErrorScenarios_ReqMTX004_Refactored\n"}
{"Time":"2025-10-04T21:53:57.62139641+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_GetHealthAPI_ErrorScenarios_ReqMTX004_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.624455822+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_GetHealthAPI_ErrorScenarios_ReqMTX004_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.624561976+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_GetHealthAPI_ErrorScenarios_ReqMTX004_Refactored","Output":"--- FAIL: TestHealthMonitor_GetHealthAPI_ErrorScenarios_ReqMTX004_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.624583321+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthMonitor_GetHealthAPI_ErrorScenarios_ReqMTX004_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:57.624718703+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewHealthNotificationManager_ReqMTX004"}
{"Time":"2025-10-04T21:53:57.624730202+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewHealthNotificationManager_ReqMTX004","Output":"=== RUN   TestNewHealthNotificationManager_ReqMTX004\n"}
{"Time":"2025-10-04T21:53:57.624743118+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewHealthNotificationManager_ReqMTX004","Output":"--- PASS: TestNewHealthNotificationManager_ReqMTX004 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.624752824+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewHealthNotificationManager_ReqMTX004","Elapsed":0}
{"Time":"2025-10-04T21:53:57.624874557+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_CheckStorageThresholds_ReqMTX004"}
{"Time":"2025-10-04T21:53:57.624888963+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_CheckStorageThresholds_ReqMTX004","Output":"=== RUN   TestHealthNotificationManager_CheckStorageThresholds_ReqMTX004\n"}
{"Time":"2025-10-04T21:53:57.62490193+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_CheckStorageThresholds_ReqMTX004","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Attempting compare-and-swap\"\n"}
{"Time":"2025-10-04T21:53:57.624913848+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_CheckStorageThresholds_ReqMTX004","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Health notification approved - state change detected\"\n"}
{"Time":"2025-10-04T21:53:57.624936254+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_CheckStorageThresholds_ReqMTX004","Output":"time=\"2025-10-04 21:53:57\" level=warning msg=\"Storage threshold exceeded\"\n"}
{"Time":"2025-10-04T21:53:57.624982167+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_CheckStorageThresholds_ReqMTX004","Output":"--- PASS: TestHealthNotificationManager_CheckStorageThresholds_ReqMTX004 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.625000228+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_CheckStorageThresholds_ReqMTX004","Elapsed":0}
{"Time":"2025-10-04T21:53:57.625015171+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_CheckPerformanceThresholds_ReqMTX004"}
{"Time":"2025-10-04T21:53:57.625027367+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_CheckPerformanceThresholds_ReqMTX004","Output":"=== RUN   TestHealthNotificationManager_CheckPerformanceThresholds_ReqMTX004\n"}
{"Time":"2025-10-04T21:53:57.625039669+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_CheckPerformanceThresholds_ReqMTX004","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Checking performance thresholds\"\n"}
{"Time":"2025-10-04T21:53:57.625062888+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_CheckPerformanceThresholds_ReqMTX004","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Memory usage threshold exceeded\"\n"}
{"Time":"2025-10-04T21:53:57.625076098+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_CheckPerformanceThresholds_ReqMTX004","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Attempting compare-and-swap\"\n"}
{"Time":"2025-10-04T21:53:57.625087863+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_CheckPerformanceThresholds_ReqMTX004","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Health notification approved - state change detected\"\n"}
{"Time":"2025-10-04T21:53:57.62509976+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_CheckPerformanceThresholds_ReqMTX004","Output":"time=\"2025-10-04 21:53:57\" level=warning msg=\"Performance threshold exceeded\"\n"}
{"Time":"2025-10-04T21:53:57.625114073+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_CheckPerformanceThresholds_ReqMTX004","Output":"--- PASS: TestHealthNotificationManager_CheckPerformanceThresholds_ReqMTX004 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.62512776+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_CheckPerformanceThresholds_ReqMTX004","Elapsed":0}
{"Time":"2025-10-04T21:53:57.625141522+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_DebounceMechanism_ReqMTX004"}
{"Time":"2025-10-04T21:53:57.62515247+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_DebounceMechanism_ReqMTX004","Output":"=== RUN   TestHealthNotificationManager_DebounceMechanism_ReqMTX004\n"}
{"Time":"2025-10-04T21:53:57.625167131+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_DebounceMechanism_ReqMTX004","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.628203945+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_DebounceMechanism_ReqMTX004","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.628320723+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_DebounceMechanism_ReqMTX004","Output":"--- FAIL: TestHealthNotificationManager_DebounceMechanism_ReqMTX004 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.628343839+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_DebounceMechanism_ReqMTX004","Elapsed":0}
{"Time":"2025-10-04T21:53:57.628361944+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_AtomicOperations_ReqMTX004"}
{"Time":"2025-10-04T21:53:57.628372366+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_AtomicOperations_ReqMTX004","Output":"=== RUN   TestHealthNotificationManager_AtomicOperations_ReqMTX004\n"}
{"Time":"2025-10-04T21:53:57.628598709+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_AtomicOperations_ReqMTX004","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Attempting compare-and-swap\"\n"}
{"Time":"2025-10-04T21:53:57.628631583+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_AtomicOperations_ReqMTX004","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Attempting compare-and-swap\"\n"}
{"Time":"2025-10-04T21:53:57.628646932+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_AtomicOperations_ReqMTX004","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Notification suppressed due to debounce period\"\n"}
{"Time":"2025-10-04T21:53:57.628659026+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_AtomicOperations_ReqMTX004","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Health notification approved - state change detected\"\n"}
{"Time":"2025-10-04T21:53:57.628670679+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_AtomicOperations_ReqMTX004","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Notification suppressed due to debounce period\"\n"}
{"Time":"2025-10-04T21:53:57.628681976+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_AtomicOperations_ReqMTX004","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Notification suppressed due to debounce period\"\n"}
{"Time":"2025-10-04T21:53:57.628693796+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_AtomicOperations_ReqMTX004","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Notification suppressed due to debounce period\"\n"}
{"Time":"2025-10-04T21:53:57.628709315+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_AtomicOperations_ReqMTX004","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Notification suppressed - status changed by another goroutine\"\n"}
{"Time":"2025-10-04T21:53:57.628732903+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_AtomicOperations_ReqMTX004","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Notification suppressed due to debounce period\"\n"}
{"Time":"2025-10-04T21:53:57.628747217+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_AtomicOperations_ReqMTX004","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Notification suppressed due to debounce period\"\n"}
{"Time":"2025-10-04T21:53:57.628758132+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_AtomicOperations_ReqMTX004","Output":"time=\"2025-10-04 21:53:57\" level=warning msg=\"Storage threshold exceeded\"\n"}
{"Time":"2025-10-04T21:53:57.628771959+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_AtomicOperations_ReqMTX004","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Attempting compare-and-swap\"\n"}
{"Time":"2025-10-04T21:53:57.628791388+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_AtomicOperations_ReqMTX004","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Notification suppressed - status changed by another goroutine\"\n"}
{"Time":"2025-10-04T21:53:57.628804509+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_AtomicOperations_ReqMTX004","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Notification suppressed due to debounce period\"\n"}
{"Time":"2025-10-04T21:53:57.628822453+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_AtomicOperations_ReqMTX004","Output":"--- PASS: TestHealthNotificationManager_AtomicOperations_ReqMTX004 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.628842047+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_AtomicOperations_ReqMTX004","Elapsed":0}
{"Time":"2025-10-04T21:53:57.628859262+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004"}
{"Time":"2025-10-04T21:53:57.628869638+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004","Output":"=== RUN   TestHealthNotificationManager_ThresholdValidation_ReqMTX004\n"}
{"Time":"2025-10-04T21:53:57.628901641+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_memory_usage"}
{"Time":"2025-10-04T21:53:57.628921592+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_memory_usage","Output":"=== RUN   TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_memory_usage\n"}
{"Time":"2025-10-04T21:53:57.629046198+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_memory_usage","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.633666752+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_memory_usage","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.633770018+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_memory_usage","Output":"--- FAIL: TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_memory_usage (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.633788305+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_memory_usage","Elapsed":0}
{"Time":"2025-10-04T21:53:57.633802918+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_error_rate"}
{"Time":"2025-10-04T21:53:57.633811646+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_error_rate","Output":"=== RUN   TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_error_rate\n"}
{"Time":"2025-10-04T21:53:57.633826613+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_error_rate","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.639002016+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Output":"--- PASS: TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases (0.20s)\n"}
{"Time":"2025-10-04T21:53:57.639071777+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/device_discovery_edge_cases","Elapsed":0.2}
{"Time":"2025-10-04T21:53:57.63909581+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases"}
{"Time":"2025-10-04T21:53:57.639108329+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases","Output":"=== RUN   TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases\n"}
{"Time":"2025-10-04T21:53:57.63913338+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:53:57.639151281+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:53:57.638993025+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_error_rate","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.639200078+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_error_rate","Output":"--- FAIL: TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_error_rate (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.639203398+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:53:57.639251187+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases/invalid_device_capabilities"}
{"Time":"2025-10-04T21:53:57.639265248+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases/invalid_device_capabilities","Output":"=== RUN   TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases/invalid_device_capabilities\n"}
{"Time":"2025-10-04T21:53:57.639922953+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases/invalid_device_capabilities","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:57.63997435+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases/invalid_device_capabilities","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:53:57.639997236+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases/invalid_device_capabilities","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:53:57.640008923+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases/invalid_device_capabilities","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:57.640021471+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases/invalid_device_capabilities","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:53:57.640031+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases/invalid_device_capabilities","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:53:57.640054975+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases/invalid_device_capabilities","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:53:57.64006583+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases/invalid_device_capabilities","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:53:57.640075265+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases/invalid_device_capabilities","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:53:57.640089238+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:53:57.640108064+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:53:57.640117311+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:53:57.640126193+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:53:57.640155257+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_error_rate","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.640175347+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_response_time"}
{"Time":"2025-10-04T21:53:57.640184806+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_response_time","Output":"=== RUN   TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_response_time\n"}
{"Time":"2025-10-04T21:53:57.640194653+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_response_time","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.644786024+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_response_time","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.644893566+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_response_time","Output":"--- FAIL: TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_response_time (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.644911198+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_response_time","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.644934318+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_connections"}
{"Time":"2025-10-04T21:53:57.644944524+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_connections","Output":"=== RUN   TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_connections\n"}
{"Time":"2025-10-04T21:53:57.64495925+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_connections","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.650881332+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_connections","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.650990249+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_connections","Output":"--- FAIL: TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_connections (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.651029745+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_connections","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.651060421+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_goroutines"}
{"Time":"2025-10-04T21:53:57.651071359+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_goroutines","Output":"=== RUN   TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_goroutines\n"}
{"Time":"2025-10-04T21:53:57.651086732+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_goroutines","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.652647587+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:53:57.652740567+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:53:57.652759785+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:53:57.652778726+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:53:57.652792548+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:53:57.652808042+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:53:57.653021688+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:53:57.654872389+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_goroutines","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.654942136+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_goroutines","Output":"--- FAIL: TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_goroutines (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.654965431+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004/high_goroutines","Elapsed":0}
{"Time":"2025-10-04T21:53:57.654984303+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004/all_normal"}
{"Time":"2025-10-04T21:53:57.654997715+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004/all_normal","Output":"=== RUN   TestHealthNotificationManager_ThresholdValidation_ReqMTX004/all_normal\n"}
{"Time":"2025-10-04T21:53:57.655012846+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004/all_normal","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.658258523+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004/all_normal","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.658370082+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004/all_normal","Output":"--- FAIL: TestHealthNotificationManager_ThresholdValidation_ReqMTX004/all_normal (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.658389787+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004/all_normal","Elapsed":0}
{"Time":"2025-10-04T21:53:57.658408944+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004","Output":"--- FAIL: TestHealthNotificationManager_ThresholdValidation_ReqMTX004 (0.03s)\n"}
{"Time":"2025-10-04T21:53:57.658433276+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_ThresholdValidation_ReqMTX004","Elapsed":0.03}
{"Time":"2025-10-04T21:53:57.658451835+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_StorageInfoInterface_ReqMTX004"}
{"Time":"2025-10-04T21:53:57.658463939+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_StorageInfoInterface_ReqMTX004","Output":"=== RUN   TestHealthNotificationManager_StorageInfoInterface_ReqMTX004\n"}
{"Time":"2025-10-04T21:53:57.658477874+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_StorageInfoInterface_ReqMTX004","Output":"--- PASS: TestHealthNotificationManager_StorageInfoInterface_ReqMTX004 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.658491291+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestHealthNotificationManager_StorageInfoInterface_ReqMTX004","Elapsed":0}
{"Time":"2025-10-04T21:53:57.658504491+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingErrors_DangerousBugs"}
{"Time":"2025-10-04T21:53:57.658515847+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingErrors_DangerousBugs","Output":"=== RUN   TestJSONParsingErrors_DangerousBugs\n"}
{"Time":"2025-10-04T21:53:57.659417073+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingErrors_DangerousBugs","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.662535351+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingErrors_DangerousBugs","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.662638682+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingErrors_DangerousBugs","Output":"--- FAIL: TestJSONParsingErrors_DangerousBugs (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.662658255+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingErrors_DangerousBugs","Elapsed":0}
{"Time":"2025-10-04T21:53:57.662869284+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingPanicProtection_DangerousBugs"}
{"Time":"2025-10-04T21:53:57.662892051+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingPanicProtection_DangerousBugs","Output":"=== RUN   TestJSONParsingPanicProtection_DangerousBugs\n"}
{"Time":"2025-10-04T21:53:57.663666351+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingPanicProtection_DangerousBugs","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.666702574+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingPanicProtection_DangerousBugs","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.666796679+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingPanicProtection_DangerousBugs","Output":"--- FAIL: TestJSONParsingPanicProtection_DangerousBugs (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.666815241+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingPanicProtection_DangerousBugs","Elapsed":0}
{"Time":"2025-10-04T21:53:57.666840206+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs"}
{"Time":"2025-10-04T21:53:57.666855394+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs\n"}
{"Time":"2025-10-04T21:53:57.67280937+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/determineStatus_Function_Bug"}
{"Time":"2025-10-04T21:53:57.672887053+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/determineStatus_Function_Bug","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/determineStatus_Function_Bug\n"}
{"Time":"2025-10-04T21:53:57.672922682+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/determineStatus_Function_Bug","Output":"    test_json_malformation_test.go:158: determineStatus function works correctly\n"}
{"Time":"2025-10-04T21:53:57.672962967+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/determineStatus_Function_Bug","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/determineStatus_Function_Bug (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.672978569+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/determineStatus_Function_Bug","Elapsed":0}
{"Time":"2025-10-04T21:53:57.672991824+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/parseMetricsResponse_Function_Bug"}
{"Time":"2025-10-04T21:53:57.673000606+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/parseMetricsResponse_Function_Bug","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/parseMetricsResponse_Function_Bug\n"}
{"Time":"2025-10-04T21:53:57.673013143+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/parseMetricsResponse_Function_Bug","Output":"    test_json_malformation_test.go:179: parseMetricsResponse function works correctly\n"}
{"Time":"2025-10-04T21:53:57.673025132+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/parseMetricsResponse_Function_Bug","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/parseMetricsResponse_Function_Bug (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.673035192+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/parseMetricsResponse_Function_Bug","Elapsed":0}
{"Time":"2025-10-04T21:53:57.673045705+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/marshalCreateStreamRequest_Function_Bug"}
{"Time":"2025-10-04T21:53:57.673054006+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/marshalCreateStreamRequest_Function_Bug","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/marshalCreateStreamRequest_Function_Bug\n"}
{"Time":"2025-10-04T21:53:57.673148561+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/marshalCreateStreamRequest_Function_Bug","Output":"    test_json_malformation_test.go:193: marshalCreateStreamRequest function works correctly\n"}
{"Time":"2025-10-04T21:53:57.673174248+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/marshalCreateStreamRequest_Function_Bug","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/marshalCreateStreamRequest_Function_Bug (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.673195467+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/marshalCreateStreamRequest_Function_Bug","Elapsed":0}
{"Time":"2025-10-04T21:53:57.67322376+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/marshalUpdatePathRequest_Function_Bug"}
{"Time":"2025-10-04T21:53:57.673237253+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/marshalUpdatePathRequest_Function_Bug","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/marshalUpdatePathRequest_Function_Bug\n"}
{"Time":"2025-10-04T21:53:57.673676964+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/marshalUpdatePathRequest_Function_Bug","Output":"    test_json_malformation_test.go:209: json.Marshal function works correctly\n"}
{"Time":"2025-10-04T21:53:57.673727875+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/marshalUpdatePathRequest_Function_Bug","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/marshalUpdatePathRequest_Function_Bug (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.67375049+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/marshalUpdatePathRequest_Function_Bug","Elapsed":0}
{"Time":"2025-10-04T21:53:57.673774094+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage"}
{"Time":"2025-10-04T21:53:57.673783736+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage\n"}
{"Time":"2025-10-04T21:53:57.673793852+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive"}
{"Time":"2025-10-04T21:53:57.67380254+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive\n"}
{"Time":"2025-10-04T21:53:57.673815973+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/empty_json"}
{"Time":"2025-10-04T21:53:57.673825366+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/empty_json","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/empty_json\n"}
{"Time":"2025-10-04T21:53:57.673840231+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/empty_json","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/empty_json (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.673856902+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/empty_json","Elapsed":0}
{"Time":"2025-10-04T21:53:57.673872682+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/null_json"}
{"Time":"2025-10-04T21:53:57.673881974+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/null_json","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/null_json\n"}
{"Time":"2025-10-04T21:53:57.673908638+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/null_json","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/null_json (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.67396386+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/null_json","Elapsed":0}
{"Time":"2025-10-04T21:53:57.673978281+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/malformed_json"}
{"Time":"2025-10-04T21:53:57.673987214+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/malformed_json","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/malformed_json\n"}
{"Time":"2025-10-04T21:53:57.674002879+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/malformed_json","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/malformed_json (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.674014154+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/malformed_json","Elapsed":0}
{"Time":"2025-10-04T21:53:57.674023888+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/incomplete_json"}
{"Time":"2025-10-04T21:53:57.674033045+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/incomplete_json","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/incomplete_json\n"}
{"Time":"2025-10-04T21:53:57.674052794+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/incomplete_json","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/incomplete_json (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.674065162+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/incomplete_json","Elapsed":0}
{"Time":"2025-10-04T21:53:57.67407598+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/unexpected_json_structure"}
{"Time":"2025-10-04T21:53:57.67408776+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/unexpected_json_structure","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/unexpected_json_structure\n"}
{"Time":"2025-10-04T21:53:57.67411123+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/unexpected_json_structure","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/unexpected_json_structure (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.674122982+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/unexpected_json_structure","Elapsed":0}
{"Time":"2025-10-04T21:53:57.674133862+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_missing_required_fields"}
{"Time":"2025-10-04T21:53:57.674148281+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_missing_required_fields","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_missing_required_fields\n"}
{"Time":"2025-10-04T21:53:57.674169908+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_missing_required_fields","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_missing_required_fields (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.67418413+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_missing_required_fields","Elapsed":0}
{"Time":"2025-10-04T21:53:57.674197564+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_extra_fields"}
{"Time":"2025-10-04T21:53:57.674207136+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_extra_fields","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_extra_fields\n"}
{"Time":"2025-10-04T21:53:57.674356839+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_extra_fields","Output":"    test_json_malformation_test.go:241: Scenario json_with_extra_fields handled (error: MediaMTX error [parse_path_list]: missing required field: pageCount (code: 0))\n"}
{"Time":"2025-10-04T21:53:57.674384404+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_extra_fields","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_extra_fields (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.674399443+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_extra_fields","Elapsed":0}
{"Time":"2025-10-04T21:53:57.674411515+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_unicode_issues"}
{"Time":"2025-10-04T21:53:57.674461686+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_unicode_issues","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_unicode_issues\n"}
{"Time":"2025-10-04T21:53:57.674478989+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_unicode_issues","Output":"    test_json_malformation_test.go:241: Scenario json_with_unicode_issues handled (error: MediaMTX error [parse_path_list]: missing required field: pageCount (code: 0))\n"}
{"Time":"2025-10-04T21:53:57.674497338+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_unicode_issues","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_unicode_issues (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.67453437+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_unicode_issues","Elapsed":0}
{"Time":"2025-10-04T21:53:57.674545892+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_very_large_strings"}
{"Time":"2025-10-04T21:53:57.674555041+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_very_large_strings","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_very_large_strings\n"}
{"Time":"2025-10-04T21:53:57.689423542+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_very_large_strings","Output":"    test_json_malformation_test.go:241: Scenario json_with_very_large_strings handled (error: MediaMTX error [parse_path_list]: missing required field: pageCount (code: 0))\n"}
{"Time":"2025-10-04T21:53:57.689538385+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_very_large_strings","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_very_large_strings (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.689588967+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_very_large_strings","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.689617827+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_special_characters"}
{"Time":"2025-10-04T21:53:57.689631464+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_special_characters","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_special_characters\n"}
{"Time":"2025-10-04T21:53:57.689666628+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_special_characters","Output":"    test_json_malformation_test.go:241: Scenario json_with_special_characters handled (error: MediaMTX error [parse_path_list]: missing required field: pageCount (code: 0))\n"}
{"Time":"2025-10-04T21:53:57.689684616+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_special_characters","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_special_characters (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.689697938+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_special_characters","Elapsed":0}
{"Time":"2025-10-04T21:53:57.689710251+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/unexpected_json_structure#01"}
{"Time":"2025-10-04T21:53:57.68972137+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/unexpected_json_structure#01","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/unexpected_json_structure#01\n"}
{"Time":"2025-10-04T21:53:57.689736567+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/unexpected_json_structure#01","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/unexpected_json_structure#01 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.689760549+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/unexpected_json_structure#01","Elapsed":0}
{"Time":"2025-10-04T21:53:57.689781968+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_invalid_types"}
{"Time":"2025-10-04T21:53:57.689795157+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_invalid_types","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_invalid_types\n"}
{"Time":"2025-10-04T21:53:57.689829163+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_invalid_types","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_invalid_types (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.689848999+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_invalid_types","Elapsed":0}
{"Time":"2025-10-04T21:53:57.689876733+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_missing_required_fields#01"}
{"Time":"2025-10-04T21:53:57.689890127+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_missing_required_fields#01","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_missing_required_fields#01\n"}
{"Time":"2025-10-04T21:53:57.689902939+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_missing_required_fields#01","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_missing_required_fields#01 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.689917078+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_missing_required_fields#01","Elapsed":0}
{"Time":"2025-10-04T21:53:57.689930598+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_extra_fields#01"}
{"Time":"2025-10-04T21:53:57.689942015+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_extra_fields#01","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_extra_fields#01\n"}
{"Time":"2025-10-04T21:53:57.689964227+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_extra_fields#01","Output":"    test_json_malformation_test.go:241: Scenario json_with_extra_fields handled (error: \u003cnil\u003e)\n"}
{"Time":"2025-10-04T21:53:57.689981528+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_extra_fields#01","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_extra_fields#01 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.689996129+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive/json_with_extra_fields#01","Elapsed":0}
{"Time":"2025-10-04T21:53:57.690011799+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive (0.02s)\n"}
{"Time":"2025-10-04T21:53:57.690026257+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/path_list_comprehensive","Elapsed":0.02}
{"Time":"2025-10-04T21:53:57.690053774+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive"}
{"Time":"2025-10-04T21:53:57.690071634+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive\n"}
{"Time":"2025-10-04T21:53:57.690086969+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/empty_json"}
{"Time":"2025-10-04T21:53:57.690098434+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/empty_json","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/empty_json\n"}
{"Time":"2025-10-04T21:53:57.690113654+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/empty_json","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/empty_json (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.690128191+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/empty_json","Elapsed":0}
{"Time":"2025-10-04T21:53:57.690141814+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/null_json"}
{"Time":"2025-10-04T21:53:57.690158088+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/null_json","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/null_json\n"}
{"Time":"2025-10-04T21:53:57.690179642+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/null_json","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/null_json (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.690194874+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/null_json","Elapsed":0}
{"Time":"2025-10-04T21:53:57.690225057+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/malformed_json"}
{"Time":"2025-10-04T21:53:57.690244528+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/malformed_json","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/malformed_json\n"}
{"Time":"2025-10-04T21:53:57.690265346+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/malformed_json","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/malformed_json (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.690291999+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/malformed_json","Elapsed":0}
{"Time":"2025-10-04T21:53:57.690308482+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/incomplete_json"}
{"Time":"2025-10-04T21:53:57.69032138+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/incomplete_json","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/incomplete_json\n"}
{"Time":"2025-10-04T21:53:57.690336707+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/incomplete_json","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/incomplete_json (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.690351999+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/incomplete_json","Elapsed":0}
{"Time":"2025-10-04T21:53:57.690371047+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/unexpected_json_structure"}
{"Time":"2025-10-04T21:53:57.690382964+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/unexpected_json_structure","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/unexpected_json_structure\n"}
{"Time":"2025-10-04T21:53:57.690397974+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/unexpected_json_structure","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/unexpected_json_structure (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.690413005+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/unexpected_json_structure","Elapsed":0}
{"Time":"2025-10-04T21:53:57.690426814+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_missing_required_fields"}
{"Time":"2025-10-04T21:53:57.690438275+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_missing_required_fields","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_missing_required_fields\n"}
{"Time":"2025-10-04T21:53:57.690452987+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_missing_required_fields","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_missing_required_fields (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.690479598+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_missing_required_fields","Elapsed":0}
{"Time":"2025-10-04T21:53:57.690495705+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_extra_fields"}
{"Time":"2025-10-04T21:53:57.690507909+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_extra_fields","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_extra_fields\n"}
{"Time":"2025-10-04T21:53:57.690525623+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_extra_fields","Output":"    test_json_malformation_test.go:241: Scenario json_with_extra_fields handled (error: MediaMTX error [parse_stream]: missing required field (code: 0))\n"}
{"Time":"2025-10-04T21:53:57.690542416+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_extra_fields","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_extra_fields (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.690557104+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_extra_fields","Elapsed":0}
{"Time":"2025-10-04T21:53:57.690575713+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_unicode_issues"}
{"Time":"2025-10-04T21:53:57.690588551+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_unicode_issues","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_unicode_issues\n"}
{"Time":"2025-10-04T21:53:57.690601675+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_unicode_issues","Output":"    test_json_malformation_test.go:241: Scenario json_with_unicode_issues handled (error: MediaMTX error [parse_stream]: missing required field (code: 0))\n"}
{"Time":"2025-10-04T21:53:57.690616769+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_unicode_issues","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_unicode_issues (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.690631544+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_unicode_issues","Elapsed":0}
{"Time":"2025-10-04T21:53:57.690658844+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_very_large_strings"}
{"Time":"2025-10-04T21:53:57.690677154+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_very_large_strings","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_very_large_strings\n"}
{"Time":"2025-10-04T21:53:57.697446717+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_very_large_strings","Output":"    test_json_malformation_test.go:241: Scenario json_with_very_large_strings handled (error: MediaMTX error [parse_stream]: missing required field (code: 0))\n"}
{"Time":"2025-10-04T21:53:57.697540382+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_very_large_strings","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_very_large_strings (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.697556057+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_very_large_strings","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.697573725+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_special_characters"}
{"Time":"2025-10-04T21:53:57.697583069+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_special_characters","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_special_characters\n"}
{"Time":"2025-10-04T21:53:57.69761142+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_special_characters","Output":"    test_json_malformation_test.go:241: Scenario json_with_special_characters handled (error: MediaMTX error [parse_stream]: missing required field (code: 0))\n"}
{"Time":"2025-10-04T21:53:57.697624901+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_special_characters","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_special_characters (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.69763612+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_special_characters","Elapsed":0}
{"Time":"2025-10-04T21:53:57.69764699+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/unexpected_json_structure#01"}
{"Time":"2025-10-04T21:53:57.697655675+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/unexpected_json_structure#01","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/unexpected_json_structure#01\n"}
{"Time":"2025-10-04T21:53:57.697688492+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/unexpected_json_structure#01","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/unexpected_json_structure#01 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.697707391+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/unexpected_json_structure#01","Elapsed":0}
{"Time":"2025-10-04T21:53:57.697718121+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_invalid_types"}
{"Time":"2025-10-04T21:53:57.697726459+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_invalid_types","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_invalid_types\n"}
{"Time":"2025-10-04T21:53:57.697745911+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_invalid_types","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_invalid_types (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.697758564+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_invalid_types","Elapsed":0}
{"Time":"2025-10-04T21:53:57.697770076+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_missing_required_fields#01"}
{"Time":"2025-10-04T21:53:57.697779995+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_missing_required_fields#01","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_missing_required_fields#01\n"}
{"Time":"2025-10-04T21:53:57.697790505+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_missing_required_fields#01","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_missing_required_fields#01 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.697800421+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_missing_required_fields#01","Elapsed":0}
{"Time":"2025-10-04T21:53:57.697814002+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_extra_fields#01"}
{"Time":"2025-10-04T21:53:57.697834224+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_extra_fields#01","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_extra_fields#01\n"}
{"Time":"2025-10-04T21:53:57.697852023+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_extra_fields#01","Output":"    test_json_malformation_test.go:241: Scenario json_with_extra_fields handled (error: \u003cnil\u003e)\n"}
{"Time":"2025-10-04T21:53:57.697864364+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_extra_fields#01","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_extra_fields#01 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.697874604+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive/json_with_extra_fields#01","Elapsed":0}
{"Time":"2025-10-04T21:53:57.697887243+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.697897848+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/stream_comprehensive","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.69791246+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive"}
{"Time":"2025-10-04T21:53:57.697923738+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive\n"}
{"Time":"2025-10-04T21:53:57.697936394+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/empty_json"}
{"Time":"2025-10-04T21:53:57.697945368+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/empty_json","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/empty_json\n"}
{"Time":"2025-10-04T21:53:57.697960699+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/empty_json","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/empty_json (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.697976393+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/empty_json","Elapsed":0}
{"Time":"2025-10-04T21:53:57.697996852+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/null_json"}
{"Time":"2025-10-04T21:53:57.698011338+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/null_json","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/null_json\n"}
{"Time":"2025-10-04T21:53:57.698023914+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/null_json","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/null_json (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.698033996+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/null_json","Elapsed":0}
{"Time":"2025-10-04T21:53:57.698044444+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/malformed_json"}
{"Time":"2025-10-04T21:53:57.698054431+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/malformed_json","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/malformed_json\n"}
{"Time":"2025-10-04T21:53:57.698066235+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/malformed_json","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/malformed_json (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.698077433+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/malformed_json","Elapsed":0}
{"Time":"2025-10-04T21:53:57.698095049+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/incomplete_json"}
{"Time":"2025-10-04T21:53:57.698106144+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/incomplete_json","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/incomplete_json\n"}
{"Time":"2025-10-04T21:53:57.698121046+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/incomplete_json","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/incomplete_json (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.698133649+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/incomplete_json","Elapsed":0}
{"Time":"2025-10-04T21:53:57.698144524+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/unexpected_json_structure"}
{"Time":"2025-10-04T21:53:57.698160431+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/unexpected_json_structure","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/unexpected_json_structure\n"}
{"Time":"2025-10-04T21:53:57.698172557+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/unexpected_json_structure","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/unexpected_json_structure (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.698187851+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/unexpected_json_structure","Elapsed":0}
{"Time":"2025-10-04T21:53:57.698198795+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_missing_required_fields"}
{"Time":"2025-10-04T21:53:57.698206886+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_missing_required_fields","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_missing_required_fields\n"}
{"Time":"2025-10-04T21:53:57.698230822+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_missing_required_fields","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_missing_required_fields (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.698242899+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_missing_required_fields","Elapsed":0}
{"Time":"2025-10-04T21:53:57.698256922+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_extra_fields"}
{"Time":"2025-10-04T21:53:57.698265793+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_extra_fields","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_extra_fields\n"}
{"Time":"2025-10-04T21:53:57.698275234+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_extra_fields","Output":"    test_json_malformation_test.go:241: Scenario json_with_extra_fields handled (error: MediaMTX error [parse_path_conf_list]: missing required field: pageCount (code: 0))\n"}
{"Time":"2025-10-04T21:53:57.698288281+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_extra_fields","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_extra_fields (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.698313026+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_extra_fields","Elapsed":0}
{"Time":"2025-10-04T21:53:57.698327048+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_unicode_issues"}
{"Time":"2025-10-04T21:53:57.698335961+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_unicode_issues","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_unicode_issues\n"}
{"Time":"2025-10-04T21:53:57.698348299+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_unicode_issues","Output":"    test_json_malformation_test.go:241: Scenario json_with_unicode_issues handled (error: MediaMTX error [parse_path_conf_list]: missing required field: pageCount (code: 0))\n"}
{"Time":"2025-10-04T21:53:57.69836165+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_unicode_issues","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_unicode_issues (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.69837441+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_unicode_issues","Elapsed":0}
{"Time":"2025-10-04T21:53:57.698388216+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_very_large_strings"}
{"Time":"2025-10-04T21:53:57.698397237+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_very_large_strings","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_very_large_strings\n"}
{"Time":"2025-10-04T21:53:57.708721871+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_very_large_strings","Output":"    test_json_malformation_test.go:241: Scenario json_with_very_large_strings handled (error: MediaMTX error [parse_path_conf_list]: missing required field: pageCount (code: 0))\n"}
{"Time":"2025-10-04T21:53:57.708831981+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_very_large_strings","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_very_large_strings (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.708852337+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_very_large_strings","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.708913027+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_special_characters"}
{"Time":"2025-10-04T21:53:57.708928369+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_special_characters","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_special_characters\n"}
{"Time":"2025-10-04T21:53:57.708939511+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_special_characters","Output":"    test_json_malformation_test.go:241: Scenario json_with_special_characters handled (error: MediaMTX error [parse_path_conf_list]: missing required field: pageCount (code: 0))\n"}
{"Time":"2025-10-04T21:53:57.708952465+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_special_characters","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_special_characters (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.708965148+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_special_characters","Elapsed":0}
{"Time":"2025-10-04T21:53:57.708986248+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/unexpected_json_structure#01"}
{"Time":"2025-10-04T21:53:57.709003243+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/unexpected_json_structure#01","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/unexpected_json_structure#01\n"}
{"Time":"2025-10-04T21:53:57.709022819+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/unexpected_json_structure#01","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/unexpected_json_structure#01 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.709036971+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/unexpected_json_structure#01","Elapsed":0}
{"Time":"2025-10-04T21:53:57.709049783+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_invalid_types"}
{"Time":"2025-10-04T21:53:57.709060713+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_invalid_types","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_invalid_types\n"}
{"Time":"2025-10-04T21:53:57.709079153+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_invalid_types","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_invalid_types (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.709102083+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_invalid_types","Elapsed":0}
{"Time":"2025-10-04T21:53:57.709120721+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_missing_required_fields#01"}
{"Time":"2025-10-04T21:53:57.709131527+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_missing_required_fields#01","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_missing_required_fields#01\n"}
{"Time":"2025-10-04T21:53:57.709156225+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_missing_required_fields#01","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_missing_required_fields#01 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.709172502+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_missing_required_fields#01","Elapsed":0}
{"Time":"2025-10-04T21:53:57.709188345+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_extra_fields#01"}
{"Time":"2025-10-04T21:53:57.709203286+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_extra_fields#01","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_extra_fields#01\n"}
{"Time":"2025-10-04T21:53:57.709543324+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_extra_fields#01","Output":"    test_json_malformation_test.go:241: Scenario json_with_extra_fields handled (error: \u003cnil\u003e)\n"}
{"Time":"2025-10-04T21:53:57.709585018+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_extra_fields#01","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_extra_fields#01 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.709602303+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive/json_with_extra_fields#01","Elapsed":0}
{"Time":"2025-10-04T21:53:57.709621113+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.709651979+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/paths_comprehensive","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.709666723+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive"}
{"Time":"2025-10-04T21:53:57.709676311+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive\n"}
{"Time":"2025-10-04T21:53:57.709686756+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/empty_json"}
{"Time":"2025-10-04T21:53:57.709694727+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/empty_json","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/empty_json\n"}
{"Time":"2025-10-04T21:53:57.709705235+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/empty_json","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/empty_json (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.70971643+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/empty_json","Elapsed":0}
{"Time":"2025-10-04T21:53:57.709727797+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/null_json"}
{"Time":"2025-10-04T21:53:57.709737475+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/null_json","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/null_json\n"}
{"Time":"2025-10-04T21:53:57.709753324+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/null_json","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/null_json (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.709765506+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/null_json","Elapsed":0}
{"Time":"2025-10-04T21:53:57.709776558+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/malformed_json"}
{"Time":"2025-10-04T21:53:57.709786076+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/malformed_json","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/malformed_json\n"}
{"Time":"2025-10-04T21:53:57.709808005+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/malformed_json","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/malformed_json (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.709821766+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/malformed_json","Elapsed":0}
{"Time":"2025-10-04T21:53:57.709831604+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/incomplete_json"}
{"Time":"2025-10-04T21:53:57.709841015+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/incomplete_json","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/incomplete_json\n"}
{"Time":"2025-10-04T21:53:57.709852987+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/incomplete_json","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/incomplete_json (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.709863761+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/incomplete_json","Elapsed":0}
{"Time":"2025-10-04T21:53:57.709874167+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/unexpected_json_structure"}
{"Time":"2025-10-04T21:53:57.70988326+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/unexpected_json_structure","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/unexpected_json_structure\n"}
{"Time":"2025-10-04T21:53:57.709898642+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/unexpected_json_structure","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/unexpected_json_structure (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.709909975+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/unexpected_json_structure","Elapsed":0}
{"Time":"2025-10-04T21:53:57.709921496+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_missing_required_fields"}
{"Time":"2025-10-04T21:53:57.709930969+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_missing_required_fields","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_missing_required_fields\n"}
{"Time":"2025-10-04T21:53:57.709951777+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_missing_required_fields","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_missing_required_fields (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.709963766+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_missing_required_fields","Elapsed":0}
{"Time":"2025-10-04T21:53:57.709974711+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_extra_fields"}
{"Time":"2025-10-04T21:53:57.709984516+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_extra_fields","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_extra_fields\n"}
{"Time":"2025-10-04T21:53:57.709998099+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_extra_fields","Output":"    test_json_malformation_test.go:241: Scenario json_with_extra_fields handled (error: MediaMTX error [parse_health]: missing required field (code: 0))\n"}
{"Time":"2025-10-04T21:53:57.710010304+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_extra_fields","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_extra_fields (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.710026314+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_extra_fields","Elapsed":0}
{"Time":"2025-10-04T21:53:57.710038546+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_unicode_issues"}
{"Time":"2025-10-04T21:53:57.710048273+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_unicode_issues","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_unicode_issues\n"}
{"Time":"2025-10-04T21:53:57.710060143+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_unicode_issues","Output":"    test_json_malformation_test.go:241: Scenario json_with_unicode_issues handled (error: MediaMTX error [parse_health]: missing required field (code: 0))\n"}
{"Time":"2025-10-04T21:53:57.710071321+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_unicode_issues","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_unicode_issues (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.710088621+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_unicode_issues","Elapsed":0}
{"Time":"2025-10-04T21:53:57.710106887+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_very_large_strings"}
{"Time":"2025-10-04T21:53:57.710117814+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_very_large_strings","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_very_large_strings\n"}
{"Time":"2025-10-04T21:53:57.717810812+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_very_large_strings","Output":"    test_json_malformation_test.go:241: Scenario json_with_very_large_strings handled (error: MediaMTX error [parse_health]: missing required field (code: 0))\n"}
{"Time":"2025-10-04T21:53:57.717922642+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_very_large_strings","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_very_large_strings (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.717942733+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_very_large_strings","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.71796793+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_special_characters"}
{"Time":"2025-10-04T21:53:57.717981431+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_special_characters","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_special_characters\n"}
{"Time":"2025-10-04T21:53:57.717993607+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_special_characters","Output":"    test_json_malformation_test.go:241: Scenario json_with_special_characters handled (error: MediaMTX error [parse_health]: missing required field (code: 0))\n"}
{"Time":"2025-10-04T21:53:57.718007086+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_special_characters","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_special_characters (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.718019335+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_special_characters","Elapsed":0}
{"Time":"2025-10-04T21:53:57.718056037+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/unexpected_json_structure#01"}
{"Time":"2025-10-04T21:53:57.718070216+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/unexpected_json_structure#01","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/unexpected_json_structure#01\n"}
{"Time":"2025-10-04T21:53:57.718090643+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/unexpected_json_structure#01","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/unexpected_json_structure#01 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.718104216+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/unexpected_json_structure#01","Elapsed":0}
{"Time":"2025-10-04T21:53:57.71812161+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_invalid_types"}
{"Time":"2025-10-04T21:53:57.71814554+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_invalid_types","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_invalid_types\n"}
{"Time":"2025-10-04T21:53:57.718161257+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_invalid_types","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_invalid_types (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.718175626+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_invalid_types","Elapsed":0}
{"Time":"2025-10-04T21:53:57.718194918+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_missing_required_fields#01"}
{"Time":"2025-10-04T21:53:57.718222871+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_missing_required_fields#01","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_missing_required_fields#01\n"}
{"Time":"2025-10-04T21:53:57.718248965+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_missing_required_fields#01","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_missing_required_fields#01 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.718263625+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_missing_required_fields#01","Elapsed":0}
{"Time":"2025-10-04T21:53:57.718285658+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_extra_fields#01"}
{"Time":"2025-10-04T21:53:57.718301521+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_extra_fields#01","Output":"=== RUN   TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_extra_fields#01\n"}
{"Time":"2025-10-04T21:53:57.718318835+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_extra_fields#01","Output":"    test_json_malformation_test.go:241: Scenario json_with_extra_fields handled (error: \u003cnil\u003e)\n"}
{"Time":"2025-10-04T21:53:57.718334532+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_extra_fields#01","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_extra_fields#01 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.718347693+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive/json_with_extra_fields#01","Elapsed":0}
{"Time":"2025-10-04T21:53:57.718362202+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.718385417+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage/health_comprehensive","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.718401496+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage (0.04s)\n"}
{"Time":"2025-10-04T21:53:57.718413809+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs/comprehensive_parsing_coverage","Elapsed":0.04}
{"Time":"2025-10-04T21:53:57.718427287+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs","Output":"--- PASS: TestJSONParsingFunctions_DangerousBugs (0.05s)\n"}
{"Time":"2025-10-04T21:53:57.718441835+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingFunctions_DangerousBugs","Elapsed":0.05}
{"Time":"2025-10-04T21:53:57.718456531+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs"}
{"Time":"2025-10-04T21:53:57.718466485+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs","Output":"=== RUN   TestJSONParsingEdgeCases_DangerousBugs\n"}
{"Time":"2025-10-04T21:53:57.72075042+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases"}
{"Time":"2025-10-04T21:53:57.720862328+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases","Output":"=== RUN   TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases\n"}
{"Time":"2025-10-04T21:53:57.722595182+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases/very_large_json"}
{"Time":"2025-10-04T21:53:57.722669741+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases/very_large_json","Output":"=== RUN   TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases/very_large_json\n"}
{"Time":"2025-10-04T21:53:57.722693346+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases/very_large_json","Output":"    test_json_malformation_test.go:286: Testing edge case: very_large_json - should handle gracefully\n"}
{"Time":"2025-10-04T21:53:57.740531115+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:53:57.740636987+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases/invalid_device_capabilities","Output":"--- PASS: TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases/invalid_device_capabilities (0.10s)\n"}
{"Time":"2025-10-04T21:53:57.740665372+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases/invalid_device_capabilities","Elapsed":0.1}
{"Time":"2025-10-04T21:53:57.74068571+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases","Output":"    camera_edge_cases_test.go:72: ✅ Capability probing edge cases validated\n"}
{"Time":"2025-10-04T21:53:57.740699198+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:57.74071459+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:53:57.74084673+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:57.74087159+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:57.741412873+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:57.741472843+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:53:57.741494657+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:53:57.741508347+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:53:57.741530869+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:53:57.757150457+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases/very_large_json","Output":"    test_json_malformation_test.go:302: Edge case very_large_json handled without panic (errors: MediaMTX error [parse_path_list]: missing required field: pageCount (code: 0), MediaMTX error [parse_stream]: missing required field (code: 0), MediaMTX error [parse_health]: missing required field (code: 0), MediaMTX error [parse_path_conf_list]: missing required field: pageCount (code: 0))\n"}
{"Time":"2025-10-04T21:53:57.757259864+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases/very_large_json","Output":"--- PASS: TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases/very_large_json (0.03s)\n"}
{"Time":"2025-10-04T21:53:57.757284038+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases/very_large_json","Elapsed":0.03}
{"Time":"2025-10-04T21:53:57.757304074+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases/json_with_null_bytes"}
{"Time":"2025-10-04T21:53:57.757315064+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases/json_with_null_bytes","Output":"=== RUN   TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases/json_with_null_bytes\n"}
{"Time":"2025-10-04T21:53:57.757331331+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases/json_with_null_bytes","Output":"    test_json_malformation_test.go:286: Testing edge case: json_with_null_bytes - should handle gracefully\n"}
{"Time":"2025-10-04T21:53:57.757345211+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases/json_with_null_bytes","Output":"    test_json_malformation_test.go:302: Edge case json_with_null_bytes handled without panic (errors: MediaMTX error [parse_path_list]: invalid JSON response: invalid character 'x' in string escape code (code: 0), MediaMTX error [parse_stream]: failed to parse stream response (code: 0), MediaMTX error [parse_health]: failed to parse health response (code: 0), MediaMTX error [parse_path_conf_list]: invalid JSON response: invalid character 'x' in string escape code (code: 0))\n"}
{"Time":"2025-10-04T21:53:57.757391785+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases/json_with_null_bytes","Output":"--- PASS: TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases/json_with_null_bytes (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.757406465+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases/json_with_null_bytes","Elapsed":0}
{"Time":"2025-10-04T21:53:57.757417616+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases/json_with_unicode_issues"}
{"Time":"2025-10-04T21:53:57.757431232+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases/json_with_unicode_issues","Output":"=== RUN   TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases/json_with_unicode_issues\n"}
{"Time":"2025-10-04T21:53:57.757442465+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases/json_with_unicode_issues","Output":"    test_json_malformation_test.go:286: Testing edge case: json_with_unicode_issues - should handle gracefully\n"}
{"Time":"2025-10-04T21:53:57.757458089+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases/json_with_unicode_issues","Output":"    test_json_malformation_test.go:302: Edge case json_with_unicode_issues handled without panic (errors: MediaMTX error [parse_path_list]: missing required field: pageCount (code: 0), MediaMTX error [parse_stream]: missing required field (code: 0), MediaMTX error [parse_health]: missing required field (code: 0), MediaMTX error [parse_path_conf_list]: missing required field: pageCount (code: 0))\n"}
{"Time":"2025-10-04T21:53:57.757474523+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases/json_with_unicode_issues","Output":"--- PASS: TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases/json_with_unicode_issues (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.757487733+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases/json_with_unicode_issues","Elapsed":0}
{"Time":"2025-10-04T21:53:57.757500881+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases/json_with_deep_nesting"}
{"Time":"2025-10-04T21:53:57.7575123+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases/json_with_deep_nesting","Output":"=== RUN   TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases/json_with_deep_nesting\n"}
{"Time":"2025-10-04T21:53:57.757524093+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases/json_with_deep_nesting","Output":"    test_json_malformation_test.go:286: Testing edge case: json_with_deep_nesting - should handle gracefully\n"}
{"Time":"2025-10-04T21:53:57.757569468+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases/json_with_deep_nesting","Output":"    test_json_malformation_test.go:302: Edge case json_with_deep_nesting handled without panic (errors: MediaMTX error [parse_path_list]: invalid JSON response: unexpected end of JSON input (code: 0), MediaMTX error [parse_stream]: failed to parse stream response (code: 0), MediaMTX error [parse_health]: failed to parse health response (code: 0), MediaMTX error [parse_path_conf_list]: invalid JSON response: unexpected end of JSON input (code: 0))\n"}
{"Time":"2025-10-04T21:53:57.757588873+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases/json_with_deep_nesting","Output":"--- PASS: TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases/json_with_deep_nesting (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.75760301+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases/json_with_deep_nesting","Elapsed":0}
{"Time":"2025-10-04T21:53:57.757617139+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases","Output":"--- PASS: TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases (0.04s)\n"}
{"Time":"2025-10-04T21:53:57.757637351+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/JSON_Parsing_Edge_Cases","Elapsed":0.04}
{"Time":"2025-10-04T21:53:57.757652613+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases"}
{"Time":"2025-10-04T21:53:57.757664317+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases","Output":"=== RUN   TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases\n"}
{"Time":"2025-10-04T21:53:57.757676497+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/path_list_edge_cases"}
{"Time":"2025-10-04T21:53:57.757687708+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/path_list_edge_cases","Output":"=== RUN   TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/path_list_edge_cases\n"}
{"Time":"2025-10-04T21:53:57.757700154+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/path_list_edge_cases/json_with_unicode_issues"}
{"Time":"2025-10-04T21:53:57.757711036+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/path_list_edge_cases/json_with_unicode_issues","Output":"=== RUN   TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/path_list_edge_cases/json_with_unicode_issues\n"}
{"Time":"2025-10-04T21:53:57.757727833+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/path_list_edge_cases/json_with_unicode_issues","Output":"    test_json_malformation_test.go:349: Edge case json_with_unicode_issues handled without panic (error: MediaMTX error [parse_path_list]: missing required field: pageCount (code: 0))\n"}
{"Time":"2025-10-04T21:53:57.757757642+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/path_list_edge_cases/json_with_unicode_issues","Output":"--- PASS: TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/path_list_edge_cases/json_with_unicode_issues (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.757774287+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/path_list_edge_cases/json_with_unicode_issues","Elapsed":0}
{"Time":"2025-10-04T21:53:57.757788531+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/path_list_edge_cases/json_with_very_large_strings"}
{"Time":"2025-10-04T21:53:57.757800916+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/path_list_edge_cases/json_with_very_large_strings","Output":"=== RUN   TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/path_list_edge_cases/json_with_very_large_strings\n"}
{"Time":"2025-10-04T21:53:57.767555998+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/path_list_edge_cases/json_with_very_large_strings","Output":"    test_json_malformation_test.go:349: Edge case json_with_very_large_strings handled without panic (error: MediaMTX error [parse_path_list]: missing required field: pageCount (code: 0))\n"}
{"Time":"2025-10-04T21:53:57.767663023+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/path_list_edge_cases/json_with_very_large_strings","Output":"--- PASS: TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/path_list_edge_cases/json_with_very_large_strings (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.767684897+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/path_list_edge_cases/json_with_very_large_strings","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.767704905+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/path_list_edge_cases/json_with_special_characters"}
{"Time":"2025-10-04T21:53:57.76771753+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/path_list_edge_cases/json_with_special_characters","Output":"=== RUN   TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/path_list_edge_cases/json_with_special_characters\n"}
{"Time":"2025-10-04T21:53:57.767736793+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/path_list_edge_cases/json_with_special_characters","Output":"    test_json_malformation_test.go:349: Edge case json_with_special_characters handled without panic (error: MediaMTX error [parse_path_list]: missing required field: pageCount (code: 0))\n"}
{"Time":"2025-10-04T21:53:57.767753159+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/path_list_edge_cases/json_with_special_characters","Output":"--- PASS: TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/path_list_edge_cases/json_with_special_characters (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.767777564+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/path_list_edge_cases/json_with_special_characters","Elapsed":0}
{"Time":"2025-10-04T21:53:57.767817092+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/path_list_edge_cases","Output":"--- PASS: TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/path_list_edge_cases (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.767831654+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/path_list_edge_cases","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.76784238+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/stream_edge_cases"}
{"Time":"2025-10-04T21:53:57.767851349+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/stream_edge_cases","Output":"=== RUN   TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/stream_edge_cases\n"}
{"Time":"2025-10-04T21:53:57.767861206+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/stream_edge_cases/json_with_unicode_issues"}
{"Time":"2025-10-04T21:53:57.767870043+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/stream_edge_cases/json_with_unicode_issues","Output":"=== RUN   TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/stream_edge_cases/json_with_unicode_issues\n"}
{"Time":"2025-10-04T21:53:57.767884565+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/stream_edge_cases/json_with_unicode_issues","Output":"    test_json_malformation_test.go:349: Edge case json_with_unicode_issues handled without panic (error: MediaMTX error [parse_stream]: missing required field (code: 0))\n"}
{"Time":"2025-10-04T21:53:57.767899196+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/stream_edge_cases/json_with_unicode_issues","Output":"--- PASS: TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/stream_edge_cases/json_with_unicode_issues (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.767922268+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/stream_edge_cases/json_with_unicode_issues","Elapsed":0}
{"Time":"2025-10-04T21:53:57.767937213+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/stream_edge_cases/json_with_very_large_strings"}
{"Time":"2025-10-04T21:53:57.767949022+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/stream_edge_cases/json_with_very_large_strings","Output":"=== RUN   TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/stream_edge_cases/json_with_very_large_strings\n"}
{"Time":"2025-10-04T21:53:57.774750411+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/stream_edge_cases/json_with_very_large_strings","Output":"    test_json_malformation_test.go:349: Edge case json_with_very_large_strings handled without panic (error: MediaMTX error [parse_stream]: missing required field (code: 0))\n"}
{"Time":"2025-10-04T21:53:57.774868809+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/stream_edge_cases/json_with_very_large_strings","Output":"--- PASS: TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/stream_edge_cases/json_with_very_large_strings (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.774890509+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/stream_edge_cases/json_with_very_large_strings","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.774916613+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/stream_edge_cases/json_with_special_characters"}
{"Time":"2025-10-04T21:53:57.774930519+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/stream_edge_cases/json_with_special_characters","Output":"=== RUN   TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/stream_edge_cases/json_with_special_characters\n"}
{"Time":"2025-10-04T21:53:57.774943262+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/stream_edge_cases/json_with_special_characters","Output":"    test_json_malformation_test.go:349: Edge case json_with_special_characters handled without panic (error: MediaMTX error [parse_stream]: missing required field (code: 0))\n"}
{"Time":"2025-10-04T21:53:57.774957507+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/stream_edge_cases/json_with_special_characters","Output":"--- PASS: TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/stream_edge_cases/json_with_special_characters (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.774971135+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/stream_edge_cases/json_with_special_characters","Elapsed":0}
{"Time":"2025-10-04T21:53:57.77498514+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/stream_edge_cases","Output":"--- PASS: TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/stream_edge_cases (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.774998178+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/stream_edge_cases","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.77501+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/paths_edge_cases"}
{"Time":"2025-10-04T21:53:57.775020375+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/paths_edge_cases","Output":"=== RUN   TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/paths_edge_cases\n"}
{"Time":"2025-10-04T21:53:57.7750325+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/paths_edge_cases/json_with_unicode_issues"}
{"Time":"2025-10-04T21:53:57.775049983+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/paths_edge_cases/json_with_unicode_issues","Output":"=== RUN   TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/paths_edge_cases/json_with_unicode_issues\n"}
{"Time":"2025-10-04T21:53:57.775078034+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/paths_edge_cases/json_with_unicode_issues","Output":"    test_json_malformation_test.go:349: Edge case json_with_unicode_issues handled without panic (error: MediaMTX error [parse_path_conf_list]: missing required field: pageCount (code: 0))\n"}
{"Time":"2025-10-04T21:53:57.775096038+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/paths_edge_cases/json_with_unicode_issues","Output":"--- PASS: TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/paths_edge_cases/json_with_unicode_issues (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.775111483+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/paths_edge_cases/json_with_unicode_issues","Elapsed":0}
{"Time":"2025-10-04T21:53:57.775124969+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/paths_edge_cases/json_with_very_large_strings"}
{"Time":"2025-10-04T21:53:57.775136282+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/paths_edge_cases/json_with_very_large_strings","Output":"=== RUN   TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/paths_edge_cases/json_with_very_large_strings\n"}
{"Time":"2025-10-04T21:53:57.786355931+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/paths_edge_cases/json_with_very_large_strings","Output":"    test_json_malformation_test.go:349: Edge case json_with_very_large_strings handled without panic (error: MediaMTX error [parse_path_conf_list]: missing required field: pageCount (code: 0))\n"}
{"Time":"2025-10-04T21:53:57.786455139+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/paths_edge_cases/json_with_very_large_strings","Output":"--- PASS: TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/paths_edge_cases/json_with_very_large_strings (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.786475261+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/paths_edge_cases/json_with_very_large_strings","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.786497033+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/paths_edge_cases/json_with_special_characters"}
{"Time":"2025-10-04T21:53:57.786510766+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/paths_edge_cases/json_with_special_characters","Output":"=== RUN   TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/paths_edge_cases/json_with_special_characters\n"}
{"Time":"2025-10-04T21:53:57.786529687+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/paths_edge_cases/json_with_special_characters","Output":"    test_json_malformation_test.go:349: Edge case json_with_special_characters handled without panic (error: MediaMTX error [parse_path_conf_list]: missing required field: pageCount (code: 0))\n"}
{"Time":"2025-10-04T21:53:57.786601309+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/paths_edge_cases/json_with_special_characters","Output":"--- PASS: TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/paths_edge_cases/json_with_special_characters (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.786619956+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/paths_edge_cases/json_with_special_characters","Elapsed":0}
{"Time":"2025-10-04T21:53:57.786635354+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/paths_edge_cases","Output":"--- PASS: TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/paths_edge_cases (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.786649884+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/paths_edge_cases","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.78667125+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/health_edge_cases"}
{"Time":"2025-10-04T21:53:57.78668546+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/health_edge_cases","Output":"=== RUN   TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/health_edge_cases\n"}
{"Time":"2025-10-04T21:53:57.786699241+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/health_edge_cases/json_with_unicode_issues"}
{"Time":"2025-10-04T21:53:57.786711316+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/health_edge_cases/json_with_unicode_issues","Output":"=== RUN   TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/health_edge_cases/json_with_unicode_issues\n"}
{"Time":"2025-10-04T21:53:57.786728573+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/health_edge_cases/json_with_unicode_issues","Output":"    test_json_malformation_test.go:349: Edge case json_with_unicode_issues handled without panic (error: MediaMTX error [parse_health]: missing required field (code: 0))\n"}
{"Time":"2025-10-04T21:53:57.786745835+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/health_edge_cases/json_with_unicode_issues","Output":"--- PASS: TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/health_edge_cases/json_with_unicode_issues (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.786759893+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/health_edge_cases/json_with_unicode_issues","Elapsed":0}
{"Time":"2025-10-04T21:53:57.786773128+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/health_edge_cases/json_with_very_large_strings"}
{"Time":"2025-10-04T21:53:57.78678343+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/health_edge_cases/json_with_very_large_strings","Output":"=== RUN   TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/health_edge_cases/json_with_very_large_strings\n"}
{"Time":"2025-10-04T21:53:57.793866952+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/health_edge_cases/json_with_very_large_strings","Output":"    test_json_malformation_test.go:349: Edge case json_with_very_large_strings handled without panic (error: MediaMTX error [parse_health]: missing required field (code: 0))\n"}
{"Time":"2025-10-04T21:53:57.793962523+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/health_edge_cases/json_with_very_large_strings","Output":"--- PASS: TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/health_edge_cases/json_with_very_large_strings (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.793983399+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/health_edge_cases/json_with_very_large_strings","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.79400857+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/health_edge_cases/json_with_special_characters"}
{"Time":"2025-10-04T21:53:57.794020017+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/health_edge_cases/json_with_special_characters","Output":"=== RUN   TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/health_edge_cases/json_with_special_characters\n"}
{"Time":"2025-10-04T21:53:57.794031219+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/health_edge_cases/json_with_special_characters","Output":"    test_json_malformation_test.go:349: Edge case json_with_special_characters handled without panic (error: MediaMTX error [parse_health]: missing required field (code: 0))\n"}
{"Time":"2025-10-04T21:53:57.794044421+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/health_edge_cases/json_with_special_characters","Output":"--- PASS: TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/health_edge_cases/json_with_special_characters (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.794056186+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/health_edge_cases/json_with_special_characters","Elapsed":0}
{"Time":"2025-10-04T21:53:57.794080584+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/health_edge_cases","Output":"--- PASS: TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/health_edge_cases (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.794092314+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases/health_edge_cases","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.794103273+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases","Output":"--- PASS: TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases (0.04s)\n"}
{"Time":"2025-10-04T21:53:57.794112807+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs/registry_edge_cases","Elapsed":0.04}
{"Time":"2025-10-04T21:53:57.794145025+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs","Output":"--- PASS: TestJSONParsingEdgeCases_DangerousBugs (0.08s)\n"}
{"Time":"2025-10-04T21:53:57.794164634+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestJSONParsingEdgeCases_DangerousBugs","Elapsed":0.08}
{"Time":"2025-10-04T21:53:57.794179936+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_RealServer_ReqMTX001"}
{"Time":"2025-10-04T21:53:57.794191052+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_RealServer_ReqMTX001","Output":"=== RUN   TestPathManager_RealServer_ReqMTX001\n"}
{"Time":"2025-10-04T21:53:57.795125285+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_RealServer_ReqMTX001","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.798411484+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_RealServer_ReqMTX001","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.798496122+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_RealServer_ReqMTX001","Output":"--- FAIL: TestPathManager_RealServer_ReqMTX001 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.79851825+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_RealServer_ReqMTX001","Elapsed":0}
{"Time":"2025-10-04T21:53:57.798533827+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_StreamManagement_ReqMTX002"}
{"Time":"2025-10-04T21:53:57.798545502+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_StreamManagement_ReqMTX002","Output":"=== RUN   TestPathManager_StreamManagement_ReqMTX002\n"}
{"Time":"2025-10-04T21:53:57.79952439+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_StreamManagement_ReqMTX002","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.802828744+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_StreamManagement_ReqMTX002","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.802927419+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_StreamManagement_ReqMTX002","Output":"--- FAIL: TestPathManager_StreamManagement_ReqMTX002 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.802951516+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_StreamManagement_ReqMTX002","Elapsed":0}
{"Time":"2025-10-04T21:53:57.802969184+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_ConfigIntegration_ReqMTX003"}
{"Time":"2025-10-04T21:53:57.802982532+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_ConfigIntegration_ReqMTX003","Output":"=== RUN   TestPathManager_ConfigIntegration_ReqMTX003\n"}
{"Time":"2025-10-04T21:53:57.803932195+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_ConfigIntegration_ReqMTX003","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.8081821+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_ConfigIntegration_ReqMTX003","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.808279132+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_ConfigIntegration_ReqMTX003","Output":"--- FAIL: TestPathManager_ConfigIntegration_ReqMTX003 (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.808303735+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_ConfigIntegration_ReqMTX003","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.808329502+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_HealthMonitoring_ReqMTX004"}
{"Time":"2025-10-04T21:53:57.808343028+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_HealthMonitoring_ReqMTX004","Output":"=== RUN   TestPathManager_HealthMonitoring_ReqMTX004\n"}
{"Time":"2025-10-04T21:53:57.80920643+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_HealthMonitoring_ReqMTX004","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.812658608+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_HealthMonitoring_ReqMTX004","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.81276146+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_HealthMonitoring_ReqMTX004","Output":"--- FAIL: TestPathManager_HealthMonitoring_ReqMTX004 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.812810323+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_HealthMonitoring_ReqMTX004","Elapsed":0}
{"Time":"2025-10-04T21:53:57.812830171+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_RealMediaMTXServer"}
{"Time":"2025-10-04T21:53:57.812841558+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_RealMediaMTXServer","Output":"=== RUN   TestPathManager_RealMediaMTXServer\n"}
{"Time":"2025-10-04T21:53:57.813743793+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_RealMediaMTXServer","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.816819822+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_RealMediaMTXServer","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.816889066+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_RealMediaMTXServer","Output":"--- FAIL: TestPathManager_RealMediaMTXServer (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.816907781+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_RealMediaMTXServer","Elapsed":0}
{"Time":"2025-10-04T21:53:57.816927204+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewPathManager_ReqMTX001"}
{"Time":"2025-10-04T21:53:57.816947685+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewPathManager_ReqMTX001","Output":"=== RUN   TestNewPathManager_ReqMTX001\n"}
{"Time":"2025-10-04T21:53:57.817867375+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewPathManager_ReqMTX001","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.821200994+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewPathManager_ReqMTX001","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.821291886+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewPathManager_ReqMTX001","Output":"--- FAIL: TestNewPathManager_ReqMTX001 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.821311161+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewPathManager_ReqMTX001","Elapsed":0}
{"Time":"2025-10-04T21:53:57.821356179+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_CreatePath_ReqMTX003"}
{"Time":"2025-10-04T21:53:57.821370205+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_CreatePath_ReqMTX003","Output":"=== RUN   TestPathManager_CreatePath_ReqMTX003\n"}
{"Time":"2025-10-04T21:53:57.822395839+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_CreatePath_ReqMTX003","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.828150446+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_CreatePath_ReqMTX003","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.828255565+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_CreatePath_ReqMTX003","Output":"--- FAIL: TestPathManager_CreatePath_ReqMTX003 (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.828275593+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_CreatePath_ReqMTX003","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.828297812+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_DeletePath_ReqMTX003"}
{"Time":"2025-10-04T21:53:57.828380397+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_DeletePath_ReqMTX003","Output":"=== RUN   TestPathManager_DeletePath_ReqMTX003\n"}
{"Time":"2025-10-04T21:53:57.829691426+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_DeletePath_ReqMTX003","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.834730045+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_DeletePath_ReqMTX003","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.834805045+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_DeletePath_ReqMTX003","Output":"--- FAIL: TestPathManager_DeletePath_ReqMTX003 (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.834825372+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_DeletePath_ReqMTX003","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.834853807+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_GetPath_ReqMTX003"}
{"Time":"2025-10-04T21:53:57.834883474+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_GetPath_ReqMTX003","Output":"=== RUN   TestPathManager_GetPath_ReqMTX003\n"}
{"Time":"2025-10-04T21:53:57.836097878+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_GetPath_ReqMTX003","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.841025531+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_GetPath_ReqMTX003","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.841113808+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_GetPath_ReqMTX003","Output":"--- FAIL: TestPathManager_GetPath_ReqMTX003 (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.841139749+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_GetPath_ReqMTX003","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.841156647+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_ListPaths_ReqMTX003"}
{"Time":"2025-10-04T21:53:57.841165759+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_ListPaths_ReqMTX003","Output":"=== RUN   TestPathManager_ListPaths_ReqMTX003\n"}
{"Time":"2025-10-04T21:53:57.841775935+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases","Output":"--- PASS: TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases (0.20s)\n"}
{"Time":"2025-10-04T21:53:57.841815711+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/capability_probing_edge_cases","Elapsed":0.2}
{"Time":"2025-10-04T21:53:57.841845294+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases"}
{"Time":"2025-10-04T21:53:57.841856808+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"=== RUN   TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases\n"}
{"Time":"2025-10-04T21:53:57.842324773+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:53:57.842649616+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_ListPaths_ReqMTX003","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.842831625+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:53:57.842873706+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:53:57.843463479+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:57.843507534+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:53:57.843522289+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:53:57.843533374+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:57.843543826+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:53:57.843553646+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:53:57.843563148+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:53:57.843606305+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:53:57.843617329+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:53:57.843626429+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:53:57.843635921+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:53:57.843655189+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:53:57.844549544+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:53:57.847492691+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_ListPaths_ReqMTX003","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.847608555+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_ListPaths_ReqMTX003","Output":"--- FAIL: TestPathManager_ListPaths_ReqMTX003 (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.847635783+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_ListPaths_ReqMTX003","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.847654207+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_ValidatePath_ReqMTX003"}
{"Time":"2025-10-04T21:53:57.847664797+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_ValidatePath_ReqMTX003","Output":"=== RUN   TestPathManager_ValidatePath_ReqMTX003\n"}
{"Time":"2025-10-04T21:53:57.848879517+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_ValidatePath_ReqMTX003","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.853691544+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_ValidatePath_ReqMTX003","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.853785457+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_ValidatePath_ReqMTX003","Output":"--- FAIL: TestPathManager_ValidatePath_ReqMTX003 (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.853809314+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_ValidatePath_ReqMTX003","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.853826847+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_ErrorHandling_ReqMTX001"}
{"Time":"2025-10-04T21:53:57.853835022+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_ErrorHandling_ReqMTX001","Output":"=== RUN   TestPathManager_ErrorHandling_ReqMTX001\n"}
{"Time":"2025-10-04T21:53:57.854795271+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_ErrorHandling_ReqMTX001","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.857281845+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:53:57.857566261+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:53:57.857602863+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:53:57.85761859+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:53:57.857629282+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:53:57.857640052+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:53:57.857650409+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:53:57.85828576+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_ErrorHandling_ReqMTX001","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.858331632+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_ErrorHandling_ReqMTX001","Output":"--- FAIL: TestPathManager_ErrorHandling_ReqMTX001 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.858371176+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathManager_ErrorHandling_ReqMTX001","Elapsed":0}
{"Time":"2025-10-04T21:53:57.858390658+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathFallback"}
{"Time":"2025-10-04T21:53:57.858402469+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathFallback","Output":"=== RUN   TestPathFallback\n"}
{"Time":"2025-10-04T21:53:57.859247475+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathFallback","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.862489483+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathFallback","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.862575311+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathFallback","Output":"--- FAIL: TestPathFallback (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.862591657+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathFallback","Elapsed":0}
{"Time":"2025-10-04T21:53:57.862611381+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathValidatorCaching"}
{"Time":"2025-10-04T21:53:57.862622908+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathValidatorCaching","Output":"=== RUN   TestPathValidatorCaching\n"}
{"Time":"2025-10-04T21:53:57.863638525+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathValidatorCaching","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.867117+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathValidatorCaching","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.867242051+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathValidatorCaching","Output":"--- FAIL: TestPathValidatorCaching (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.867262905+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathValidatorCaching","Elapsed":0}
{"Time":"2025-10-04T21:53:57.867286911+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathValidatorErrorHandling"}
{"Time":"2025-10-04T21:53:57.86730023+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathValidatorErrorHandling","Output":"=== RUN   TestPathValidatorErrorHandling\n"}
{"Time":"2025-10-04T21:53:57.868189481+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathValidatorErrorHandling","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.87175278+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathValidatorErrorHandling","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.871861268+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathValidatorErrorHandling","Output":"--- FAIL: TestPathValidatorErrorHandling (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.871880994+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathValidatorErrorHandling","Elapsed":0}
{"Time":"2025-10-04T21:53:57.871904863+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathValidatorSinglePathValidation"}
{"Time":"2025-10-04T21:53:57.871917353+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathValidatorSinglePathValidation","Output":"=== RUN   TestPathValidatorSinglePathValidation\n"}
{"Time":"2025-10-04T21:53:57.872996761+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathValidatorSinglePathValidation","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.880278916+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathValidatorSinglePathValidation","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.880370464+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathValidatorSinglePathValidation","Output":"--- FAIL: TestPathValidatorSinglePathValidation (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.880386102+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestPathValidatorSinglePathValidation","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.88040135+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewRecordingManager_ReqMTX001_Refactored"}
{"Time":"2025-10-04T21:53:57.880409843+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewRecordingManager_ReqMTX001_Refactored","Output":"=== RUN   TestNewRecordingManager_ReqMTX001_Refactored\n"}
{"Time":"2025-10-04T21:53:57.882262626+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewRecordingManager_ReqMTX001_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.890713901+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewRecordingManager_ReqMTX001_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.890918+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewRecordingManager_ReqMTX001_Refactored","Output":"--- FAIL: TestNewRecordingManager_ReqMTX001_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.89102631+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewRecordingManager_ReqMTX001_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.891146385+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_CompleteLifecycle_ReqMTX002_Refactored"}
{"Time":"2025-10-04T21:53:57.891167445+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_CompleteLifecycle_ReqMTX002_Refactored","Output":"=== RUN   TestRecordingManager_CompleteLifecycle_ReqMTX002_Refactored\n"}
{"Time":"2025-10-04T21:53:57.892862917+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_CompleteLifecycle_ReqMTX002_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.901184349+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_CompleteLifecycle_ReqMTX002_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.901312087+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_CompleteLifecycle_ReqMTX002_Refactored","Output":"--- FAIL: TestRecordingManager_CompleteLifecycle_ReqMTX002_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.901341761+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_CompleteLifecycle_ReqMTX002_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.901358932+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_StopRecording_ReqMTX002_Refactored"}
{"Time":"2025-10-04T21:53:57.901368275+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_StopRecording_ReqMTX002_Refactored","Output":"=== RUN   TestRecordingManager_StopRecording_ReqMTX002_Refactored\n"}
{"Time":"2025-10-04T21:53:57.901377747+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_StopRecording_ReqMTX002_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.905450594+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_StopRecording_ReqMTX002_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.905697979+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_StopRecording_ReqMTX002_Refactored","Output":"--- FAIL: TestRecordingManager_StopRecording_ReqMTX002_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.905799805+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_StopRecording_ReqMTX002_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.905898001+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_GetRecordingsListAPI_ReqMTX002_Refactored"}
{"Time":"2025-10-04T21:53:57.905914177+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_GetRecordingsListAPI_ReqMTX002_Refactored","Output":"=== RUN   TestRecordingManager_GetRecordingsListAPI_ReqMTX002_Refactored\n"}
{"Time":"2025-10-04T21:53:57.90737566+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_GetRecordingsListAPI_ReqMTX002_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.916251516+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_GetRecordingsListAPI_ReqMTX002_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.916342494+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_GetRecordingsListAPI_ReqMTX002_Refactored","Output":"--- FAIL: TestRecordingManager_GetRecordingsListAPI_ReqMTX002_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.916360299+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_GetRecordingsListAPI_ReqMTX002_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.916377832+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_StartRecordingCreatesPath_ReqMTX003_Refactored"}
{"Time":"2025-10-04T21:53:57.916387263+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_StartRecordingCreatesPath_ReqMTX003_Refactored","Output":"=== RUN   TestRecordingManager_StartRecordingCreatesPath_ReqMTX003_Refactored\n"}
{"Time":"2025-10-04T21:53:57.918039386+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_StartRecordingCreatesPath_ReqMTX003_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.922481704+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_StartRecordingCreatesPath_ReqMTX003_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.922617301+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_StartRecordingCreatesPath_ReqMTX003_Refactored","Output":"--- FAIL: TestRecordingManager_StartRecordingCreatesPath_ReqMTX003_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.922635639+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_StartRecordingCreatesPath_ReqMTX003_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.922651661+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_APISchemaCompliance_ReqMTX001_Refactored"}
{"Time":"2025-10-04T21:53:57.922661086+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_APISchemaCompliance_ReqMTX001_Refactored","Output":"=== RUN   TestRecordingManager_APISchemaCompliance_ReqMTX001_Refactored\n"}
{"Time":"2025-10-04T21:53:57.923740309+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_APISchemaCompliance_ReqMTX001_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.928714367+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_APISchemaCompliance_ReqMTX001_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.928802095+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_APISchemaCompliance_ReqMTX001_Refactored","Output":"--- FAIL: TestRecordingManager_APISchemaCompliance_ReqMTX001_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.928822075+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_APISchemaCompliance_ReqMTX001_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.928838371+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_APIErrorHandling_ReqMTX004_Refactored"}
{"Time":"2025-10-04T21:53:57.92884696+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_APIErrorHandling_ReqMTX004_Refactored","Output":"=== RUN   TestRecordingManager_APIErrorHandling_ReqMTX004_Refactored\n"}
{"Time":"2025-10-04T21:53:57.930058927+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_APIErrorHandling_ReqMTX004_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.935165903+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_APIErrorHandling_ReqMTX004_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.93526288+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_APIErrorHandling_ReqMTX004_Refactored","Output":"--- FAIL: TestRecordingManager_APIErrorHandling_ReqMTX004_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.935292172+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_APIErrorHandling_ReqMTX004_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.935309298+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_ErrorHandling_ReqMTX007_Refactored"}
{"Time":"2025-10-04T21:53:57.93533676+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_ErrorHandling_ReqMTX007_Refactored","Output":"=== RUN   TestRecordingManager_ErrorHandling_ReqMTX007_Refactored\n"}
{"Time":"2025-10-04T21:53:57.936572237+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_ErrorHandling_ReqMTX007_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.94170317+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_ErrorHandling_ReqMTX007_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.941796063+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_ErrorHandling_ReqMTX007_Refactored","Output":"--- FAIL: TestRecordingManager_ErrorHandling_ReqMTX007_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.941813559+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_ErrorHandling_ReqMTX007_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.941831109+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_ConcurrentAccess_ReqMTX001_Refactored"}
{"Time":"2025-10-04T21:53:57.941840177+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_ConcurrentAccess_ReqMTX001_Refactored","Output":"=== RUN   TestRecordingManager_ConcurrentAccess_ReqMTX001_Refactored\n"}
{"Time":"2025-10-04T21:53:57.942902359+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_ConcurrentAccess_ReqMTX001_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.94433248+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:53:57.944396492+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"    camera_asserters_test.go:341: ✅ Invalid device correctly not found: /dev/invalid_device\n"}
{"Time":"2025-10-04T21:53:57.944418548+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"    camera_edge_cases_test.go:83: ✅ Error handling edge cases validated\n"}
{"Time":"2025-10-04T21:53:57.94444303+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:57.944459211+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:53:57.944470372+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:57.944484169+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:57.945358859+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:57.945403625+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:53:57.945421851+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:53:57.945433471+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:53:57.945443194+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:53:57.948292211+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_ConcurrentAccess_ReqMTX001_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.94842567+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_ConcurrentAccess_ReqMTX001_Refactored","Output":"--- FAIL: TestRecordingManager_ConcurrentAccess_ReqMTX001_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.948444338+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_ConcurrentAccess_ReqMTX001_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.948467682+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_StartRecordingWithSegments_ReqMTX002_Refactored"}
{"Time":"2025-10-04T21:53:57.948478704+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_StartRecordingWithSegments_ReqMTX002_Refactored","Output":"=== RUN   TestRecordingManager_StartRecordingWithSegments_ReqMTX002_Refactored\n"}
{"Time":"2025-10-04T21:53:57.949250909+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_StartRecordingWithSegments_ReqMTX002_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.952801501+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_StartRecordingWithSegments_ReqMTX002_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.952907594+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_StartRecordingWithSegments_ReqMTX002_Refactored","Output":"--- FAIL: TestRecordingManager_StartRecordingWithSegments_ReqMTX002_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.952925733+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_StartRecordingWithSegments_ReqMTX002_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:57.952961461+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_MultiTierRecording_ReqMTX002_Refactored"}
{"Time":"2025-10-04T21:53:57.952973498+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_MultiTierRecording_ReqMTX002_Refactored","Output":"=== RUN   TestRecordingManager_MultiTierRecording_ReqMTX002_Refactored\n"}
{"Time":"2025-10-04T21:53:57.953785614+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_MultiTierRecording_ReqMTX002_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.956982575+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_MultiTierRecording_ReqMTX002_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.957072832+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_MultiTierRecording_ReqMTX002_Refactored","Output":"--- FAIL: TestRecordingManager_MultiTierRecording_ReqMTX002_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.957090162+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_MultiTierRecording_ReqMTX002_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:57.957108898+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_ProgressiveReadinessCompliance_ReqMTX001_Refactored"}
{"Time":"2025-10-04T21:53:57.957117481+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_ProgressiveReadinessCompliance_ReqMTX001_Refactored","Output":"=== RUN   TestRecordingManager_ProgressiveReadinessCompliance_ReqMTX001_Refactored\n"}
{"Time":"2025-10-04T21:53:57.958013153+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_ProgressiveReadinessCompliance_ReqMTX001_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.961239365+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_ProgressiveReadinessCompliance_ReqMTX001_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.961343461+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_ProgressiveReadinessCompliance_ReqMTX001_Refactored","Output":"--- FAIL: TestRecordingManager_ProgressiveReadinessCompliance_ReqMTX001_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.961362996+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingManager_ProgressiveReadinessCompliance_ReqMTX001_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:57.961397822+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorContext_ReqMTX007"}
{"Time":"2025-10-04T21:53:57.961410967+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorContext_ReqMTX007","Output":"=== RUN   TestErrorContext_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:57.961422306+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorContext_ReqMTX007","Output":"--- PASS: TestErrorContext_ReqMTX007 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.961479209+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorContext_ReqMTX007","Elapsed":0}
{"Time":"2025-10-04T21:53:57.96149591+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorSeverity_ReqMTX007"}
{"Time":"2025-10-04T21:53:57.961505916+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorSeverity_ReqMTX007","Output":"=== RUN   TestErrorSeverity_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:57.96151806+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorSeverity_ReqMTX007","Output":"--- PASS: TestErrorSeverity_ReqMTX007 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.961529542+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestErrorSeverity_ReqMTX007","Elapsed":0}
{"Time":"2025-10-04T21:53:57.961546985+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecoveryStrategy_Interface_ReqMTX007"}
{"Time":"2025-10-04T21:53:57.961557162+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecoveryStrategy_Interface_ReqMTX007","Output":"=== RUN   TestRecoveryStrategy_Interface_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:57.96235231+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecoveryStrategy_Interface_ReqMTX007","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.965572167+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecoveryStrategy_Interface_ReqMTX007","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.965664586+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecoveryStrategy_Interface_ReqMTX007","Output":"--- FAIL: TestRecoveryStrategy_Interface_ReqMTX007 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.965681994+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecoveryStrategy_Interface_ReqMTX007","Elapsed":0}
{"Time":"2025-10-04T21:53:57.965700856+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamRecoveryStrategy_Interface_ReqMTX007"}
{"Time":"2025-10-04T21:53:57.965709983+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamRecoveryStrategy_Interface_ReqMTX007","Output":"=== RUN   TestStreamRecoveryStrategy_Interface_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:57.966522448+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamRecoveryStrategy_Interface_ReqMTX007","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.969964139+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamRecoveryStrategy_Interface_ReqMTX007","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.970098972+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamRecoveryStrategy_Interface_ReqMTX007","Output":"--- FAIL: TestStreamRecoveryStrategy_Interface_ReqMTX007 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.970117847+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamRecoveryStrategy_Interface_ReqMTX007","Elapsed":0}
{"Time":"2025-10-04T21:53:57.970140336+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingRecoveryStrategy_CanRecover_ReqMTX007"}
{"Time":"2025-10-04T21:53:57.970151511+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingRecoveryStrategy_CanRecover_ReqMTX007","Output":"=== RUN   TestRecordingRecoveryStrategy_CanRecover_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:57.971901165+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingRecoveryStrategy_CanRecover_ReqMTX007","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.975136155+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingRecoveryStrategy_CanRecover_ReqMTX007","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.97524981+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingRecoveryStrategy_CanRecover_ReqMTX007","Output":"--- FAIL: TestRecordingRecoveryStrategy_CanRecover_ReqMTX007 (0.01s)\n"}
{"Time":"2025-10-04T21:53:57.975274612+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingRecoveryStrategy_CanRecover_ReqMTX007","Elapsed":0.01}
{"Time":"2025-10-04T21:53:57.975292949+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamRecoveryStrategy_CanRecover_ReqMTX007"}
{"Time":"2025-10-04T21:53:57.975303124+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamRecoveryStrategy_CanRecover_ReqMTX007","Output":"=== RUN   TestStreamRecoveryStrategy_CanRecover_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:57.97618656+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamRecoveryStrategy_CanRecover_ReqMTX007","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.979408797+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamRecoveryStrategy_CanRecover_ReqMTX007","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.979531601+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamRecoveryStrategy_CanRecover_ReqMTX007","Output":"--- FAIL: TestStreamRecoveryStrategy_CanRecover_ReqMTX007 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.979554308+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamRecoveryStrategy_CanRecover_ReqMTX007","Elapsed":0}
{"Time":"2025-10-04T21:53:57.979569329+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingRecoveryStrategy_Recover_NoCameraID_ReqMTX007"}
{"Time":"2025-10-04T21:53:57.979578087+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingRecoveryStrategy_Recover_NoCameraID_ReqMTX007","Output":"=== RUN   TestRecordingRecoveryStrategy_Recover_NoCameraID_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:57.980382371+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingRecoveryStrategy_Recover_NoCameraID_ReqMTX007","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.983536043+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingRecoveryStrategy_Recover_NoCameraID_ReqMTX007","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.983624146+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingRecoveryStrategy_Recover_NoCameraID_ReqMTX007","Output":"--- FAIL: TestRecordingRecoveryStrategy_Recover_NoCameraID_ReqMTX007 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.983642028+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRecordingRecoveryStrategy_Recover_NoCameraID_ReqMTX007","Elapsed":0}
{"Time":"2025-10-04T21:53:57.983660704+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamRecoveryStrategy_Recover_NoCameraID_ReqMTX007"}
{"Time":"2025-10-04T21:53:57.983682743+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamRecoveryStrategy_Recover_NoCameraID_ReqMTX007","Output":"=== RUN   TestStreamRecoveryStrategy_Recover_NoCameraID_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:57.984494963+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamRecoveryStrategy_Recover_NoCameraID_ReqMTX007","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.987599378+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamRecoveryStrategy_Recover_NoCameraID_ReqMTX007","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.987704044+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamRecoveryStrategy_Recover_NoCameraID_ReqMTX007","Output":"--- FAIL: TestStreamRecoveryStrategy_Recover_NoCameraID_ReqMTX007 (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.987727127+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamRecoveryStrategy_Recover_NoCameraID_ReqMTX007","Elapsed":0}
{"Time":"2025-10-04T21:53:57.987742495+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewRTSPConnectionManager_ReqMTX001_Refactored"}
{"Time":"2025-10-04T21:53:57.987751475+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewRTSPConnectionManager_ReqMTX001_Refactored","Output":"=== RUN   TestNewRTSPConnectionManager_ReqMTX001_Refactored\n"}
{"Time":"2025-10-04T21:53:57.988544449+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewRTSPConnectionManager_ReqMTX001_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.991610929+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewRTSPConnectionManager_ReqMTX001_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.991693802+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewRTSPConnectionManager_ReqMTX001_Refactored","Output":"--- FAIL: TestNewRTSPConnectionManager_ReqMTX001_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.991711575+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewRTSPConnectionManager_ReqMTX001_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:57.991731111+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ListConnections_ReqMTX002_Refactored"}
{"Time":"2025-10-04T21:53:57.991740233+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ListConnections_ReqMTX002_Refactored","Output":"=== RUN   TestRTSPConnectionManager_ListConnections_ReqMTX002_Refactored\n"}
{"Time":"2025-10-04T21:53:57.99254363+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ListConnections_ReqMTX002_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:57.996630512+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ListConnections_ReqMTX002_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:57.996745997+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ListConnections_ReqMTX002_Refactored","Output":"--- FAIL: TestRTSPConnectionManager_ListConnections_ReqMTX002_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:57.996770126+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ListConnections_ReqMTX002_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:57.996787893+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ListSessions_ReqMTX002_Refactored"}
{"Time":"2025-10-04T21:53:57.996797113+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ListSessions_ReqMTX002_Refactored","Output":"=== RUN   TestRTSPConnectionManager_ListSessions_ReqMTX002_Refactored\n"}
{"Time":"2025-10-04T21:53:57.997592116+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ListSessions_ReqMTX002_Refactored","Output":"time=\"2025-10-04 21:53:57\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.000848264+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ListSessions_ReqMTX002_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.000949874+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ListSessions_ReqMTX002_Refactored","Output":"--- FAIL: TestRTSPConnectionManager_ListSessions_ReqMTX002_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.000965596+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ListSessions_ReqMTX002_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:58.000985674+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_GetConnectionHealth_ReqMTX004_Refactored"}
{"Time":"2025-10-04T21:53:58.00099697+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_GetConnectionHealth_ReqMTX004_Refactored","Output":"=== RUN   TestRTSPConnectionManager_GetConnectionHealth_ReqMTX004_Refactored\n"}
{"Time":"2025-10-04T21:53:58.001774399+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_GetConnectionHealth_ReqMTX004_Refactored","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.004962695+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_GetConnectionHealth_ReqMTX004_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.005073514+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_GetConnectionHealth_ReqMTX004_Refactored","Output":"--- FAIL: TestRTSPConnectionManager_GetConnectionHealth_ReqMTX004_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.005091739+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_GetConnectionHealth_ReqMTX004_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:58.005111985+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_GetConnectionMetrics_ReqMTX004_Refactored"}
{"Time":"2025-10-04T21:53:58.005122961+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_GetConnectionMetrics_ReqMTX004_Refactored","Output":"=== RUN   TestRTSPConnectionManager_GetConnectionMetrics_ReqMTX004_Refactored\n"}
{"Time":"2025-10-04T21:53:58.005879896+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_GetConnectionMetrics_ReqMTX004_Refactored","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.008954472+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_GetConnectionMetrics_ReqMTX004_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.009040002+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_GetConnectionMetrics_ReqMTX004_Refactored","Output":"--- FAIL: TestRTSPConnectionManager_GetConnectionMetrics_ReqMTX004_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.009059381+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_GetConnectionMetrics_ReqMTX004_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:58.009078553+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_Configuration_ReqMTX003_Refactored"}
{"Time":"2025-10-04T21:53:58.009087874+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_Configuration_ReqMTX003_Refactored","Output":"=== RUN   TestRTSPConnectionManager_Configuration_ReqMTX003_Refactored\n"}
{"Time":"2025-10-04T21:53:58.009937417+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_Configuration_ReqMTX003_Refactored","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.013056375+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_Configuration_ReqMTX003_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.013151728+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_Configuration_ReqMTX003_Refactored","Output":"--- FAIL: TestRTSPConnectionManager_Configuration_ReqMTX003_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.013175353+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_Configuration_ReqMTX003_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:58.013190468+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ErrorHandling_ReqMTX004_Refactored"}
{"Time":"2025-10-04T21:53:58.013199839+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ErrorHandling_ReqMTX004_Refactored","Output":"=== RUN   TestRTSPConnectionManager_ErrorHandling_ReqMTX004_Refactored\n"}
{"Time":"2025-10-04T21:53:58.0139736+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ErrorHandling_ReqMTX004_Refactored","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.017752077+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ErrorHandling_ReqMTX004_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.017841153+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ErrorHandling_ReqMTX004_Refactored","Output":"--- FAIL: TestRTSPConnectionManager_ErrorHandling_ReqMTX004_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.017864588+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ErrorHandling_ReqMTX004_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:58.017879907+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_Performance_ReqMTX002_Refactored"}
{"Time":"2025-10-04T21:53:58.017889201+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_Performance_ReqMTX002_Refactored","Output":"=== RUN   TestRTSPConnectionManager_Performance_ReqMTX002_Refactored\n"}
{"Time":"2025-10-04T21:53:58.018688524+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_Performance_ReqMTX002_Refactored","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.021717255+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_Performance_ReqMTX002_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.021828844+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_Performance_ReqMTX002_Refactored","Output":"--- FAIL: TestRTSPConnectionManager_Performance_ReqMTX002_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.021853013+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_Performance_ReqMTX002_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:58.021868679+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_RealMediaMTXServer_Refactored"}
{"Time":"2025-10-04T21:53:58.021879033+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_RealMediaMTXServer_Refactored","Output":"=== RUN   TestRTSPConnectionManager_RealMediaMTXServer_Refactored\n"}
{"Time":"2025-10-04T21:53:58.022727484+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_RealMediaMTXServer_Refactored","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.025794265+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_RealMediaMTXServer_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.025874844+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_RealMediaMTXServer_Refactored","Output":"--- FAIL: TestRTSPConnectionManager_RealMediaMTXServer_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.025912572+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_RealMediaMTXServer_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:58.025928578+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ConfigurationScenarios_Refactored"}
{"Time":"2025-10-04T21:53:58.025938506+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ConfigurationScenarios_Refactored","Output":"=== RUN   TestRTSPConnectionManager_ConfigurationScenarios_Refactored\n"}
{"Time":"2025-10-04T21:53:58.026774725+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ConfigurationScenarios_Refactored","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.029825648+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ConfigurationScenarios_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.029920958+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ConfigurationScenarios_Refactored","Output":"--- FAIL: TestRTSPConnectionManager_ConfigurationScenarios_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.029943965+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ConfigurationScenarios_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:58.029959644+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ErrorScenarios_Refactored"}
{"Time":"2025-10-04T21:53:58.029969028+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ErrorScenarios_Refactored","Output":"=== RUN   TestRTSPConnectionManager_ErrorScenarios_Refactored\n"}
{"Time":"2025-10-04T21:53:58.030787127+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ErrorScenarios_Refactored","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.033856252+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ErrorScenarios_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.033936915+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ErrorScenarios_Refactored","Output":"--- FAIL: TestRTSPConnectionManager_ErrorScenarios_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.033960569+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ErrorScenarios_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:58.034375323+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ConcurrentAccess_Refactored"}
{"Time":"2025-10-04T21:53:58.034429344+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ConcurrentAccess_Refactored","Output":"=== RUN   TestRTSPConnectionManager_ConcurrentAccess_Refactored\n"}
{"Time":"2025-10-04T21:53:58.037832563+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ConcurrentAccess_Refactored","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.043667788+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ConcurrentAccess_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.043767821+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ConcurrentAccess_Refactored","Output":"--- FAIL: TestRTSPConnectionManager_ConcurrentAccess_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:58.043792561+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ConcurrentAccess_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:58.04382134+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_StressTest_Refactored"}
{"Time":"2025-10-04T21:53:58.043834464+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_StressTest_Refactored","Output":"=== RUN   TestRTSPConnectionManager_StressTest_Refactored\n"}
{"Time":"2025-10-04T21:53:58.045497292+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_StressTest_Refactored","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.04651035+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Output":"--- PASS: TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases (0.20s)\n"}
{"Time":"2025-10-04T21:53:58.046622499+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/error_handling_edge_cases","Elapsed":0.2}
{"Time":"2025-10-04T21:53:58.046647525+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases"}
{"Time":"2025-10-04T21:53:58.046659059+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"=== RUN   TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases\n"}
{"Time":"2025-10-04T21:53:58.046742207+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:53:58.046760451+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:53:58.046822725+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:53:58.046839292+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:58.046890334+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:53:58.046908016+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:53:58.047063287+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:58.047083796+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:53:58.047095587+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:53:58.047106775+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:53:58.047120394+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:53:58.047191222+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:53:58.04723017+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:53:58.047258923+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:53:58.047273731+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:53:58.047338124+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:53:58.050230432+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_StressTest_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.050346979+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_StressTest_Refactored","Output":"--- FAIL: TestRTSPConnectionManager_StressTest_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:58.050386624+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_StressTest_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:58.050407718+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_IntegrationWithController_Refactored"}
{"Time":"2025-10-04T21:53:58.050420357+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_IntegrationWithController_Refactored","Output":"=== RUN   TestRTSPConnectionManager_IntegrationWithController_Refactored\n"}
{"Time":"2025-10-04T21:53:58.051652184+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_IntegrationWithController_Refactored","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.055203437+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_IntegrationWithController_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.055315143+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_IntegrationWithController_Refactored","Output":"--- FAIL: TestRTSPConnectionManager_IntegrationWithController_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:58.055342002+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_IntegrationWithController_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:58.055362695+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_InputValidation_Refactored"}
{"Time":"2025-10-04T21:53:58.055396393+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_InputValidation_Refactored","Output":"=== RUN   TestRTSPConnectionManager_InputValidation_Refactored\n"}
{"Time":"2025-10-04T21:53:58.057266406+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_InputValidation_Refactored","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.059679389+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_InputValidation_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.059757996+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_InputValidation_Refactored","Output":"--- FAIL: TestRTSPConnectionManager_InputValidation_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.059777489+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_InputValidation_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:58.059793789+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ErrorScenarios_DangerousBugs_Refactored"}
{"Time":"2025-10-04T21:53:58.059803176+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ErrorScenarios_DangerousBugs_Refactored","Output":"=== RUN   TestRTSPConnectionManager_ErrorScenarios_DangerousBugs_Refactored\n"}
{"Time":"2025-10-04T21:53:58.060707527+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ErrorScenarios_DangerousBugs_Refactored","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.062452767+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:53:58.062563434+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:53:58.062581835+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:53:58.062613623+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:53:58.062630043+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:53:58.062717237+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:53:58.062739679+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:53:58.064451963+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ErrorScenarios_DangerousBugs_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.064535097+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ErrorScenarios_DangerousBugs_Refactored","Output":"--- FAIL: TestRTSPConnectionManager_ErrorScenarios_DangerousBugs_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.064554243+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPConnectionManager_ErrorScenarios_DangerousBugs_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:58.064571095+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_NewRTSPKeepaliveReader"}
{"Time":"2025-10-04T21:53:58.064582547+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_NewRTSPKeepaliveReader","Output":"=== RUN   TestRTSPKeepaliveReader_NewRTSPKeepaliveReader\n"}
{"Time":"2025-10-04T21:53:58.065486146+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_NewRTSPKeepaliveReader","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.068585175+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_NewRTSPKeepaliveReader","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.068666574+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_NewRTSPKeepaliveReader","Output":"--- FAIL: TestRTSPKeepaliveReader_NewRTSPKeepaliveReader (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.068684981+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_NewRTSPKeepaliveReader","Elapsed":0}
{"Time":"2025-10-04T21:53:58.068731908+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_StartKeepalive"}
{"Time":"2025-10-04T21:53:58.068757963+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_StartKeepalive","Output":"=== RUN   TestRTSPKeepaliveReader_StartKeepalive\n"}
{"Time":"2025-10-04T21:53:58.069638183+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_StartKeepalive","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.073918608+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_StartKeepalive","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.074009579+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_StartKeepalive","Output":"--- FAIL: TestRTSPKeepaliveReader_StartKeepalive (0.01s)\n"}
{"Time":"2025-10-04T21:53:58.074029147+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_StartKeepalive","Elapsed":0.01}
{"Time":"2025-10-04T21:53:58.074065651+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_StopKeepalive"}
{"Time":"2025-10-04T21:53:58.074079649+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_StopKeepalive","Output":"=== RUN   TestRTSPKeepaliveReader_StopKeepalive\n"}
{"Time":"2025-10-04T21:53:58.074960933+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_StopKeepalive","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.078149518+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_StopKeepalive","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.078245557+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_StopKeepalive","Output":"--- FAIL: TestRTSPKeepaliveReader_StopKeepalive (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.078265391+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_StopKeepalive","Elapsed":0}
{"Time":"2025-10-04T21:53:58.078292777+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_StopAll"}
{"Time":"2025-10-04T21:53:58.078329382+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_StopAll","Output":"=== RUN   TestRTSPKeepaliveReader_StopAll\n"}
{"Time":"2025-10-04T21:53:58.079158666+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_StopAll","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.082237019+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_StopAll","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.082313798+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_StopAll","Output":"--- FAIL: TestRTSPKeepaliveReader_StopAll (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.082331413+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_StopAll","Elapsed":0}
{"Time":"2025-10-04T21:53:58.082353311+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_IsActive"}
{"Time":"2025-10-04T21:53:58.08236591+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_IsActive","Output":"=== RUN   TestRTSPKeepaliveReader_IsActive\n"}
{"Time":"2025-10-04T21:53:58.083276049+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_IsActive","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.086356258+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_IsActive","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.086445376+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_IsActive","Output":"--- FAIL: TestRTSPKeepaliveReader_IsActive (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.0864641+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_IsActive","Elapsed":0}
{"Time":"2025-10-04T21:53:58.086488733+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_GetActiveCount"}
{"Time":"2025-10-04T21:53:58.086502636+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_GetActiveCount","Output":"=== RUN   TestRTSPKeepaliveReader_GetActiveCount\n"}
{"Time":"2025-10-04T21:53:58.087346135+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_GetActiveCount","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.0904499+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_GetActiveCount","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.090522943+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_GetActiveCount","Output":"--- FAIL: TestRTSPKeepaliveReader_GetActiveCount (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.090541433+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_GetActiveCount","Elapsed":0}
{"Time":"2025-10-04T21:53:58.090564033+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_EnvironmentVariables"}
{"Time":"2025-10-04T21:53:58.090576343+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_EnvironmentVariables","Output":"=== RUN   TestRTSPKeepaliveReader_EnvironmentVariables\n"}
{"Time":"2025-10-04T21:53:58.09144413+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_EnvironmentVariables","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.095372448+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_EnvironmentVariables","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.095463959+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_EnvironmentVariables","Output":"--- FAIL: TestRTSPKeepaliveReader_EnvironmentVariables (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.095490761+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_EnvironmentVariables","Elapsed":0}
{"Time":"2025-10-04T21:53:58.095510486+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_ConcurrentOperations"}
{"Time":"2025-10-04T21:53:58.095521139+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_ConcurrentOperations","Output":"=== RUN   TestRTSPKeepaliveReader_ConcurrentOperations\n"}
{"Time":"2025-10-04T21:53:58.096430179+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_ConcurrentOperations","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.099522302+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_ConcurrentOperations","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.09959902+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_ConcurrentOperations","Output":"--- FAIL: TestRTSPKeepaliveReader_ConcurrentOperations (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.09961688+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestRTSPKeepaliveReader_ConcurrentOperations","Elapsed":0}
{"Time":"2025-10-04T21:53:58.099640033+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_New_ReqMTX001_Success_Refactored"}
{"Time":"2025-10-04T21:53:58.099653402+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_New_ReqMTX001_Success_Refactored","Output":"=== RUN   TestSnapshotManager_New_ReqMTX001_Success_Refactored\n"}
{"Time":"2025-10-04T21:53:58.100500363+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_New_ReqMTX001_Success_Refactored","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.104481474+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_New_ReqMTX001_Success_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.104570085+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_New_ReqMTX001_Success_Refactored","Output":"--- FAIL: TestSnapshotManager_New_ReqMTX001_Success_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.104589221+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_New_ReqMTX001_Success_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:58.104612083+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_TakeSnapshot_ReqMTX002_DataCreation_Refactored"}
{"Time":"2025-10-04T21:53:58.104624933+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_TakeSnapshot_ReqMTX002_DataCreation_Refactored","Output":"=== RUN   TestSnapshotManager_TakeSnapshot_ReqMTX002_DataCreation_Refactored\n"}
{"Time":"2025-10-04T21:53:58.105668329+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_TakeSnapshot_ReqMTX002_DataCreation_Refactored","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.109572308+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_TakeSnapshot_ReqMTX002_DataCreation_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.109664718+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_TakeSnapshot_ReqMTX002_DataCreation_Refactored","Output":"--- FAIL: TestSnapshotManager_TakeSnapshot_ReqMTX002_DataCreation_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:58.109686095+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_TakeSnapshot_ReqMTX002_DataCreation_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:58.109711673+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_GetSnapshotsList_ReqMTX002_Success_Refactored"}
{"Time":"2025-10-04T21:53:58.109725945+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_GetSnapshotsList_ReqMTX002_Success_Refactored","Output":"=== RUN   TestSnapshotManager_GetSnapshotsList_ReqMTX002_Success_Refactored\n"}
{"Time":"2025-10-04T21:53:58.11083895+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_GetSnapshotsList_ReqMTX002_Success_Refactored","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.114734873+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_GetSnapshotsList_ReqMTX002_Success_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.114823778+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_GetSnapshotsList_ReqMTX002_Success_Refactored","Output":"--- FAIL: TestSnapshotManager_GetSnapshotsList_ReqMTX002_Success_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:58.114843823+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_GetSnapshotsList_ReqMTX002_Success_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:58.114869673+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_GetSnapshotInfo_ReqMTX002_Success_Refactored"}
{"Time":"2025-10-04T21:53:58.114884107+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_GetSnapshotInfo_ReqMTX002_Success_Refactored","Output":"=== RUN   TestSnapshotManager_GetSnapshotInfo_ReqMTX002_Success_Refactored\n"}
{"Time":"2025-10-04T21:53:58.115920587+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_GetSnapshotInfo_ReqMTX002_Success_Refactored","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.119993086+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_GetSnapshotInfo_ReqMTX002_Success_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.120087544+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_GetSnapshotInfo_ReqMTX002_Success_Refactored","Output":"--- FAIL: TestSnapshotManager_GetSnapshotInfo_ReqMTX002_Success_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:58.120107552+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_GetSnapshotInfo_ReqMTX002_Success_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:58.120132399+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_DeleteSnapshotFile_ReqMTX002_Success_Refactored"}
{"Time":"2025-10-04T21:53:58.120145884+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_DeleteSnapshotFile_ReqMTX002_Success_Refactored","Output":"=== RUN   TestSnapshotManager_DeleteSnapshotFile_ReqMTX002_Success_Refactored\n"}
{"Time":"2025-10-04T21:53:58.12182738+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_DeleteSnapshotFile_ReqMTX002_Success_Refactored","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.124998158+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_DeleteSnapshotFile_ReqMTX002_Success_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.125080384+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_DeleteSnapshotFile_ReqMTX002_Success_Refactored","Output":"--- FAIL: TestSnapshotManager_DeleteSnapshotFile_ReqMTX002_Success_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.125100146+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_DeleteSnapshotFile_ReqMTX002_Success_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:58.125123996+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_GetSnapshotSettings_ReqMTX001_Success_Refactored"}
{"Time":"2025-10-04T21:53:58.125137421+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_GetSnapshotSettings_ReqMTX001_Success_Refactored","Output":"=== RUN   TestSnapshotManager_GetSnapshotSettings_ReqMTX001_Success_Refactored\n"}
{"Time":"2025-10-04T21:53:58.126005223+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_GetSnapshotSettings_ReqMTX001_Success_Refactored","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.12912517+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_GetSnapshotSettings_ReqMTX001_Success_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.129204506+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_GetSnapshotSettings_ReqMTX001_Success_Refactored","Output":"--- FAIL: TestSnapshotManager_GetSnapshotSettings_ReqMTX001_Success_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.129237003+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_GetSnapshotSettings_ReqMTX001_Success_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:58.129261722+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_CleanupOldSnapshots_ReqMTX002_Success_Refactored"}
{"Time":"2025-10-04T21:53:58.129275605+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_CleanupOldSnapshots_ReqMTX002_Success_Refactored","Output":"=== RUN   TestSnapshotManager_CleanupOldSnapshots_ReqMTX002_Success_Refactored\n"}
{"Time":"2025-10-04T21:53:58.130113901+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_CleanupOldSnapshots_ReqMTX002_Success_Refactored","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.133162866+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_CleanupOldSnapshots_ReqMTX002_Success_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.133260287+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_CleanupOldSnapshots_ReqMTX002_Success_Refactored","Output":"--- FAIL: TestSnapshotManager_CleanupOldSnapshots_ReqMTX002_Success_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.13329166+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_CleanupOldSnapshots_ReqMTX002_Success_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:58.133331864+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_TakeSnapshot_ReqMTX004_ErrorHandling_Refactored"}
{"Time":"2025-10-04T21:53:58.133346548+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_TakeSnapshot_ReqMTX004_ErrorHandling_Refactored","Output":"=== RUN   TestSnapshotManager_TakeSnapshot_ReqMTX004_ErrorHandling_Refactored\n"}
{"Time":"2025-10-04T21:53:58.134186136+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_TakeSnapshot_ReqMTX004_ErrorHandling_Refactored","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.13730449+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_TakeSnapshot_ReqMTX004_ErrorHandling_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.137380562+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_TakeSnapshot_ReqMTX004_ErrorHandling_Refactored","Output":"--- FAIL: TestSnapshotManager_TakeSnapshot_ReqMTX004_ErrorHandling_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.137405065+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_TakeSnapshot_ReqMTX004_ErrorHandling_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:58.137422945+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_TakeSnapshot_ReqMTX001_Concurrent_Refactored"}
{"Time":"2025-10-04T21:53:58.137434765+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_TakeSnapshot_ReqMTX001_Concurrent_Refactored","Output":"=== RUN   TestSnapshotManager_TakeSnapshot_ReqMTX001_Concurrent_Refactored\n"}
{"Time":"2025-10-04T21:53:58.138291409+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_TakeSnapshot_ReqMTX001_Concurrent_Refactored","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.141483987+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_TakeSnapshot_ReqMTX001_Concurrent_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.141561855+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_TakeSnapshot_ReqMTX001_Concurrent_Refactored","Output":"--- FAIL: TestSnapshotManager_TakeSnapshot_ReqMTX001_Concurrent_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.141602999+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_TakeSnapshot_ReqMTX001_Concurrent_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:53:58.141637799+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_TakeSnapshot_ReqMTX002_Tier0_V4L2Direct_RealHardware_Refactored"}
{"Time":"2025-10-04T21:53:58.141652438+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_TakeSnapshot_ReqMTX002_Tier0_V4L2Direct_RealHardware_Refactored","Output":"=== RUN   TestSnapshotManager_TakeSnapshot_ReqMTX002_Tier0_V4L2Direct_RealHardware_Refactored\n"}
{"Time":"2025-10-04T21:53:58.142557372+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_TakeSnapshot_ReqMTX002_Tier0_V4L2Direct_RealHardware_Refactored","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.147381416+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:53:58.147466345+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"    camera_asserters_test.go:375: ✅ Startup performance validated: 100.542992ms (max: 5s)\n"}
{"Time":"2025-10-04T21:53:58.147483897+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:58.147510502+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:58.147523247+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:58.147536382+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:53:58.14784083+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:58.147876974+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:53:58.147895561+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:53:58.147907997+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:53:58.147939999+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:53:58.147957043+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"    camera_asserters_test.go:147: ✅ Monitor stopped successfully\n"}
{"Time":"2025-10-04T21:53:58.147971924+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"    camera_asserters_test.go:388: ✅ Stop performance validated: 492.776µs (max: 2s)\n"}
{"Time":"2025-10-04T21:53:58.147982945+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"    camera_edge_cases_test.go:97: ✅ Performance edge cases validated\n"}
{"Time":"2025-10-04T21:53:58.148004783+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Output":"--- PASS: TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases (0.10s)\n"}
{"Time":"2025-10-04T21:53:58.14801654+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/performance_edge_cases","Elapsed":0.1}
{"Time":"2025-10-04T21:53:58.148036039+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases"}
{"Time":"2025-10-04T21:53:58.148047633+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"=== RUN   TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases\n"}
{"Time":"2025-10-04T21:53:58.148254258+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_TakeSnapshot_ReqMTX002_Tier0_V4L2Direct_RealHardware_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.148440496+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_TakeSnapshot_ReqMTX002_Tier0_V4L2Direct_RealHardware_Refactored","Output":"--- FAIL: TestSnapshotManager_TakeSnapshot_ReqMTX002_Tier0_V4L2Direct_RealHardware_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:58.148532653+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_TakeSnapshot_ReqMTX002_Tier0_V4L2Direct_RealHardware_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:58.148559686+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_TakeSnapshot_ReqMTX002_MultiTier_Integration_Refactored"}
{"Time":"2025-10-04T21:53:58.148259243+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:53:58.148610891+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:53:58.14863073+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:53:58.148640573+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:58.148649843+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:53:58.148663462+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:53:58.148673023+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:58.148682194+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:53:58.148690874+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:53:58.148699678+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:53:58.14871443+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:53:58.14872387+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:53:58.148732596+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:53:58.1487549+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:53:58.148765262+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:53:58.148593554+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_TakeSnapshot_ReqMTX002_MultiTier_Integration_Refactored","Output":"=== RUN   TestSnapshotManager_TakeSnapshot_ReqMTX002_MultiTier_Integration_Refactored\n"}
{"Time":"2025-10-04T21:53:58.148884339+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:53:58.150834172+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_TakeSnapshot_ReqMTX002_MultiTier_Integration_Refactored","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.156623863+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_TakeSnapshot_ReqMTX002_MultiTier_Integration_Refactored","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.15673324+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_TakeSnapshot_ReqMTX002_MultiTier_Integration_Refactored","Output":"--- FAIL: TestSnapshotManager_TakeSnapshot_ReqMTX002_MultiTier_Integration_Refactored (0.01s)\n"}
{"Time":"2025-10-04T21:53:58.156758331+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSnapshotManager_TakeSnapshot_ReqMTX002_MultiTier_Integration_Refactored","Elapsed":0.01}
{"Time":"2025-10-04T21:53:58.156778964+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetStreams_Management_ReqMTX002"}
{"Time":"2025-10-04T21:53:58.156792533+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetStreams_Management_ReqMTX002","Output":"=== RUN   TestController_GetStreams_Management_ReqMTX002\n"}
{"Time":"2025-10-04T21:53:58.159287138+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetStreams_Management_ReqMTX002","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.163271601+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetStreams_Management_ReqMTX002","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.163464836+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetStreams_Management_ReqMTX002","Output":"--- FAIL: TestController_GetStreams_Management_ReqMTX002 (0.01s)\n"}
{"Time":"2025-10-04T21:53:58.163562502+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetStreams_Management_ReqMTX002","Elapsed":0.01}
{"Time":"2025-10-04T21:53:58.163660794+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetStream_Management_ReqMTX002"}
{"Time":"2025-10-04T21:53:58.16367956+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetStream_Management_ReqMTX002","Output":"=== RUN   TestController_GetStream_Management_ReqMTX002\n"}
{"Time":"2025-10-04T21:53:58.166326581+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:53:58.166407632+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:53:58.166425693+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:53:58.166442879+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:53:58.166456123+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:53:58.166468556+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:53:58.166481212+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:53:58.166326491+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetStream_Management_ReqMTX002","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.170631285+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetStream_Management_ReqMTX002","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.170934537+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetStream_Management_ReqMTX002","Output":"--- FAIL: TestController_GetStream_Management_ReqMTX002 (0.01s)\n"}
{"Time":"2025-10-04T21:53:58.170970699+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_GetStream_Management_ReqMTX002","Elapsed":0.01}
{"Time":"2025-10-04T21:53:58.170988546+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_CreateStream_Management_ReqMTX002"}
{"Time":"2025-10-04T21:53:58.170997921+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_CreateStream_Management_ReqMTX002","Output":"=== RUN   TestController_CreateStream_Management_ReqMTX002\n"}
{"Time":"2025-10-04T21:53:58.175316667+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_CreateStream_Management_ReqMTX002","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.178171301+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_CreateStream_Management_ReqMTX002","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.178348501+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_CreateStream_Management_ReqMTX002","Output":"--- FAIL: TestController_CreateStream_Management_ReqMTX002 (0.01s)\n"}
{"Time":"2025-10-04T21:53:58.178461211+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_CreateStream_Management_ReqMTX002","Elapsed":0.01}
{"Time":"2025-10-04T21:53:58.17857617+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_DeleteStream_Management_ReqMTX002"}
{"Time":"2025-10-04T21:53:58.178593983+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_DeleteStream_Management_ReqMTX002","Output":"=== RUN   TestController_DeleteStream_Management_ReqMTX002\n"}
{"Time":"2025-10-04T21:53:58.183651001+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_DeleteStream_Management_ReqMTX002","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.192262188+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_DeleteStream_Management_ReqMTX002","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.195719025+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_DeleteStream_Management_ReqMTX002","Output":"--- FAIL: TestController_DeleteStream_Management_ReqMTX002 (0.02s)\n"}
{"Time":"2025-10-04T21:53:58.196378864+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_DeleteStream_Management_ReqMTX002","Elapsed":0.02}
{"Time":"2025-10-04T21:53:58.196424021+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StreamManagement_ErrorHandling_ReqMTX004"}
{"Time":"2025-10-04T21:53:58.196437764+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StreamManagement_ErrorHandling_ReqMTX004","Output":"=== RUN   TestController_StreamManagement_ErrorHandling_ReqMTX004\n"}
{"Time":"2025-10-04T21:53:58.197079212+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StreamManagement_ErrorHandling_ReqMTX004","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.201147405+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StreamManagement_ErrorHandling_ReqMTX004","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.201489236+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StreamManagement_ErrorHandling_ReqMTX004","Output":"--- FAIL: TestController_StreamManagement_ErrorHandling_ReqMTX004 (0.01s)\n"}
{"Time":"2025-10-04T21:53:58.201522851+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StreamManagement_ErrorHandling_ReqMTX004","Elapsed":0.01}
{"Time":"2025-10-04T21:53:58.201550865+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StreamManagement_NotRunning_ReqMTX004"}
{"Time":"2025-10-04T21:53:58.201563701+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StreamManagement_NotRunning_ReqMTX004","Output":"=== RUN   TestController_StreamManagement_NotRunning_ReqMTX004\n"}
{"Time":"2025-10-04T21:53:58.20269851+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StreamManagement_NotRunning_ReqMTX004","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.205060171+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StreamManagement_NotRunning_ReqMTX004","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.205149129+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StreamManagement_NotRunning_ReqMTX004","Output":"--- FAIL: TestController_StreamManagement_NotRunning_ReqMTX004 (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.205171983+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StreamManagement_NotRunning_ReqMTX004","Elapsed":0}
{"Time":"2025-10-04T21:53:58.205188715+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StreamManagement_Concurrent_ReqMTX002"}
{"Time":"2025-10-04T21:53:58.205199371+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StreamManagement_Concurrent_ReqMTX002","Output":"=== RUN   TestController_StreamManagement_Concurrent_ReqMTX002\n"}
{"Time":"2025-10-04T21:53:58.205986906+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StreamManagement_Concurrent_ReqMTX002","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.209006939+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StreamManagement_Concurrent_ReqMTX002","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.209082354+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StreamManagement_Concurrent_ReqMTX002","Output":"--- FAIL: TestController_StreamManagement_Concurrent_ReqMTX002 (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.209104747+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestController_StreamManagement_Concurrent_ReqMTX002","Elapsed":0}
{"Time":"2025-10-04T21:53:58.20912172+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_PanicRecovery"}
{"Time":"2025-10-04T21:53:58.209130891+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_PanicRecovery","Output":"=== RUN   TestStreamManager_PanicRecovery\n"}
{"Time":"2025-10-04T21:53:58.209916143+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_PanicRecovery","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.21292177+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_PanicRecovery","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.213017007+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_PanicRecovery","Output":"--- FAIL: TestStreamManager_PanicRecovery (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.213040629+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_PanicRecovery","Elapsed":0}
{"Time":"2025-10-04T21:53:58.213055287+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_ErrorHandling"}
{"Time":"2025-10-04T21:53:58.213064567+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_ErrorHandling","Output":"=== RUN   TestStreamManager_ErrorHandling\n"}
{"Time":"2025-10-04T21:53:58.213907186+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_ErrorHandling","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.218808591+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_ErrorHandling","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.218902528+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_ErrorHandling","Output":"--- FAIL: TestStreamManager_ErrorHandling (0.01s)\n"}
{"Time":"2025-10-04T21:53:58.21892211+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_ErrorHandling","Elapsed":0.01}
{"Time":"2025-10-04T21:53:58.218943461+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_StreamLifecycle_ErrorHandling"}
{"Time":"2025-10-04T21:53:58.218955876+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_StreamLifecycle_ErrorHandling","Output":"=== RUN   TestStreamManager_StreamLifecycle_ErrorHandling\n"}
{"Time":"2025-10-04T21:53:58.219815748+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_StreamLifecycle_ErrorHandling","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.223076432+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_StreamLifecycle_ErrorHandling","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.223177243+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_StreamLifecycle_ErrorHandling","Output":"--- FAIL: TestStreamManager_StreamLifecycle_ErrorHandling (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.223196956+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_StreamLifecycle_ErrorHandling","Elapsed":0}
{"Time":"2025-10-04T21:53:58.223231187+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_ErrorHandlingRobustness"}
{"Time":"2025-10-04T21:53:58.223245319+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_ErrorHandlingRobustness","Output":"=== RUN   TestStreamManager_ErrorHandlingRobustness\n"}
{"Time":"2025-10-04T21:53:58.224104838+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_ErrorHandlingRobustness","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.227223793+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_ErrorHandlingRobustness","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.227315665+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_ErrorHandlingRobustness","Output":"--- FAIL: TestStreamManager_ErrorHandlingRobustness (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.227336046+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_ErrorHandlingRobustness","Elapsed":0}
{"Time":"2025-10-04T21:53:58.22736009+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_ErrorHandling_RealCamera"}
{"Time":"2025-10-04T21:53:58.22737316+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_ErrorHandling_RealCamera","Output":"=== RUN   TestStreamManager_ErrorHandling_RealCamera\n"}
{"Time":"2025-10-04T21:53:58.228416151+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_ErrorHandling_RealCamera","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.231817991+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_ErrorHandling_RealCamera","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.231941478+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_ErrorHandling_RealCamera","Output":"--- FAIL: TestStreamManager_ErrorHandling_RealCamera (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.231961276+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_ErrorHandling_RealCamera","Elapsed":0}
{"Time":"2025-10-04T21:53:58.232133293+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewStreamManager_ReqMTX001"}
{"Time":"2025-10-04T21:53:58.23215358+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewStreamManager_ReqMTX001","Output":"=== RUN   TestNewStreamManager_ReqMTX001\n"}
{"Time":"2025-10-04T21:53:58.233388428+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewStreamManager_ReqMTX001","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.238555177+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewStreamManager_ReqMTX001","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.238637728+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewStreamManager_ReqMTX001","Output":"--- FAIL: TestNewStreamManager_ReqMTX001 (0.01s)\n"}
{"Time":"2025-10-04T21:53:58.23865753+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewStreamManager_ReqMTX001","Elapsed":0.01}
{"Time":"2025-10-04T21:53:58.238672821+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_CreateStream_ReqMTX002"}
{"Time":"2025-10-04T21:53:58.238681514+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_CreateStream_ReqMTX002","Output":"=== RUN   TestStreamManager_CreateStream_ReqMTX002\n"}
{"Time":"2025-10-04T21:53:58.239977017+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_CreateStream_ReqMTX002","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.24465698+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_CreateStream_ReqMTX002","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.244754967+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_CreateStream_ReqMTX002","Output":"--- FAIL: TestStreamManager_CreateStream_ReqMTX002 (0.01s)\n"}
{"Time":"2025-10-04T21:53:58.244792757+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_CreateStream_ReqMTX002","Elapsed":0.01}
{"Time":"2025-10-04T21:53:58.244818516+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_DeleteStream_ReqMTX002"}
{"Time":"2025-10-04T21:53:58.244829755+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_DeleteStream_ReqMTX002","Output":"=== RUN   TestStreamManager_DeleteStream_ReqMTX002\n"}
{"Time":"2025-10-04T21:53:58.245628958+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_DeleteStream_ReqMTX002","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.248754957+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_DeleteStream_ReqMTX002","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.248830647+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_DeleteStream_ReqMTX002","Output":"--- FAIL: TestStreamManager_DeleteStream_ReqMTX002 (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.248852976+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_DeleteStream_ReqMTX002","Elapsed":0}
{"Time":"2025-10-04T21:53:58.248869185+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_StartStream_ReqMTX002"}
{"Time":"2025-10-04T21:53:58.24887945+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_StartStream_ReqMTX002","Output":"=== RUN   TestStreamManager_StartStream_ReqMTX002\n"}
{"Time":"2025-10-04T21:53:58.249952094+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_StartStream_ReqMTX002","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.250240806+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:53:58.250401855+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:58.250421146+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:58.250435218+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:58.250586802+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:53:58.250616541+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:58.250630651+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:53:58.250756281+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:53:58.250769835+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:53:58.250782264+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:53:58.250794488+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"    camera_asserters_test.go:147: ✅ Monitor stopped successfully\n"}
{"Time":"2025-10-04T21:53:58.251018549+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"    camera_edge_cases_test.go:124: ✅ Lifecycle edge cases validated\n"}
{"Time":"2025-10-04T21:53:58.251246887+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Output":"--- PASS: TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases (0.10s)\n"}
{"Time":"2025-10-04T21:53:58.25127629+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters/lifecycle_edge_cases","Elapsed":0.1}
{"Time":"2025-10-04T21:53:58.251298443+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters","Output":"--- PASS: TestCameraMonitor_EdgeCases_WithAsserters (1.43s)\n"}
{"Time":"2025-10-04T21:53:58.251508464+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_WithAsserters","Elapsed":1.43}
{"Time":"2025-10-04T21:53:58.251527994+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting"}
{"Time":"2025-10-04T21:53:58.251540511+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting","Output":"=== RUN   TestCameraMonitor_EdgeCases_StressTesting\n"}
{"Time":"2025-10-04T21:53:58.251779142+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress"}
{"Time":"2025-10-04T21:53:58.251804567+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Output":"=== RUN   TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress\n"}
{"Time":"2025-10-04T21:53:58.251965363+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:53:58.251984759+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:53:58.252117338+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:53:58.252132356+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:58.252145016+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:53:58.252233219+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:53:58.252253085+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:58.25226534+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:53:58.252276914+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:53:58.252288162+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:53:58.252405726+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:53:58.252446121+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:53:58.252462165+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:53:58.252596032+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:53:58.252610726+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:53:58.252626197+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:53:58.254649112+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_StartStream_ReqMTX002","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.254759575+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_StartStream_ReqMTX002","Output":"--- FAIL: TestStreamManager_StartStream_ReqMTX002 (0.01s)\n"}
{"Time":"2025-10-04T21:53:58.254993209+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_StartStream_ReqMTX002","Elapsed":0.01}
{"Time":"2025-10-04T21:53:58.255018066+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_GetStreamStatus_ReqMTX002"}
{"Time":"2025-10-04T21:53:58.255030151+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_GetStreamStatus_ReqMTX002","Output":"=== RUN   TestStreamManager_GetStreamStatus_ReqMTX002\n"}
{"Time":"2025-10-04T21:53:58.256184809+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_GetStreamStatus_ReqMTX002","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.260638756+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_GetStreamStatus_ReqMTX002","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.260754825+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_GetStreamStatus_ReqMTX002","Output":"--- FAIL: TestStreamManager_GetStreamStatus_ReqMTX002 (0.01s)\n"}
{"Time":"2025-10-04T21:53:58.263283973+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_GetStreamStatus_ReqMTX002","Elapsed":0.01}
{"Time":"2025-10-04T21:53:58.263367383+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_ListStreamsAPI_ReqMTX002"}
{"Time":"2025-10-04T21:53:58.263385258+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_ListStreamsAPI_ReqMTX002","Output":"=== RUN   TestStreamManager_ListStreamsAPI_ReqMTX002\n"}
{"Time":"2025-10-04T21:53:58.263398119+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_ListStreamsAPI_ReqMTX002","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.267575048+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_ListStreamsAPI_ReqMTX002","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.267753665+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_ListStreamsAPI_ReqMTX002","Output":"--- FAIL: TestStreamManager_ListStreamsAPI_ReqMTX002 (0.01s)\n"}
{"Time":"2025-10-04T21:53:58.267867419+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_ListStreamsAPI_ReqMTX002","Elapsed":0.01}
{"Time":"2025-10-04T21:53:58.267989066+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_GetStreamURL_ReqMTX002"}
{"Time":"2025-10-04T21:53:58.268006432+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_GetStreamURL_ReqMTX002","Output":"=== RUN   TestStreamManager_GetStreamURL_ReqMTX002\n"}
{"Time":"2025-10-04T21:53:58.269566945+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_GetStreamURL_ReqMTX002","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.27194838+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Output":"time=\"2025-10-04 21:53:58\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:53:58.272425096+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:53:58.27262134+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:53:58.272695155+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:53:58.272761988+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:53:58.273035342+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:53:58.27307786+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:53:58.275373376+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_GetStreamURL_ReqMTX002","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.275552696+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_GetStreamURL_ReqMTX002","Output":"--- FAIL: TestStreamManager_GetStreamURL_ReqMTX002 (0.01s)\n"}
{"Time":"2025-10-04T21:53:58.275577659+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_GetStreamURL_ReqMTX002","Elapsed":0.01}
{"Time":"2025-10-04T21:53:58.275595861+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_GetStream_ReqMTX002"}
{"Time":"2025-10-04T21:53:58.275605928+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_GetStream_ReqMTX002","Output":"=== RUN   TestStreamManager_GetStream_ReqMTX002\n"}
{"Time":"2025-10-04T21:53:58.276393649+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_GetStream_ReqMTX002","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.280243274+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_GetStream_ReqMTX002","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.280368661+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_GetStream_ReqMTX002","Output":"--- FAIL: TestStreamManager_GetStream_ReqMTX002 (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.280395337+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_GetStream_ReqMTX002","Elapsed":0}
{"Time":"2025-10-04T21:53:58.280412854+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_ListStreams_ReqMTX002"}
{"Time":"2025-10-04T21:53:58.280423414+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_ListStreams_ReqMTX002","Output":"=== RUN   TestStreamManager_ListStreams_ReqMTX002\n"}
{"Time":"2025-10-04T21:53:58.281275374+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_ListStreams_ReqMTX002","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.284604184+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_ListStreams_ReqMTX002","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.28469956+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_ListStreams_ReqMTX002","Output":"--- FAIL: TestStreamManager_ListStreams_ReqMTX002 (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.284722731+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_ListStreams_ReqMTX002","Elapsed":0}
{"Time":"2025-10-04T21:53:58.284738385+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_StartRecordingStream_ReqMTX002"}
{"Time":"2025-10-04T21:53:58.284748163+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_StartRecordingStream_ReqMTX002","Output":"=== RUN   TestStreamManager_StartRecordingStream_ReqMTX002\n"}
{"Time":"2025-10-04T21:53:58.2859211+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_StartRecordingStream_ReqMTX002","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.289777108+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_StartRecordingStream_ReqMTX002","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.289905672+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_StartRecordingStream_ReqMTX002","Output":"--- FAIL: TestStreamManager_StartRecordingStream_ReqMTX002 (0.01s)\n"}
{"Time":"2025-10-04T21:53:58.289938664+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_StartRecordingStream_ReqMTX002","Elapsed":0.01}
{"Time":"2025-10-04T21:53:58.289957577+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_StartStream_Viewing_ReqMTX002"}
{"Time":"2025-10-04T21:53:58.289966597+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_StartStream_Viewing_ReqMTX002","Output":"=== RUN   TestStreamManager_StartStream_Viewing_ReqMTX002\n"}
{"Time":"2025-10-04T21:53:58.29105415+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_StartStream_Viewing_ReqMTX002","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.296621429+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_StartStream_Viewing_ReqMTX002","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.29672059+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_StartStream_Viewing_ReqMTX002","Output":"--- FAIL: TestStreamManager_StartStream_Viewing_ReqMTX002 (0.01s)\n"}
{"Time":"2025-10-04T21:53:58.296740046+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_StartStream_Viewing_ReqMTX002","Elapsed":0.01}
{"Time":"2025-10-04T21:53:58.296760499+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_StartStream_Snapshot_ReqMTX002"}
{"Time":"2025-10-04T21:53:58.296773209+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_StartStream_Snapshot_ReqMTX002","Output":"=== RUN   TestStreamManager_StartStream_Snapshot_ReqMTX002\n"}
{"Time":"2025-10-04T21:53:58.297861275+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_StartStream_Snapshot_ReqMTX002","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.303881787+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_StartStream_Snapshot_ReqMTX002","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.304005982+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_StartStream_Snapshot_ReqMTX002","Output":"--- FAIL: TestStreamManager_StartStream_Snapshot_ReqMTX002 (0.01s)\n"}
{"Time":"2025-10-04T21:53:58.304027289+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_StartStream_Snapshot_ReqMTX002","Elapsed":0.01}
{"Time":"2025-10-04T21:53:58.304051483+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_ErrorHandling_ReqMTX001"}
{"Time":"2025-10-04T21:53:58.304064114+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_ErrorHandling_ReqMTX001","Output":"=== RUN   TestStreamManager_ErrorHandling_ReqMTX001\n"}
{"Time":"2025-10-04T21:53:58.304563503+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_ErrorHandling_ReqMTX001","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:53:58.309416082+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_ErrorHandling_ReqMTX001","Output":"    test_helpers.go:1098: Failed to load config from fixture config_valid_complete.yaml: configuration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:53:58.309527145+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_ErrorHandling_ReqMTX001","Output":"--- FAIL: TestStreamManager_ErrorHandling_ReqMTX001 (0.01s)\n"}
{"Time":"2025-10-04T21:53:58.309653549+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestStreamManager_ErrorHandling_ReqMTX001","Elapsed":0.01}
{"Time":"2025-10-04T21:53:58.309684322+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewSystemMetricsManager_ReqMTX004"}
{"Time":"2025-10-04T21:53:58.309698404+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewSystemMetricsManager_ReqMTX004","Output":"=== RUN   TestNewSystemMetricsManager_ReqMTX004\n"}
{"Time":"2025-10-04T21:53:58.309711399+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewSystemMetricsManager_ReqMTX004","Output":"    test_system_metrics_manager_test.go:33: TODO: Enable tests - SystemMetricsManager is fully implemented\n"}
{"Time":"2025-10-04T21:53:58.309840015+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewSystemMetricsManager_ReqMTX004","Output":"--- SKIP: TestNewSystemMetricsManager_ReqMTX004 (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.309866213+04:00","Action":"skip","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestNewSystemMetricsManager_ReqMTX004","Elapsed":0}
{"Time":"2025-10-04T21:53:58.309987228+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_GetStorageInfoAPI_ReqMTX004"}
{"Time":"2025-10-04T21:53:58.310016183+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_GetStorageInfoAPI_ReqMTX004","Output":"=== RUN   TestSystemMetricsManager_GetStorageInfoAPI_ReqMTX004\n"}
{"Time":"2025-10-04T21:53:58.310167493+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_GetStorageInfoAPI_ReqMTX004","Output":"    test_system_metrics_manager_test.go:82: Storage Info Test Results:\n"}
{"Time":"2025-10-04T21:53:58.310191166+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_GetStorageInfoAPI_ReqMTX004","Output":"    test_system_metrics_manager_test.go:83:   Total Space: 1709817856 bytes (1.59 GB)\n"}
{"Time":"2025-10-04T21:53:58.310204664+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_GetStorageInfoAPI_ReqMTX004","Output":"    test_system_metrics_manager_test.go:84:   Used Space: 289058816 bytes (0.27 GB)\n"}
{"Time":"2025-10-04T21:53:58.310346756+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_GetStorageInfoAPI_ReqMTX004","Output":"    test_system_metrics_manager_test.go:85:   Available Space: 1420759040 bytes (1.32 GB)\n"}
{"Time":"2025-10-04T21:53:58.310362161+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_GetStorageInfoAPI_ReqMTX004","Output":"    test_system_metrics_manager_test.go:86:   Usage Percentage: 16.91%\n"}
{"Time":"2025-10-04T21:53:58.310375265+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_GetStorageInfoAPI_ReqMTX004","Output":"    test_system_metrics_manager_test.go:87:   Low Space Warning: false\n"}
{"Time":"2025-10-04T21:53:58.310386429+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_GetStorageInfoAPI_ReqMTX004","Output":"    test_system_metrics_manager_test.go:88:   Recordings Size: 0 bytes\n"}
{"Time":"2025-10-04T21:53:58.310505926+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_GetStorageInfoAPI_ReqMTX004","Output":"    test_system_metrics_manager_test.go:89:   Snapshots Size: 784827 bytes\n"}
{"Time":"2025-10-04T21:53:58.310532568+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_GetStorageInfoAPI_ReqMTX004","Output":"--- PASS: TestSystemMetricsManager_GetStorageInfoAPI_ReqMTX004 (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.310548484+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_GetStorageInfoAPI_ReqMTX004","Elapsed":0}
{"Time":"2025-10-04T21:53:58.310670161+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_GetSystemMetricsAPI_ReqMTX004"}
{"Time":"2025-10-04T21:53:58.310689815+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_GetSystemMetricsAPI_ReqMTX004","Output":"=== RUN   TestSystemMetricsManager_GetSystemMetricsAPI_ReqMTX004\n"}
{"Time":"2025-10-04T21:53:58.310707591+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_GetSystemMetricsAPI_ReqMTX004","Output":"    test_system_metrics_manager_test.go:95: TODO: Enable tests - GetSystemMetricsAPI is fully implemented\n"}
{"Time":"2025-10-04T21:53:58.310726675+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_GetSystemMetricsAPI_ReqMTX004","Output":"--- SKIP: TestSystemMetricsManager_GetSystemMetricsAPI_ReqMTX004 (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.310872778+04:00","Action":"skip","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_GetSystemMetricsAPI_ReqMTX004","Elapsed":0}
{"Time":"2025-10-04T21:53:58.310891977+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_GetCleanupOldFilesAPI_ReqMTX004"}
{"Time":"2025-10-04T21:53:58.311015382+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_GetCleanupOldFilesAPI_ReqMTX004","Output":"=== RUN   TestSystemMetricsManager_GetCleanupOldFilesAPI_ReqMTX004\n"}
{"Time":"2025-10-04T21:53:58.311037286+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_GetCleanupOldFilesAPI_ReqMTX004","Output":"    test_system_metrics_manager_test.go:101: TODO: Implement GetCleanupOldFilesAPI method in SystemMetricsManager\n"}
{"Time":"2025-10-04T21:53:58.31105342+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_GetCleanupOldFilesAPI_ReqMTX004","Output":"--- SKIP: TestSystemMetricsManager_GetCleanupOldFilesAPI_ReqMTX004 (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.311244763+04:00","Action":"skip","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_GetCleanupOldFilesAPI_ReqMTX004","Elapsed":0}
{"Time":"2025-10-04T21:53:58.31127385+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_ErrorHandling_ReqMTX007"}
{"Time":"2025-10-04T21:53:58.311287274+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_ErrorHandling_ReqMTX007","Output":"=== RUN   TestSystemMetricsManager_ErrorHandling_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:58.311299621+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_ErrorHandling_ReqMTX007","Output":"    test_system_metrics_manager_test.go:107: TODO: Enable tests - SystemMetricsManager error handling is implemented\n"}
{"Time":"2025-10-04T21:53:58.311313605+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_ErrorHandling_ReqMTX007","Output":"--- SKIP: TestSystemMetricsManager_ErrorHandling_ReqMTX007 (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.311327425+04:00","Action":"skip","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_ErrorHandling_ReqMTX007","Elapsed":0}
{"Time":"2025-10-04T21:53:58.311339651+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_StorageThresholds_ReqMTX004"}
{"Time":"2025-10-04T21:53:58.31135219+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_StorageThresholds_ReqMTX004","Output":"=== RUN   TestSystemMetricsManager_StorageThresholds_ReqMTX004\n"}
{"Time":"2025-10-04T21:53:58.311363826+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_StorageThresholds_ReqMTX004","Output":"    test_system_metrics_manager_test.go:113: TODO: Enable tests - Storage monitoring is implemented\n"}
{"Time":"2025-10-04T21:53:58.311377361+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_StorageThresholds_ReqMTX004","Output":"--- SKIP: TestSystemMetricsManager_StorageThresholds_ReqMTX004 (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.311389784+04:00","Action":"skip","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_StorageThresholds_ReqMTX004","Elapsed":0}
{"Time":"2025-10-04T21:53:58.311412445+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_PerformanceMetrics_ReqMTX004"}
{"Time":"2025-10-04T21:53:58.311425026+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_PerformanceMetrics_ReqMTX004","Output":"=== RUN   TestSystemMetricsManager_PerformanceMetrics_ReqMTX004\n"}
{"Time":"2025-10-04T21:53:58.311435565+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_PerformanceMetrics_ReqMTX004","Output":"    test_system_metrics_manager_test.go:119: TODO: Enable tests - Performance metrics collection is implemented\n"}
{"Time":"2025-10-04T21:53:58.311448538+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_PerformanceMetrics_ReqMTX004","Output":"--- SKIP: TestSystemMetricsManager_PerformanceMetrics_ReqMTX004 (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.311460792+04:00","Action":"skip","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_PerformanceMetrics_ReqMTX004","Elapsed":0}
{"Time":"2025-10-04T21:53:58.311473889+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_ContextAwareShutdown_ReqMTX007"}
{"Time":"2025-10-04T21:53:58.311484278+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_ContextAwareShutdown_ReqMTX007","Output":"=== RUN   TestSystemMetricsManager_ContextAwareShutdown_ReqMTX007\n"}
{"Time":"2025-10-04T21:53:58.311495503+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_ContextAwareShutdown_ReqMTX007","Output":"    test_system_metrics_manager_test.go:125: TODO: Enable tests - Context handling is implemented\n"}
{"Time":"2025-10-04T21:53:58.311508885+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_ContextAwareShutdown_ReqMTX007","Output":"--- SKIP: TestSystemMetricsManager_ContextAwareShutdown_ReqMTX007 (0.00s)\n"}
{"Time":"2025-10-04T21:53:58.311522416+04:00","Action":"skip","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Test":"TestSystemMetricsManager_ContextAwareShutdown_ReqMTX007","Elapsed":0}
{"Time":"2025-10-04T21:53:58.311534859+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Output":"FAIL\n"}
{"Time":"2025-10-04T21:53:58.320316654+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Output":"coverage: 7.3% of statements in ./...\n"}
{"Time":"2025-10-04T21:53:58.34561983+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Output":"FAIL\tgithub.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx\t1.417s\n"}
{"Time":"2025-10-04T21:53:58.345679079+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/mediamtx","Elapsed":1.419}
{"Time":"2025-10-04T21:53:58.354186489+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:53:58.380297222+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Output":"    camera_edge_cases_test.go:197: ✅ Concurrent operations stress test validated\n"}
{"Time":"2025-10-04T21:53:58.380398043+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:58.380414987+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:58.380424693+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:58.380433236+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:53:58.380442699+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:58.380453086+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:53:58.38046301+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:53:58.380472215+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:53:58.380481305+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:53:58.48559887+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Output":"--- PASS: TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress (0.23s)\n"}
{"Time":"2025-10-04T21:53:58.485694148+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/concurrent_operations_stress","Elapsed":0.23}
{"Time":"2025-10-04T21:53:58.485715587+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress"}
{"Time":"2025-10-04T21:53:58.48572691+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Output":"=== RUN   TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress\n"}
{"Time":"2025-10-04T21:53:58.485761937+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:53:58.485774757+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:53:58.485785267+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:53:58.485796302+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:58.485806759+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:53:58.485818489+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:53:58.485829208+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:58.4858396+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:53:58.48584908+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:53:58.485859255+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:53:58.485869407+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:53:58.485879959+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:53:58.48589075+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:53:58.485910003+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:53:58.485922856+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:53:58.485934028+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:53:58.507971269+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Output":"time=\"2025-10-04 21:53:58\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:53:58.508054225+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:53:58.508070841+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:53:58.50808236+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:53:58.508092197+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:53:58.508103275+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:53:58.508125557+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:53:58.582542561+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:53:58.582628746+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Output":"    camera_edge_cases_test.go:220: ✅ Resource exhaustion stress test validated\n"}
{"Time":"2025-10-04T21:53:58.582646504+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:58.582679932+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:58.582696642+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:58.582707327+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:53:58.583062151+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:58.58331885+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:53:58.583628659+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:53:58.583800709+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:53:58.583948764+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:53:58.68659597+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Output":"--- PASS: TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress (0.20s)\n"}
{"Time":"2025-10-04T21:53:58.686684191+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/resource_exhaustion_stress","Elapsed":0.2}
{"Time":"2025-10-04T21:53:58.686707815+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress"}
{"Time":"2025-10-04T21:53:58.68671983+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Output":"=== RUN   TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress\n"}
{"Time":"2025-10-04T21:53:58.686732344+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:53:58.686764195+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:53:58.686778526+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:53:58.686790102+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:58.686801655+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:53:58.68681322+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:53:58.686825292+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:58.686836464+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:53:58.686847527+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:53:58.686858294+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:53:58.68686879+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:53:58.686879202+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:53:58.686889431+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:53:58.686900856+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:53:58.68692135+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:53:58.686935123+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:53:58.710669079+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Output":"time=\"2025-10-04 21:53:58\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:53:58.710754299+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:53:58.710770348+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:53:58.71078103+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:53:58.71079103+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:53:58.710812447+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:53:58.710824228+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:53:58.785512742+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:53:58.905772392+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Output":"    camera_edge_cases_test.go:247: ✅ Memory usage stress test validated\n"}
{"Time":"2025-10-04T21:53:58.905863903+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:58.905885197+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:58.905921195+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:58.905935019+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:53:58.906490245+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:58.906652228+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:53:58.90667331+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:53:58.906686072+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:53:58.90669687+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Output":"time=\"2025-10-04 21:53:58\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:53:59.007897287+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Output":"--- PASS: TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress (0.32s)\n"}
{"Time":"2025-10-04T21:53:59.007980752+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting/memory_usage_stress","Elapsed":0.32}
{"Time":"2025-10-04T21:53:59.008007218+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting","Output":"--- PASS: TestCameraMonitor_EdgeCases_StressTesting (0.76s)\n"}
{"Time":"2025-10-04T21:53:59.0080224+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_StressTesting","Elapsed":0.76}
{"Time":"2025-10-04T21:53:59.00803592+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions"}
{"Time":"2025-10-04T21:53:59.00804564+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions","Output":"=== RUN   TestCameraMonitor_EdgeCases_BoundaryConditions\n"}
{"Time":"2025-10-04T21:53:59.008056739+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values"}
{"Time":"2025-10-04T21:53:59.008067445+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Output":"=== RUN   TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values\n"}
{"Time":"2025-10-04T21:53:59.00810026+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:53:59.0081162+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:53:59.008128214+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:53:59.008150596+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:59.008162903+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:53:59.00817298+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:53:59.008182019+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:59.008192495+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:53:59.008202554+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:53:59.008232014+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:53:59.008243581+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:53:59.008252166+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:53:59.00826543+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:53:59.008284933+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:53:59.008295815+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:53:59.011270706+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:53:59.032720001+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Output":"time=\"2025-10-04 21:53:59\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:53:59.033009497+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:53:59.033041359+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:53:59.033067915+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:53:59.033270373+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:53:59.033292938+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:53:59.033322835+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:53:59.108550644+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:53:59.108664972+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/zero_dimensions"}
{"Time":"2025-10-04T21:53:59.108701503+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/zero_dimensions","Output":"=== RUN   TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/zero_dimensions\n"}
{"Time":"2025-10-04T21:53:59.108744858+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/zero_dimensions","Output":"    camera_edge_cases_test.go:283: \n"}
{"Time":"2025-10-04T21:53:59.108760813+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/zero_dimensions","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/camera/camera_edge_cases_test.go:283\n"}
{"Time":"2025-10-04T21:53:59.108885636+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/zero_dimensions","Output":"        \tError:      \t\"--stream-mmap --stream-to /tmp/test1.jpg --stream-count 1\" does not contain \"/dev/video0\"\n"}
{"Time":"2025-10-04T21:53:59.108901176+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/zero_dimensions","Output":"        \tTest:       \tTestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/zero_dimensions\n"}
{"Time":"2025-10-04T21:53:59.10891232+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/zero_dimensions","Output":"        \tMessages:   \tArgs should contain device path\n"}
{"Time":"2025-10-04T21:53:59.109126156+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/zero_dimensions","Output":"--- FAIL: TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/zero_dimensions (0.00s)\n"}
{"Time":"2025-10-04T21:53:59.109159517+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/zero_dimensions","Elapsed":0}
{"Time":"2025-10-04T21:53:59.109178809+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/negative_dimensions"}
{"Time":"2025-10-04T21:53:59.109386419+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/negative_dimensions","Output":"=== RUN   TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/negative_dimensions\n"}
{"Time":"2025-10-04T21:53:59.10941382+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/negative_dimensions","Output":"    camera_edge_cases_test.go:283: \n"}
{"Time":"2025-10-04T21:53:59.10942734+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/negative_dimensions","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/camera/camera_edge_cases_test.go:283\n"}
{"Time":"2025-10-04T21:53:59.109437651+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/negative_dimensions","Output":"        \tError:      \t\"--stream-mmap --stream-to /tmp/test2.jpg --stream-count 1\" does not contain \"/dev/video0\"\n"}
{"Time":"2025-10-04T21:53:59.10966913+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/negative_dimensions","Output":"        \tTest:       \tTestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/negative_dimensions\n"}
{"Time":"2025-10-04T21:53:59.109684845+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/negative_dimensions","Output":"        \tMessages:   \tArgs should contain device path\n"}
{"Time":"2025-10-04T21:53:59.10990998+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/negative_dimensions","Output":"--- FAIL: TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/negative_dimensions (0.00s)\n"}
{"Time":"2025-10-04T21:53:59.109928273+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/negative_dimensions","Elapsed":0}
{"Time":"2025-10-04T21:53:59.110134973+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/very_large_dimensions"}
{"Time":"2025-10-04T21:53:59.110156546+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/very_large_dimensions","Output":"=== RUN   TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/very_large_dimensions\n"}
{"Time":"2025-10-04T21:53:59.110170401+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/very_large_dimensions","Output":"    camera_edge_cases_test.go:283: \n"}
{"Time":"2025-10-04T21:53:59.110182603+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/very_large_dimensions","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/camera/camera_edge_cases_test.go:283\n"}
{"Time":"2025-10-04T21:53:59.110194863+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/very_large_dimensions","Output":"        \tError:      \t\"--stream-mmap --stream-to /tmp/test3.jpg --stream-count 1 --set-fmt-video width=10000,height=10000\" does not contain \"/dev/video0\"\n"}
{"Time":"2025-10-04T21:53:59.110434231+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/very_large_dimensions","Output":"        \tTest:       \tTestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/very_large_dimensions\n"}
{"Time":"2025-10-04T21:53:59.110447978+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/very_large_dimensions","Output":"        \tMessages:   \tArgs should contain device path\n"}
{"Time":"2025-10-04T21:53:59.110648329+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/very_large_dimensions","Output":"--- FAIL: TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/very_large_dimensions (0.00s)\n"}
{"Time":"2025-10-04T21:53:59.110685067+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/very_large_dimensions","Elapsed":0}
{"Time":"2025-10-04T21:53:59.110701855+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/empty_format"}
{"Time":"2025-10-04T21:53:59.110910465+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/empty_format","Output":"=== RUN   TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/empty_format\n"}
{"Time":"2025-10-04T21:53:59.110929032+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/empty_format","Output":"    camera_edge_cases_test.go:283: \n"}
{"Time":"2025-10-04T21:53:59.110941107+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/empty_format","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/camera/camera_edge_cases_test.go:283\n"}
{"Time":"2025-10-04T21:53:59.110952637+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/empty_format","Output":"        \tError:      \t\"--stream-mmap --stream-to /tmp/test4.jpg --stream-count 1 --set-fmt-video width=640,height=480\" does not contain \"/dev/video0\"\n"}
{"Time":"2025-10-04T21:53:59.111153575+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/empty_format","Output":"        \tTest:       \tTestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/empty_format\n"}
{"Time":"2025-10-04T21:53:59.111168684+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/empty_format","Output":"        \tMessages:   \tArgs should contain device path\n"}
{"Time":"2025-10-04T21:53:59.111183903+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/empty_format","Output":"--- FAIL: TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/empty_format (0.00s)\n"}
{"Time":"2025-10-04T21:53:59.111198287+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/empty_format","Elapsed":0}
{"Time":"2025-10-04T21:53:59.111410229+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/empty_output"}
{"Time":"2025-10-04T21:53:59.111436737+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/empty_output","Output":"=== RUN   TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/empty_output\n"}
{"Time":"2025-10-04T21:53:59.111450569+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/empty_output","Output":"    camera_edge_cases_test.go:283: \n"}
{"Time":"2025-10-04T21:53:59.111462378+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/empty_output","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/camera/camera_edge_cases_test.go:283\n"}
{"Time":"2025-10-04T21:53:59.111687689+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/empty_output","Output":"        \tError:      \t\"--stream-mmap --stream-to  --stream-count 1 --set-fmt-video width=640,height=480\" does not contain \"/dev/video0\"\n"}
{"Time":"2025-10-04T21:53:59.111703111+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/empty_output","Output":"        \tTest:       \tTestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/empty_output\n"}
{"Time":"2025-10-04T21:53:59.111904634+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/empty_output","Output":"        \tMessages:   \tArgs should contain device path\n"}
{"Time":"2025-10-04T21:53:59.111936827+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/empty_output","Output":"--- FAIL: TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/empty_output (0.00s)\n"}
{"Time":"2025-10-04T21:53:59.111952058+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/empty_output","Elapsed":0}
{"Time":"2025-10-04T21:53:59.112151526+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/empty_device"}
{"Time":"2025-10-04T21:53:59.11217707+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/empty_device","Output":"=== RUN   TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/empty_device\n"}
{"Time":"2025-10-04T21:53:59.11219331+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/empty_device","Output":"--- PASS: TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/empty_device (0.00s)\n"}
{"Time":"2025-10-04T21:53:59.112206196+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values/empty_device","Elapsed":0}
{"Time":"2025-10-04T21:53:59.112422655+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Output":"    camera_edge_cases_test.go:288: ✅ Zero and negative values boundary conditions validated\n"}
{"Time":"2025-10-04T21:53:59.112437625+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:59.112448927+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:59.112659791+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:59.11302277+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:53:59.113050598+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:59.113065717+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:53:59.113076683+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:53:59.113087491+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:53:59.113097708+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:53:59.212326388+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Output":"--- FAIL: TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values (0.20s)\n"}
{"Time":"2025-10-04T21:53:59.212641314+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/zero_negative_values","Elapsed":0.2}
{"Time":"2025-10-04T21:53:59.212678652+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values"}
{"Time":"2025-10-04T21:53:59.212694494+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Output":"=== RUN   TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values\n"}
{"Time":"2025-10-04T21:53:59.212728469+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:53:59.212742462+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:53:59.212757178+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:53:59.212809804+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:59.212825143+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:53:59.212836246+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:53:59.215275899+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:59.215358542+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:53:59.21537609+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:53:59.215387988+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:53:59.215399011+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:53:59.215424478+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:53:59.215435867+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:53:59.21544926+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:53:59.215462522+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:53:59.215475117+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:53:59.242284278+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Output":"time=\"2025-10-04 21:53:59\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:53:59.242372789+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:53:59.242390484+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:53:59.242402254+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:53:59.242413409+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:53:59.242427527+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:53:59.2424391+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:53:59.316587624+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:53:59.31668473+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Output":"    camera_edge_cases_test.go:312: ✅ Empty and null values boundary conditions validated\n"}
{"Time":"2025-10-04T21:53:59.316701955+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:59.316714489+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:59.316725928+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:59.316735881+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:53:59.316768866+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:59.316784239+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:53:59.31679442+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:53:59.316806376+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:53:59.316816549+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:53:59.416275256+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Output":"--- PASS: TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values (0.20s)\n"}
{"Time":"2025-10-04T21:53:59.416370285+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/empty_null_values","Elapsed":0.2}
{"Time":"2025-10-04T21:53:59.416398221+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings"}
{"Time":"2025-10-04T21:53:59.416409818+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Output":"=== RUN   TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings\n"}
{"Time":"2025-10-04T21:53:59.416425314+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:53:59.416439415+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:53:59.416455322+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:53:59.416581916+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:59.416626367+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:53:59.416649145+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:53:59.416693741+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:59.41671338+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:53:59.416729962+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:53:59.416742809+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:53:59.416765378+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:53:59.416778387+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:53:59.416791806+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:53:59.416807835+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:53:59.416979032+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:53:59.417003118+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:53:59.429265373+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Output":"time=\"2025-10-04 21:53:59\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:53:59.429370756+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:53:59.429389435+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:53:59.429407254+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:53:59.429416678+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:53:59.429425385+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:53:59.429435273+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:53:59.517385986+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:53:59.517485639+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Output":"    camera_edge_cases_test.go:336: ✅ Very long strings boundary conditions validated\n"}
{"Time":"2025-10-04T21:53:59.51750245+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:59.517512436+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:59.517521762+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:59.517530523+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:53:59.517545406+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:59.517591174+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:53:59.517632888+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:53:59.517651515+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:53:59.517666341+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:53:59.61861535+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Output":"--- PASS: TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings (0.20s)\n"}
{"Time":"2025-10-04T21:53:59.618693768+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/very_long_strings","Elapsed":0.2}
{"Time":"2025-10-04T21:53:59.618717665+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters"}
{"Time":"2025-10-04T21:53:59.618727908+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Output":"=== RUN   TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters\n"}
{"Time":"2025-10-04T21:53:59.618811401+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:53:59.618827879+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:53:59.618840978+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:53:59.618927317+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:59.618947919+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:53:59.618968829+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:53:59.619088622+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:59.619109216+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:53:59.619125132+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:53:59.619136197+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:53:59.619146074+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:53:59.619157845+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:53:59.6191695+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:53:59.619183802+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:53:59.619386414+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:53:59.619424254+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:53:59.632071966+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Output":"time=\"2025-10-04 21:53:59\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:53:59.632141585+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:53:59.632174977+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:53:59.632186679+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:53:59.632196727+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:53:59.632238907+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:53:59.632251268+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:53:59.720217038+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:53:59.720294073+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Output":"    camera_edge_cases_test.go:359: ✅ Special characters boundary conditions validated\n"}
{"Time":"2025-10-04T21:53:59.720308276+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:59.720321179+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:59.720331497+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:59.720343158+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:53:59.720515948+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:59.720578032+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:53:59.720608818+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:53:59.720627759+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:53:59.720639453+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:53:59.821019393+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Output":"--- PASS: TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters (0.20s)\n"}
{"Time":"2025-10-04T21:53:59.821100379+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions/special_characters","Elapsed":0.2}
{"Time":"2025-10-04T21:53:59.821125582+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions","Output":"--- FAIL: TestCameraMonitor_EdgeCases_BoundaryConditions (0.81s)\n"}
{"Time":"2025-10-04T21:53:59.821140022+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_BoundaryConditions","Elapsed":0.81}
{"Time":"2025-10-04T21:53:59.821160787+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges"}
{"Time":"2025-10-04T21:53:59.821173292+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges","Output":"=== RUN   TestCameraMonitor_EdgeCases_ConfigurationChanges\n"}
{"Time":"2025-10-04T21:53:59.821185624+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation"}
{"Time":"2025-10-04T21:53:59.821195133+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Output":"=== RUN   TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation\n"}
{"Time":"2025-10-04T21:53:59.821205727+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:53:59.821254421+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:53:59.821267999+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:53:59.821304765+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:59.821325321+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:53:59.821345441+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:53:59.821444383+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:59.821474165+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:53:59.821497489+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:53:59.821514917+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:53:59.821530325+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:53:59.821550824+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:53:59.821566998+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:53:59.821586333+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:53:59.821639947+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:53:59.821810519+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:53:59.834174775+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Output":"time=\"2025-10-04 21:53:59\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:53:59.834272246+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:53:59.83429048+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:53:59.834308752+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:53:59.834322672+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:53:59.834332099+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:53:59.834341159+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:53:59.922304261+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:53:59.922399307+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Output":"    camera_edge_cases_test.go:397: ✅ Configuration changes during operation validated\n"}
{"Time":"2025-10-04T21:53:59.922420182+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:53:59.92243197+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:59.922442951+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:53:59.922475601+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:53:59.922610361+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:53:59.92264104+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:53:59.922664353+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:53:59.922675424+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:53:59.922684816+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Output":"time=\"2025-10-04 21:53:59\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:00.023056983+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Output":"--- PASS: TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation (0.20s)\n"}
{"Time":"2025-10-04T21:54:00.023136654+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/configuration_changes_during_operation","Elapsed":0.2}
{"Time":"2025-10-04T21:54:00.023162612+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes"}
{"Time":"2025-10-04T21:54:00.023172392+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Output":"=== RUN   TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes\n"}
{"Time":"2025-10-04T21:54:00.023184756+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:00.023197036+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:00.023247906+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:00.023306637+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:00.023325971+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:00.023364813+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:00.023492766+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:00.023565427+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:00.023579336+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:00.023589071+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:00.023610389+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:00.023620635+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:00.023629913+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:00.023640809+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:00.023661482+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:00.023780386+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:00.035115995+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Output":"time=\"2025-10-04 21:54:00\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:00.03518906+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:00.035202456+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:00.035233642+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:00.035257134+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:00.035267039+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:00.03527771+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:00.124237242+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:00.124329141+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Output":"    camera_edge_cases_test.go:418: ✅ Multiple configuration changes validated\n"}
{"Time":"2025-10-04T21:54:00.124353554+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:00.124364173+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:00.12439548+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:00.124539022+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:00.124689495+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:00.124825125+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:00.124847603+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:00.124859147+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:00.124869243+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:00.225150391+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Output":"--- PASS: TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes (0.20s)\n"}
{"Time":"2025-10-04T21:54:00.225254067+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges/multiple_configuration_changes","Elapsed":0.2}
{"Time":"2025-10-04T21:54:00.225281204+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges","Output":"--- PASS: TestCameraMonitor_EdgeCases_ConfigurationChanges (0.40s)\n"}
{"Time":"2025-10-04T21:54:00.225293865+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ConfigurationChanges","Elapsed":0.4}
{"Time":"2025-10-04T21:54:00.225310548+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery"}
{"Time":"2025-10-04T21:54:00.225322481+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery","Output":"=== RUN   TestCameraMonitor_EdgeCases_ErrorRecovery\n"}
{"Time":"2025-10-04T21:54:00.22533408+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios"}
{"Time":"2025-10-04T21:54:00.225382092+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"=== RUN   TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios\n"}
{"Time":"2025-10-04T21:54:00.225393736+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:00.225408784+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:00.225420595+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:00.225429974+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:00.225438968+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:00.22545+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:00.225460085+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:00.225907042+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:00.225954067+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:00.225968419+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:00.225990245+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:00.226000124+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:00.226025272+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:00.226037316+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:00.226048385+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:00.226058429+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:00.226069537+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:00.238867064+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"time=\"2025-10-04 21:54:00\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:00.238947618+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:00.23896285+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:00.238973396+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:00.238983392+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:00.238994267+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:00.239010098+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:00.325909994+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:00.32603857+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"time=\"2025-10-04 21:54:00\" level=error msg=\"monitor_start_return_err - monitor is already running\"\n"}
{"Time":"2025-10-04T21:54:00.326058209+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"    camera_edge_cases_test.go:447: ✅ Error recovery scenarios validated\n"}
{"Time":"2025-10-04T21:54:00.326070462+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:00.326080579+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:00.326094796+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:00.326106856+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:00.326322462+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:00.326352495+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:00.32637013+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:00.326384753+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:00.32639528+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:00.426689772+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Output":"--- PASS: TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios (0.20s)\n"}
{"Time":"2025-10-04T21:54:00.426777116+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/error_recovery_scenarios","Elapsed":0.2}
{"Time":"2025-10-04T21:54:00.426842566+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation"}
{"Time":"2025-10-04T21:54:00.426860531+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Output":"=== RUN   TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation\n"}
{"Time":"2025-10-04T21:54:00.426873381+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:00.426885898+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:00.426898464+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:00.426913832+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:00.426926762+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:00.427000571+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:00.427186081+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:00.427224055+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:00.427245767+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:00.427260666+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:00.427272895+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:00.427300099+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:00.42731394+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:00.427327433+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:00.42734237+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:00.427483652+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:00.439109102+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Output":"time=\"2025-10-04 21:54:00\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:00.439192845+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:00.439254524+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:00.439274128+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:00.439289252+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:00.439302728+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:00.439314256+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:00.528236577+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:00.528365815+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Output":"    camera_edge_cases_test.go:474: ✅ Graceful degradation validated\n"}
{"Time":"2025-10-04T21:54:00.528393484+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:00.528409806+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:00.528424736+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:00.528439001+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:00.52861591+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:00.528649698+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:00.5286696+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:00.52869308+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:00.528711373+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:00.629586651+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Output":"--- PASS: TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation (0.20s)\n"}
{"Time":"2025-10-04T21:54:00.629677545+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery/graceful_degradation","Elapsed":0.2}
{"Time":"2025-10-04T21:54:00.62970417+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery","Output":"--- PASS: TestCameraMonitor_EdgeCases_ErrorRecovery (0.40s)\n"}
{"Time":"2025-10-04T21:54:00.629720243+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_ErrorRecovery","Elapsed":0.4}
{"Time":"2025-10-04T21:54:00.629757345+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive"}
{"Time":"2025-10-04T21:54:00.629771863+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive","Output":"=== RUN   TestCameraMonitor_ErrorHandling_Comprehensive\n"}
{"Time":"2025-10-04T21:54:00.62978999+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:00.629805114+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:00.629822036+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:00.629923584+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive/invalid_configuration_handling"}
{"Time":"2025-10-04T21:54:00.629969722+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive/invalid_configuration_handling","Output":"=== RUN   TestCameraMonitor_ErrorHandling_Comprehensive/invalid_configuration_handling\n"}
{"Time":"2025-10-04T21:54:00.629999456+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive/invalid_configuration_handling","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:00.63002084+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive/invalid_configuration_handling","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:00.630064977+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive/invalid_configuration_handling","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:00.630238883+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive/invalid_configuration_handling","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:00.630282212+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive/invalid_configuration_handling","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:00.63030523+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive/invalid_configuration_handling","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:00.630328106+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive/invalid_configuration_handling","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:00.63035817+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive/invalid_configuration_handling","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:00.63037397+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive/invalid_configuration_handling","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:00.630394314+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:00.630419254+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:00.630439486+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:00.630639704+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:00.643084442+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:00.64317397+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:00.643193237+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:00.643223447+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:00.643245291+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:00.643255711+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:00.643263054+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:00.731292222+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:00.731383308+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive","Output":"    camera_error_handling_test.go:35: ✅ Invalid configuration handling validated\n"}
{"Time":"2025-10-04T21:54:00.731412314+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive/invalid_configuration_handling","Output":"--- PASS: TestCameraMonitor_ErrorHandling_Comprehensive/invalid_configuration_handling (0.10s)\n"}
{"Time":"2025-10-04T21:54:00.731427727+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive/invalid_configuration_handling","Elapsed":0.1}
{"Time":"2025-10-04T21:54:00.731446359+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive/resource_exhaustion_scenarios"}
{"Time":"2025-10-04T21:54:00.731457534+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive/resource_exhaustion_scenarios","Output":"=== RUN   TestCameraMonitor_ErrorHandling_Comprehensive/resource_exhaustion_scenarios\n"}
{"Time":"2025-10-04T21:54:00.731476304+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive","Output":"    camera_error_handling_test.go:42: ✅ Monitor already running - resource exhaustion scenarios handled gracefully\n"}
{"Time":"2025-10-04T21:54:00.731491636+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive/resource_exhaustion_scenarios","Output":"--- PASS: TestCameraMonitor_ErrorHandling_Comprehensive/resource_exhaustion_scenarios (0.00s)\n"}
{"Time":"2025-10-04T21:54:00.731504596+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive/resource_exhaustion_scenarios","Elapsed":0}
{"Time":"2025-10-04T21:54:00.731517259+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive/context_cancellation_handling"}
{"Time":"2025-10-04T21:54:00.731528064+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive/context_cancellation_handling","Output":"=== RUN   TestCameraMonitor_ErrorHandling_Comprehensive/context_cancellation_handling\n"}
{"Time":"2025-10-04T21:54:00.73155158+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive","Output":"    camera_error_handling_test.go:68: ✅ Monitor already running - context cancellation handling validated\n"}
{"Time":"2025-10-04T21:54:00.731568461+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive/context_cancellation_handling","Output":"--- PASS: TestCameraMonitor_ErrorHandling_Comprehensive/context_cancellation_handling (0.00s)\n"}
{"Time":"2025-10-04T21:54:00.73158621+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive/context_cancellation_handling","Elapsed":0}
{"Time":"2025-10-04T21:54:00.73162776+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive/event_notifier_error_handling"}
{"Time":"2025-10-04T21:54:00.731641033+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive/event_notifier_error_handling","Output":"=== RUN   TestCameraMonitor_ErrorHandling_Comprehensive/event_notifier_error_handling\n"}
{"Time":"2025-10-04T21:54:00.731652061+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive","Output":"    camera_error_handling_test.go:89: ✅ Monitor already running - event notifier error handling validated\n"}
{"Time":"2025-10-04T21:54:00.731663483+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive/event_notifier_error_handling","Output":"--- PASS: TestCameraMonitor_ErrorHandling_Comprehensive/event_notifier_error_handling (0.00s)\n"}
{"Time":"2025-10-04T21:54:00.731673567+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive/event_notifier_error_handling","Elapsed":0}
{"Time":"2025-10-04T21:54:00.731691238+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive/multiple_rapid_notifier_changes"}
{"Time":"2025-10-04T21:54:00.731702431+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive/multiple_rapid_notifier_changes","Output":"=== RUN   TestCameraMonitor_ErrorHandling_Comprehensive/multiple_rapid_notifier_changes\n"}
{"Time":"2025-10-04T21:54:00.731714224+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive","Output":"    camera_error_handling_test.go:118: ✅ Monitor already running - multiple rapid notifier changes validated\n"}
{"Time":"2025-10-04T21:54:00.731726631+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive/multiple_rapid_notifier_changes","Output":"--- PASS: TestCameraMonitor_ErrorHandling_Comprehensive/multiple_rapid_notifier_changes (0.00s)\n"}
{"Time":"2025-10-04T21:54:00.731737836+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive/multiple_rapid_notifier_changes","Elapsed":0}
{"Time":"2025-10-04T21:54:00.7317496+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive/error_recovery_after_invalid_operations"}
{"Time":"2025-10-04T21:54:00.731759605+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive/error_recovery_after_invalid_operations","Output":"=== RUN   TestCameraMonitor_ErrorHandling_Comprehensive/error_recovery_after_invalid_operations\n"}
{"Time":"2025-10-04T21:54:00.731775178+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive","Output":"    camera_error_handling_test.go:142: ✅ Monitor already running - error recovery after invalid operations validated\n"}
{"Time":"2025-10-04T21:54:00.731790381+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive/error_recovery_after_invalid_operations","Output":"--- PASS: TestCameraMonitor_ErrorHandling_Comprehensive/error_recovery_after_invalid_operations (0.00s)\n"}
{"Time":"2025-10-04T21:54:00.731811895+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive/error_recovery_after_invalid_operations","Elapsed":0}
{"Time":"2025-10-04T21:54:00.731825736+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:00.731842344+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:00.731855191+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:00.731866862+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:00.731882463+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:00.73189495+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:00.731908949+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:00.731920885+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:00.731938634+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:00.832607793+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive","Output":"--- PASS: TestCameraMonitor_ErrorHandling_Comprehensive (0.20s)\n"}
{"Time":"2025-10-04T21:54:00.832698311+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_Comprehensive","Elapsed":0.2}
{"Time":"2025-10-04T21:54:00.832727318+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive"}
{"Time":"2025-10-04T21:54:00.832739826+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"=== RUN   TestCameraMonitor_EdgeCases_Comprehensive\n"}
{"Time":"2025-10-04T21:54:00.832750976+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:00.832787938+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:00.832805152+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:00.832818819+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/rapid_start_stop_cycles"}
{"Time":"2025-10-04T21:54:00.832828879+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/rapid_start_stop_cycles","Output":"=== RUN   TestCameraMonitor_EdgeCases_Comprehensive/rapid_start_stop_cycles\n"}
{"Time":"2025-10-04T21:54:00.832850787+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:00.832866706+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:00.832938049+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:00.833029009+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:00.833054849+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:00.833068773+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:00.833080773+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:00.833093835+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:00.833108497+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:00.833134954+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:00.83315234+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:00.83317187+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:00.833312826+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:00.844139048+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:00.844245465+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:00.844266987+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:00.844277503+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:00.844286692+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:00.844301805+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:00.844311665+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:00.847516954+04:00","Action":"start","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket"}
{"Time":"2025-10-04T21:54:00.847604838+04:00","Action":"start","Package":"github.com/camerarecorder/mediamtx-camera-service-go/tests/integration"}
{"Time":"2025-10-04T21:54:00.847739738+04:00","Action":"start","Package":"github.com/camerarecorder/mediamtx-camera-service-go/tests/utils"}
{"Time":"2025-10-04T21:54:00.851702839+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/tests/integration","Output":"\tgithub.com/camerarecorder/mediamtx-camera-service-go/tests/integration\t\tcoverage: 0.0% of statements\n"}
{"Time":"2025-10-04T21:54:00.851925988+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/tests/utils","Output":"\tgithub.com/camerarecorder/mediamtx-camera-service-go/tests/utils\t\tcoverage: 0.0% of statements\n"}
{"Time":"2025-10-04T21:54:00.854346364+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ProgressiveReadiness_Integration"}
{"Time":"2025-10-04T21:54:00.854427349+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ProgressiveReadiness_Integration","Output":"=== RUN   TestWebSocket_ProgressiveReadiness_Integration\n"}
{"Time":"2025-10-04T21:54:00.856129492+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/tests/integration","Elapsed":0.009}
{"Time":"2025-10-04T21:54:00.856377476+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/tests/utils","Elapsed":0.009}
{"Time":"2025-10-04T21:54:00.856441817+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ProgressiveReadiness_Integration","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:00.860516724+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ProgressiveReadiness_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:00.860582804+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ProgressiveReadiness_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:00.860606959+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ProgressiveReadiness_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:00.860620044+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ProgressiveReadiness_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:00.860634876+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ProgressiveReadiness_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:00.860644676+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ProgressiveReadiness_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/integration_test.go:37\n"}
{"Time":"2025-10-04T21:54:00.860654122+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ProgressiveReadiness_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:00.86066452+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ProgressiveReadiness_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:00.86069764+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ProgressiveReadiness_Integration","Output":"        \tTest:       \tTestWebSocket_ProgressiveReadiness_Integration\n"}
{"Time":"2025-10-04T21:54:00.860715835+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ProgressiveReadiness_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:00.860741277+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ProgressiveReadiness_Integration","Output":"--- FAIL: TestWebSocket_ProgressiveReadiness_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:00.860763704+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ProgressiveReadiness_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:00.860787659+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Authentication_Integration"}
{"Time":"2025-10-04T21:54:00.860801784+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Authentication_Integration","Output":"=== RUN   TestWebSocket_Authentication_Integration\n"}
{"Time":"2025-10-04T21:54:00.861580512+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Authentication_Integration","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:00.86511894+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Authentication_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:00.865173539+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Authentication_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:00.865188355+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Authentication_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:00.865199786+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Authentication_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:00.865227495+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Authentication_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:00.865241869+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Authentication_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/integration_test.go:49\n"}
{"Time":"2025-10-04T21:54:00.865251157+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Authentication_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:00.865281004+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Authentication_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:00.86529542+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Authentication_Integration","Output":"        \tTest:       \tTestWebSocket_Authentication_Integration\n"}
{"Time":"2025-10-04T21:54:00.865306398+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Authentication_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:00.865329493+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Authentication_Integration","Output":"--- FAIL: TestWebSocket_Authentication_Integration (0.00s)\n"}
{"Time":"2025-10-04T21:54:00.86534876+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Authentication_Integration","Elapsed":0}
{"Time":"2025-10-04T21:54:00.865365062+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Integration"}
{"Time":"2025-10-04T21:54:00.86537577+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Integration","Output":"=== RUN   TestWebSocket_CameraManagement_Integration\n"}
{"Time":"2025-10-04T21:54:00.866105653+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Integration","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:00.869475825+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:00.869531192+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:00.869548142+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:00.869560143+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:00.869571945+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:00.86959682+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/integration_test.go:61\n"}
{"Time":"2025-10-04T21:54:00.869609225+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:00.869619708+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:00.869630667+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Integration","Output":"        \tTest:       \tTestWebSocket_CameraManagement_Integration\n"}
{"Time":"2025-10-04T21:54:00.869642491+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:00.869659805+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Integration","Output":"--- FAIL: TestWebSocket_CameraManagement_Integration (0.00s)\n"}
{"Time":"2025-10-04T21:54:00.869676867+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Integration","Elapsed":0}
{"Time":"2025-10-04T21:54:00.869691023+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Recording_Integration"}
{"Time":"2025-10-04T21:54:00.869704974+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Recording_Integration","Output":"=== RUN   TestWebSocket_Recording_Integration\n"}
{"Time":"2025-10-04T21:54:00.870536915+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Recording_Integration","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:00.873800258+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Recording_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:00.873849545+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Recording_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:00.873867685+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Recording_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:00.873894704+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Recording_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:00.873909305+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Recording_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:00.873920723+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Recording_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/integration_test.go:73\n"}
{"Time":"2025-10-04T21:54:00.873930075+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Recording_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:00.873941986+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Recording_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:00.873953964+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Recording_Integration","Output":"        \tTest:       \tTestWebSocket_Recording_Integration\n"}
{"Time":"2025-10-04T21:54:00.873964785+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Recording_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:00.873981284+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Recording_Integration","Output":"--- FAIL: TestWebSocket_Recording_Integration (0.00s)\n"}
{"Time":"2025-10-04T21:54:00.874000292+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Recording_Integration","Elapsed":0}
{"Time":"2025-10-04T21:54:00.874014162+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Snapshot_Integration"}
{"Time":"2025-10-04T21:54:00.874023328+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Snapshot_Integration","Output":"=== RUN   TestWebSocket_Snapshot_Integration\n"}
{"Time":"2025-10-04T21:54:00.874891886+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Snapshot_Integration","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:00.879335562+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Snapshot_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:00.879400515+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Snapshot_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:00.879433367+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Snapshot_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:00.879447567+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Snapshot_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:00.87945817+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Snapshot_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:00.87946726+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Snapshot_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/integration_test.go:85\n"}
{"Time":"2025-10-04T21:54:00.879477176+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Snapshot_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:00.879488316+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Snapshot_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:00.879500252+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Snapshot_Integration","Output":"        \tTest:       \tTestWebSocket_Snapshot_Integration\n"}
{"Time":"2025-10-04T21:54:00.879510998+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Snapshot_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:00.8795314+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Snapshot_Integration","Output":"--- FAIL: TestWebSocket_Snapshot_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:00.879563069+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Snapshot_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:00.879583496+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorRecovery_Integration"}
{"Time":"2025-10-04T21:54:00.879599036+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorRecovery_Integration","Output":"=== RUN   TestWebSocket_ErrorRecovery_Integration\n"}
{"Time":"2025-10-04T21:54:00.880346618+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorRecovery_Integration","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:00.883537945+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorRecovery_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:00.883581231+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorRecovery_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:00.883595671+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorRecovery_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:00.883607923+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorRecovery_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:00.883632427+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorRecovery_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:00.883644592+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorRecovery_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/integration_test.go:97\n"}
{"Time":"2025-10-04T21:54:00.883653972+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorRecovery_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:00.883664538+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorRecovery_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:00.883676453+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorRecovery_Integration","Output":"        \tTest:       \tTestWebSocket_ErrorRecovery_Integration\n"}
{"Time":"2025-10-04T21:54:00.883691903+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorRecovery_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:00.883710655+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorRecovery_Integration","Output":"--- FAIL: TestWebSocket_ErrorRecovery_Integration (0.00s)\n"}
{"Time":"2025-10-04T21:54:00.883728529+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorRecovery_Integration","Elapsed":0}
{"Time":"2025-10-04T21:54:00.883757912+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Performance_Integration"}
{"Time":"2025-10-04T21:54:00.883774793+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Performance_Integration","Output":"=== RUN   TestWebSocket_Performance_Integration\n"}
{"Time":"2025-10-04T21:54:00.884487323+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Performance_Integration","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:00.887747842+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Performance_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:00.887799289+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Performance_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:00.887816211+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Performance_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:00.887827342+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Performance_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:00.887839076+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Performance_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:00.887850679+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Performance_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/integration_test.go:109\n"}
{"Time":"2025-10-04T21:54:00.887860386+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Performance_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:00.887871179+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Performance_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:00.887881385+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Performance_Integration","Output":"        \tTest:       \tTestWebSocket_Performance_Integration\n"}
{"Time":"2025-10-04T21:54:00.887890965+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Performance_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:00.887943446+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Performance_Integration","Output":"--- FAIL: TestWebSocket_Performance_Integration (0.00s)\n"}
{"Time":"2025-10-04T21:54:00.887972219+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Performance_Integration","Elapsed":0}
{"Time":"2025-10-04T21:54:00.887989414+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CompleteWorkflow_Integration"}
{"Time":"2025-10-04T21:54:00.88799952+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CompleteWorkflow_Integration","Output":"=== RUN   TestWebSocket_CompleteWorkflow_Integration\n"}
{"Time":"2025-10-04T21:54:00.888744223+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CompleteWorkflow_Integration","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:00.891715466+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CompleteWorkflow_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:00.891754992+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CompleteWorkflow_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:00.891770528+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CompleteWorkflow_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:00.891781791+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CompleteWorkflow_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:00.891794906+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CompleteWorkflow_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:00.891805701+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CompleteWorkflow_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/integration_test.go:121\n"}
{"Time":"2025-10-04T21:54:00.891815273+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CompleteWorkflow_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:00.891826025+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CompleteWorkflow_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:00.891851377+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CompleteWorkflow_Integration","Output":"        \tTest:       \tTestWebSocket_CompleteWorkflow_Integration\n"}
{"Time":"2025-10-04T21:54:00.891869941+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CompleteWorkflow_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:00.89188741+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CompleteWorkflow_Integration","Output":"--- FAIL: TestWebSocket_CompleteWorkflow_Integration (0.00s)\n"}
{"Time":"2025-10-04T21:54:00.891905854+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CompleteWorkflow_Integration","Elapsed":0}
{"Time":"2025-10-04T21:54:00.891921183+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConcurrentClients_Integration"}
{"Time":"2025-10-04T21:54:00.891931482+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConcurrentClients_Integration","Output":"=== RUN   TestWebSocket_ConcurrentClients_Integration\n"}
{"Time":"2025-10-04T21:54:00.89264054+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConcurrentClients_Integration","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:00.895611669+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConcurrentClients_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:00.895650157+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConcurrentClients_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:00.895665348+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConcurrentClients_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:00.895677088+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConcurrentClients_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:00.895687671+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConcurrentClients_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:00.895699663+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConcurrentClients_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/integration_test.go:133\n"}
{"Time":"2025-10-04T21:54:00.895719075+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConcurrentClients_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:00.895745042+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConcurrentClients_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:00.895760308+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConcurrentClients_Integration","Output":"        \tTest:       \tTestWebSocket_ConcurrentClients_Integration\n"}
{"Time":"2025-10-04T21:54:00.895776576+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConcurrentClients_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:00.895793767+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConcurrentClients_Integration","Output":"--- FAIL: TestWebSocket_ConcurrentClients_Integration (0.00s)\n"}
{"Time":"2025-10-04T21:54:00.895810673+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConcurrentClients_Integration","Elapsed":0}
{"Time":"2025-10-04T21:54:00.895825219+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_SessionManagement_Integration"}
{"Time":"2025-10-04T21:54:00.895835948+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_SessionManagement_Integration","Output":"=== RUN   TestWebSocket_SessionManagement_Integration\n"}
{"Time":"2025-10-04T21:54:00.896593151+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_SessionManagement_Integration","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:00.899543492+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_SessionManagement_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:00.899589159+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_SessionManagement_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:00.899605935+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_SessionManagement_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:00.899617888+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_SessionManagement_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:00.899628751+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_SessionManagement_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:00.899651824+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_SessionManagement_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/integration_test.go:191\n"}
{"Time":"2025-10-04T21:54:00.89966462+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_SessionManagement_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:00.899676542+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_SessionManagement_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:00.899687748+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_SessionManagement_Integration","Output":"        \tTest:       \tTestWebSocket_SessionManagement_Integration\n"}
{"Time":"2025-10-04T21:54:00.899697128+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_SessionManagement_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:00.899713728+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_SessionManagement_Integration","Output":"--- FAIL: TestWebSocket_SessionManagement_Integration (0.00s)\n"}
{"Time":"2025-10-04T21:54:00.899737174+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_SessionManagement_Integration","Elapsed":0}
{"Time":"2025-10-04T21:54:00.899751644+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_OpenRPCCompliance_Integration"}
{"Time":"2025-10-04T21:54:00.899762034+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_OpenRPCCompliance_Integration","Output":"=== RUN   TestWebSocket_OpenRPCCompliance_Integration\n"}
{"Time":"2025-10-04T21:54:00.900455848+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_OpenRPCCompliance_Integration","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:00.90646646+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_OpenRPCCompliance_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:00.90656414+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_OpenRPCCompliance_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:00.906581993+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_OpenRPCCompliance_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:00.906607982+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_OpenRPCCompliance_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:00.906615575+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_OpenRPCCompliance_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:00.906622536+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_OpenRPCCompliance_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/integration_test.go:226\n"}
{"Time":"2025-10-04T21:54:00.906634249+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_OpenRPCCompliance_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:00.906646231+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_OpenRPCCompliance_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:00.906658954+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_OpenRPCCompliance_Integration","Output":"        \tTest:       \tTestWebSocket_OpenRPCCompliance_Integration\n"}
{"Time":"2025-10-04T21:54:00.906666239+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_OpenRPCCompliance_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:00.906682609+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_OpenRPCCompliance_Integration","Output":"--- FAIL: TestWebSocket_OpenRPCCompliance_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:00.906689706+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_OpenRPCCompliance_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:00.906705264+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ProgressiveReadiness_Performance"}
{"Time":"2025-10-04T21:54:00.906716837+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ProgressiveReadiness_Performance","Output":"=== RUN   TestWebSocket_ProgressiveReadiness_Performance\n"}
{"Time":"2025-10-04T21:54:00.908729748+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ProgressiveReadiness_Performance","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:00.915573342+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ProgressiveReadiness_Performance","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:00.915783097+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ProgressiveReadiness_Performance","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:00.915798159+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ProgressiveReadiness_Performance","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:00.915805607+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ProgressiveReadiness_Performance","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/integration_test.go:267\n"}
{"Time":"2025-10-04T21:54:00.915812728+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ProgressiveReadiness_Performance","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:00.915819962+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ProgressiveReadiness_Performance","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:00.915834833+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ProgressiveReadiness_Performance","Output":"        \tTest:       \tTestWebSocket_ProgressiveReadiness_Performance\n"}
{"Time":"2025-10-04T21:54:00.915867941+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ProgressiveReadiness_Performance","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:00.91588473+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ProgressiveReadiness_Performance","Output":"--- FAIL: TestWebSocket_ProgressiveReadiness_Performance (0.01s)\n"}
{"Time":"2025-10-04T21:54:00.915892333+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ProgressiveReadiness_Performance","Elapsed":0.01}
{"Time":"2025-10-04T21:54:00.915902825+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAPICompliance_AllMethods"}
{"Time":"2025-10-04T21:54:00.915908604+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAPICompliance_AllMethods","Output":"=== RUN   TestAPICompliance_AllMethods\n"}
{"Time":"2025-10-04T21:54:00.915923429+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAPICompliance_AllMethods","Output":"    test_api_compliance_progressive_test.go:27: Testing API compliance for all 37 methods with existing test infrastructure, timeout: 30s\n"}
{"Time":"2025-10-04T21:54:00.916727254+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAPICompliance_AllMethods","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:00.923197237+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAPICompliance_AllMethods","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:00.923296029+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAPICompliance_AllMethods","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:00.923326169+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAPICompliance_AllMethods","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:00.923340809+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAPICompliance_AllMethods","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:00.923351918+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAPICompliance_AllMethods","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_api_compliance_progressive_test.go:30\n"}
{"Time":"2025-10-04T21:54:00.923360575+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAPICompliance_AllMethods","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:00.923369936+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAPICompliance_AllMethods","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:00.923379604+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAPICompliance_AllMethods","Output":"        \tTest:       \tTestAPICompliance_AllMethods\n"}
{"Time":"2025-10-04T21:54:00.923393058+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAPICompliance_AllMethods","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:00.923409256+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAPICompliance_AllMethods","Output":"--- FAIL: TestAPICompliance_AllMethods (0.01s)\n"}
{"Time":"2025-10-04T21:54:00.923425787+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAPICompliance_AllMethods","Elapsed":0.01}
{"Time":"2025-10-04T21:54:00.923440219+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Complete_Integration"}
{"Time":"2025-10-04T21:54:00.923448069+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Complete_Integration","Output":"=== RUN   TestWebSocket_CameraManagement_Complete_Integration\n"}
{"Time":"2025-10-04T21:54:00.925271308+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Complete_Integration","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:00.932043034+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Complete_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:00.932109678+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Complete_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:00.932138897+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Complete_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:00.932168335+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Complete_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:00.932182801+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Complete_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:00.932192604+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Complete_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_camera_management_integration_test.go:25\n"}
{"Time":"2025-10-04T21:54:00.932201837+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Complete_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:00.932227799+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Complete_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:00.932253365+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Complete_Integration","Output":"        \tTest:       \tTestWebSocket_CameraManagement_Complete_Integration\n"}
{"Time":"2025-10-04T21:54:00.932270879+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Complete_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:00.932288388+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Complete_Integration","Output":"--- FAIL: TestWebSocket_CameraManagement_Complete_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:00.932321121+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Complete_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:00.932345512+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraDiscovery_Integration"}
{"Time":"2025-10-04T21:54:00.932355311+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraDiscovery_Integration","Output":"=== RUN   TestWebSocket_CameraDiscovery_Integration\n"}
{"Time":"2025-10-04T21:54:00.933891248+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraDiscovery_Integration","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:00.934193367+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:00.939328202+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraDiscovery_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:00.939385611+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraDiscovery_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:00.939412813+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraDiscovery_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:00.939436593+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraDiscovery_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:00.939457207+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraDiscovery_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:00.93947019+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraDiscovery_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_camera_management_integration_test.go:39\n"}
{"Time":"2025-10-04T21:54:00.939481774+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraDiscovery_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:00.939493746+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraDiscovery_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:00.939523761+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraDiscovery_Integration","Output":"        \tTest:       \tTestWebSocket_CameraDiscovery_Integration\n"}
{"Time":"2025-10-04T21:54:00.93954304+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraDiscovery_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:00.939561716+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraDiscovery_Integration","Output":"--- FAIL: TestWebSocket_CameraDiscovery_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:00.939573529+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraDiscovery_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:00.939587912+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraStatus_Integration"}
{"Time":"2025-10-04T21:54:00.939607223+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraStatus_Integration","Output":"=== RUN   TestWebSocket_CameraStatus_Integration\n"}
{"Time":"2025-10-04T21:54:00.941050745+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraStatus_Integration","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:00.944450603+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:00.944557649+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:00.944577032+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:00.944591116+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:00.944745359+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:00.944944125+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:00.944970041+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:00.944998831+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:00.945011712+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:00.945021837+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"    camera_asserters_test.go:147: ✅ Monitor stopped successfully\n"}
{"Time":"2025-10-04T21:54:00.946307893+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraStatus_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:00.946343984+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraStatus_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:00.946358423+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraStatus_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:00.946369807+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraStatus_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:00.946380224+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraStatus_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:00.946390768+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraStatus_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_camera_management_integration_test.go:69\n"}
{"Time":"2025-10-04T21:54:00.94640134+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraStatus_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:00.94641295+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraStatus_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:00.946424225+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraStatus_Integration","Output":"        \tTest:       \tTestWebSocket_CameraStatus_Integration\n"}
{"Time":"2025-10-04T21:54:00.946445694+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraStatus_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:00.946469966+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraStatus_Integration","Output":"--- FAIL: TestWebSocket_CameraStatus_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:00.946486974+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraStatus_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:00.94650368+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraCapabilities_Integration"}
{"Time":"2025-10-04T21:54:00.946513758+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraCapabilities_Integration","Output":"=== RUN   TestWebSocket_CameraCapabilities_Integration\n"}
{"Time":"2025-10-04T21:54:00.94723456+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraCapabilities_Integration","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:00.953783493+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraCapabilities_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:00.953869457+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraCapabilities_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:00.953902844+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraCapabilities_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:00.953932179+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraCapabilities_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:00.953944944+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraCapabilities_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:00.953956612+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraCapabilities_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_camera_management_integration_test.go:100\n"}
{"Time":"2025-10-04T21:54:00.953967993+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraCapabilities_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:00.953979062+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraCapabilities_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:00.95400453+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraCapabilities_Integration","Output":"        \tTest:       \tTestWebSocket_CameraCapabilities_Integration\n"}
{"Time":"2025-10-04T21:54:00.954022061+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraCapabilities_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:00.954039567+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraCapabilities_Integration","Output":"--- FAIL: TestWebSocket_CameraCapabilities_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:00.954079819+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraCapabilities_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:00.954102749+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_DeviceMapping_Integration"}
{"Time":"2025-10-04T21:54:00.954114+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_DeviceMapping_Integration","Output":"=== RUN   TestWebSocket_DeviceMapping_Integration\n"}
{"Time":"2025-10-04T21:54:00.955244989+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:00.955297672+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:00.955334183+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:00.955483565+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:00.955596693+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:00.95580323+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:00.95584357+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:00.955868628+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:00.95591154+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:00.955944897+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:00.955969591+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:00.955992031+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:00.956029835+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:00.956054037+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:00.956085929+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:00.95611591+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:00.956140388+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:00.956162869+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:00.956183435+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:00.956239504+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_DeviceMapping_Integration","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:00.962839446+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_DeviceMapping_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:00.962906274+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_DeviceMapping_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:00.962961438+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_DeviceMapping_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:00.962995053+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_DeviceMapping_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:00.963019718+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_DeviceMapping_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:00.963052663+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_DeviceMapping_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_camera_management_integration_test.go:131\n"}
{"Time":"2025-10-04T21:54:00.963075415+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_DeviceMapping_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:00.96309967+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_DeviceMapping_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:00.963124795+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_DeviceMapping_Integration","Output":"        \tTest:       \tTestWebSocket_DeviceMapping_Integration\n"}
{"Time":"2025-10-04T21:54:00.963156787+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_DeviceMapping_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:00.963189999+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_DeviceMapping_Integration","Output":"--- FAIL: TestWebSocket_DeviceMapping_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:00.96324344+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_DeviceMapping_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:00.963276911+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Performance"}
{"Time":"2025-10-04T21:54:00.9633035+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Performance","Output":"=== RUN   TestWebSocket_CameraManagement_Performance\n"}
{"Time":"2025-10-04T21:54:00.964770125+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Performance","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:00.971365183+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Performance","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:00.971445307+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Performance","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:00.971479373+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Performance","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:00.971506871+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Performance","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:00.971533389+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Performance","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:00.971560938+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Performance","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_camera_management_integration_test.go:166\n"}
{"Time":"2025-10-04T21:54:00.971584096+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Performance","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:00.971611885+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Performance","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:00.971639889+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Performance","Output":"        \tTest:       \tTestWebSocket_CameraManagement_Performance\n"}
{"Time":"2025-10-04T21:54:00.97166579+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Performance","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:00.971708427+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Performance","Output":"--- FAIL: TestWebSocket_CameraManagement_Performance (0.01s)\n"}
{"Time":"2025-10-04T21:54:00.971756172+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_Performance","Elapsed":0.01}
{"Time":"2025-10-04T21:54:00.971812019+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_ErrorHandling"}
{"Time":"2025-10-04T21:54:00.971839138+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_ErrorHandling","Output":"=== RUN   TestWebSocket_CameraManagement_ErrorHandling\n"}
{"Time":"2025-10-04T21:54:00.973455598+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_ErrorHandling","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:00.980169027+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_ErrorHandling","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:00.980266763+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_ErrorHandling","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:00.980300312+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_ErrorHandling","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:00.980328607+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_ErrorHandling","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:00.980355915+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_ErrorHandling","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:00.980394682+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_ErrorHandling","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_camera_management_integration_test.go:198\n"}
{"Time":"2025-10-04T21:54:00.980419955+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_ErrorHandling","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:00.980446466+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_ErrorHandling","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:00.980473696+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_ErrorHandling","Output":"        \tTest:       \tTestWebSocket_CameraManagement_ErrorHandling\n"}
{"Time":"2025-10-04T21:54:00.980530924+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_ErrorHandling","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:00.980569928+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_ErrorHandling","Output":"--- FAIL: TestWebSocket_CameraManagement_ErrorHandling (0.01s)\n"}
{"Time":"2025-10-04T21:54:00.980608497+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_CameraManagement_ErrorHandling","Elapsed":0.01}
{"Time":"2025-10-04T21:54:00.980642663+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_ImmediateConnection_Integration"}
{"Time":"2025-10-04T21:54:00.980667072+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_ImmediateConnection_Integration","Output":"=== RUN   TestProgressiveReadiness_ImmediateConnection_Integration\n"}
{"Time":"2025-10-04T21:54:00.982245165+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_ImmediateConnection_Integration","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:00.988782098+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_ImmediateConnection_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:00.988865873+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_ImmediateConnection_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:00.988892199+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_ImmediateConnection_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:00.98890207+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_ImmediateConnection_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:00.988911198+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_ImmediateConnection_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:00.988920227+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_ImmediateConnection_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_core_integration_test.go:45\n"}
{"Time":"2025-10-04T21:54:00.988929161+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_ImmediateConnection_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:00.98893969+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_ImmediateConnection_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:00.988969847+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_ImmediateConnection_Integration","Output":"        \tTest:       \tTestProgressiveReadiness_ImmediateConnection_Integration\n"}
{"Time":"2025-10-04T21:54:00.988989875+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_ImmediateConnection_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:00.989015561+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_ImmediateConnection_Integration","Output":"--- FAIL: TestProgressiveReadiness_ImmediateConnection_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:00.989033069+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_ImmediateConnection_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:00.989050228+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_Performance_Integration"}
{"Time":"2025-10-04T21:54:00.989059359+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_Performance_Integration","Output":"=== RUN   TestProgressiveReadiness_Performance_Integration\n"}
{"Time":"2025-10-04T21:54:00.99036707+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_Performance_Integration","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:00.996791466+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_Performance_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:00.99685587+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_Performance_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:00.996892189+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_Performance_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:00.996918457+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_Performance_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:00.996943458+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_Performance_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:00.997002529+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_Performance_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_core_integration_test.go:58\n"}
{"Time":"2025-10-04T21:54:00.997028397+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_Performance_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:00.997055194+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_Performance_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:00.99708127+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_Performance_Integration","Output":"        \tTest:       \tTestProgressiveReadiness_Performance_Integration\n"}
{"Time":"2025-10-04T21:54:00.997103751+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_Performance_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:00.997135983+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_Performance_Integration","Output":"--- FAIL: TestProgressiveReadiness_Performance_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:00.99717198+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_Performance_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:00.997200654+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_ConcurrentConnections_Integration"}
{"Time":"2025-10-04T21:54:00.997254377+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_ConcurrentConnections_Integration","Output":"=== RUN   TestProgressiveReadiness_ConcurrentConnections_Integration\n"}
{"Time":"2025-10-04T21:54:00.998696437+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_ConcurrentConnections_Integration","Output":"time=\"2025-10-04 21:54:00\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.005366527+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_ConcurrentConnections_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.005437126+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_ConcurrentConnections_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.00547167+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_ConcurrentConnections_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.005523505+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_ConcurrentConnections_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.005549595+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_ConcurrentConnections_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.005573983+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_ConcurrentConnections_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_core_integration_test.go:79\n"}
{"Time":"2025-10-04T21:54:01.005596474+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_ConcurrentConnections_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.005622961+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_ConcurrentConnections_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.005658555+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_ConcurrentConnections_Integration","Output":"        \tTest:       \tTestProgressiveReadiness_ConcurrentConnections_Integration\n"}
{"Time":"2025-10-04T21:54:01.005682282+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_ConcurrentConnections_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.005715551+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_ConcurrentConnections_Integration","Output":"--- FAIL: TestProgressiveReadiness_ConcurrentConnections_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.005751945+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestProgressiveReadiness_ConcurrentConnections_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.005780517+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_ValidToken_Integration"}
{"Time":"2025-10-04T21:54:01.005801717+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_ValidToken_Integration","Output":"=== RUN   TestAuthentication_ValidToken_Integration\n"}
{"Time":"2025-10-04T21:54:01.00724478+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_ValidToken_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.01395951+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_ValidToken_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.014023291+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_ValidToken_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.01405924+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_ValidToken_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.014085737+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_ValidToken_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.014110405+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_ValidToken_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.01413479+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_ValidToken_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_core_integration_test.go:129\n"}
{"Time":"2025-10-04T21:54:01.014158438+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_ValidToken_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.014184261+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_ValidToken_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.014234384+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_ValidToken_Integration","Output":"        \tTest:       \tTestAuthentication_ValidToken_Integration\n"}
{"Time":"2025-10-04T21:54:01.014272911+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_ValidToken_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.014304081+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_ValidToken_Integration","Output":"--- FAIL: TestAuthentication_ValidToken_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.014329263+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_ValidToken_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.014366217+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_InvalidToken_Integration"}
{"Time":"2025-10-04T21:54:01.014410653+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_InvalidToken_Integration","Output":"=== RUN   TestAuthentication_InvalidToken_Integration\n"}
{"Time":"2025-10-04T21:54:01.015839818+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_InvalidToken_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.022899762+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_InvalidToken_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.022968073+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_InvalidToken_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.023001901+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_InvalidToken_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.02302598+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_InvalidToken_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.023050226+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_InvalidToken_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.02307438+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_InvalidToken_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_core_integration_test.go:158\n"}
{"Time":"2025-10-04T21:54:01.023097493+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_InvalidToken_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.023124461+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_InvalidToken_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.023149755+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_InvalidToken_Integration","Output":"        \tTest:       \tTestAuthentication_InvalidToken_Integration\n"}
{"Time":"2025-10-04T21:54:01.023172182+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_InvalidToken_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.023253136+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_InvalidToken_Integration","Output":"--- FAIL: TestAuthentication_InvalidToken_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.023293398+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_InvalidToken_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.023331542+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_ExpiredToken_Integration"}
{"Time":"2025-10-04T21:54:01.023352637+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_ExpiredToken_Integration","Output":"=== RUN   TestAuthentication_ExpiredToken_Integration\n"}
{"Time":"2025-10-04T21:54:01.024759388+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_ExpiredToken_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.032741886+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_ExpiredToken_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.032821546+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_ExpiredToken_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.032846583+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_ExpiredToken_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.03286199+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_ExpiredToken_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.032875437+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_ExpiredToken_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.032890668+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_ExpiredToken_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_core_integration_test.go:179\n"}
{"Time":"2025-10-04T21:54:01.032904127+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_ExpiredToken_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.032919781+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_ExpiredToken_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.032955763+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_ExpiredToken_Integration","Output":"        \tTest:       \tTestAuthentication_ExpiredToken_Integration\n"}
{"Time":"2025-10-04T21:54:01.032970761+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_ExpiredToken_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.032993652+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_ExpiredToken_Integration","Output":"--- FAIL: TestAuthentication_ExpiredToken_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.033009411+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_ExpiredToken_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.033042374+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_NoToken_Integration"}
{"Time":"2025-10-04T21:54:01.033057478+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_NoToken_Integration","Output":"=== RUN   TestAuthentication_NoToken_Integration\n"}
{"Time":"2025-10-04T21:54:01.03418207+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_NoToken_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.040318043+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_NoToken_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.040384553+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_NoToken_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.04040983+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_NoToken_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.040428422+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_NoToken_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.040445571+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_NoToken_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.040461479+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_NoToken_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_core_integration_test.go:201\n"}
{"Time":"2025-10-04T21:54:01.040477722+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_NoToken_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.040513533+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_NoToken_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.040578777+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_NoToken_Integration","Output":"        \tTest:       \tTestAuthentication_NoToken_Integration\n"}
{"Time":"2025-10-04T21:54:01.04060306+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_NoToken_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.040640724+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_NoToken_Integration","Output":"--- FAIL: TestAuthentication_NoToken_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.040651763+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestAuthentication_NoToken_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.040669863+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPing_Unauthenticated_Integration"}
{"Time":"2025-10-04T21:54:01.040679382+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPing_Unauthenticated_Integration","Output":"=== RUN   TestPing_Unauthenticated_Integration\n"}
{"Time":"2025-10-04T21:54:01.041910434+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPing_Unauthenticated_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.04803716+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPing_Unauthenticated_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.048099474+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPing_Unauthenticated_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.048137285+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPing_Unauthenticated_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.048161763+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPing_Unauthenticated_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.048181482+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPing_Unauthenticated_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.048247743+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPing_Unauthenticated_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_core_integration_test.go:227\n"}
{"Time":"2025-10-04T21:54:01.04828571+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPing_Unauthenticated_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.048309417+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPing_Unauthenticated_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.048330432+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPing_Unauthenticated_Integration","Output":"        \tTest:       \tTestPing_Unauthenticated_Integration\n"}
{"Time":"2025-10-04T21:54:01.048349641+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPing_Unauthenticated_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.048383476+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPing_Unauthenticated_Integration","Output":"--- FAIL: TestPing_Unauthenticated_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.04840524+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPing_Unauthenticated_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.0484284+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPing_Authenticated_Integration"}
{"Time":"2025-10-04T21:54:01.048445287+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPing_Authenticated_Integration","Output":"=== RUN   TestPing_Authenticated_Integration\n"}
{"Time":"2025-10-04T21:54:01.049780422+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPing_Authenticated_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.055924141+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPing_Authenticated_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.055981886+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPing_Authenticated_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.056017669+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPing_Authenticated_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.056065357+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPing_Authenticated_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.056089634+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPing_Authenticated_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.056112148+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPing_Authenticated_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_core_integration_test.go:247\n"}
{"Time":"2025-10-04T21:54:01.056132798+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPing_Authenticated_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.056157237+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPing_Authenticated_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.056179953+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPing_Authenticated_Integration","Output":"        \tTest:       \tTestPing_Authenticated_Integration\n"}
{"Time":"2025-10-04T21:54:01.056205544+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPing_Authenticated_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.056272215+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPing_Authenticated_Integration","Output":"--- FAIL: TestPing_Authenticated_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.05630593+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPing_Authenticated_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.056332119+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestConnection_Reconnection_Integration"}
{"Time":"2025-10-04T21:54:01.056350676+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestConnection_Reconnection_Integration","Output":"=== RUN   TestConnection_Reconnection_Integration\n"}
{"Time":"2025-10-04T21:54:01.056600253+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:01.057738165+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestConnection_Reconnection_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.063371905+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestConnection_Reconnection_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.063448412+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestConnection_Reconnection_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.063477434+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestConnection_Reconnection_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.063505826+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestConnection_Reconnection_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.063522377+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestConnection_Reconnection_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.0635346+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestConnection_Reconnection_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_core_integration_test.go:274\n"}
{"Time":"2025-10-04T21:54:01.06354636+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestConnection_Reconnection_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.06356154+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestConnection_Reconnection_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.063583392+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestConnection_Reconnection_Integration","Output":"        \tTest:       \tTestConnection_Reconnection_Integration\n"}
{"Time":"2025-10-04T21:54:01.063598683+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestConnection_Reconnection_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.063617195+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestConnection_Reconnection_Integration","Output":"--- FAIL: TestConnection_Reconnection_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.063630037+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestConnection_Reconnection_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.063646195+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestJSONRPC_ProtocolCompliance_Integration"}
{"Time":"2025-10-04T21:54:01.063663724+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestJSONRPC_ProtocolCompliance_Integration","Output":"=== RUN   TestJSONRPC_ProtocolCompliance_Integration\n"}
{"Time":"2025-10-04T21:54:01.064964335+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestJSONRPC_ProtocolCompliance_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.067014157+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:01.067078125+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:01.067103383+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:01.067128275+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:01.067428172+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:01.067462199+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:01.067482537+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:01.067501047+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:01.067520808+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:01.067544746+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"    camera_asserters_test.go:147: ✅ Monitor stopped successfully\n"}
{"Time":"2025-10-04T21:54:01.070676657+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestJSONRPC_ProtocolCompliance_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.070729361+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestJSONRPC_ProtocolCompliance_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.070752251+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestJSONRPC_ProtocolCompliance_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.070794009+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestJSONRPC_ProtocolCompliance_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.070815756+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestJSONRPC_ProtocolCompliance_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.070833938+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestJSONRPC_ProtocolCompliance_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_core_integration_test.go:312\n"}
{"Time":"2025-10-04T21:54:01.070849507+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestJSONRPC_ProtocolCompliance_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.070868138+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestJSONRPC_ProtocolCompliance_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.070887518+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestJSONRPC_ProtocolCompliance_Integration","Output":"        \tTest:       \tTestJSONRPC_ProtocolCompliance_Integration\n"}
{"Time":"2025-10-04T21:54:01.070904936+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestJSONRPC_ProtocolCompliance_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.070930857+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestJSONRPC_ProtocolCompliance_Integration","Output":"--- FAIL: TestJSONRPC_ProtocolCompliance_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.070957117+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestJSONRPC_ProtocolCompliance_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.070988784+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestJSONRPC_ErrorHandling_Integration"}
{"Time":"2025-10-04T21:54:01.071006917+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestJSONRPC_ErrorHandling_Integration","Output":"=== RUN   TestJSONRPC_ErrorHandling_Integration\n"}
{"Time":"2025-10-04T21:54:01.072846123+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestJSONRPC_ErrorHandling_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.077735583+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestJSONRPC_ErrorHandling_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.07781687+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestJSONRPC_ErrorHandling_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.077856051+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestJSONRPC_ErrorHandling_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.077876454+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestJSONRPC_ErrorHandling_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.077893007+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestJSONRPC_ErrorHandling_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.077908954+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestJSONRPC_ErrorHandling_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_core_integration_test.go:333\n"}
{"Time":"2025-10-04T21:54:01.077925981+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestJSONRPC_ErrorHandling_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.07794429+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestJSONRPC_ErrorHandling_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.077962291+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestJSONRPC_ErrorHandling_Integration","Output":"        \tTest:       \tTestJSONRPC_ErrorHandling_Integration\n"}
{"Time":"2025-10-04T21:54:01.077979844+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestJSONRPC_ErrorHandling_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.078007335+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestJSONRPC_ErrorHandling_Integration","Output":"--- FAIL: TestJSONRPC_ErrorHandling_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.078027869+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestJSONRPC_ErrorHandling_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.078057283+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_BasicOperations_Integration"}
{"Time":"2025-10-04T21:54:01.078087726+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_BasicOperations_Integration","Output":"=== RUN   TestPerformance_BasicOperations_Integration\n"}
{"Time":"2025-10-04T21:54:01.078126775+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:01.078153617+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:01.07817244+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:01.07819067+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:01.07822899+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:01.078251893+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:01.078270952+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:01.078287653+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:01.0783028+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:01.078329335+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:01.07834857+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:01.078366927+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:01.078389123+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:01.07842566+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:01.078450571+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:01.078473311+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:01.078503955+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:01.078528184+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:01.07855853+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:01.079599636+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_BasicOperations_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.084349808+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_BasicOperations_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.084414567+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_BasicOperations_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.084437876+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_BasicOperations_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.084455433+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_BasicOperations_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.084473811+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_BasicOperations_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.084491981+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_BasicOperations_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_core_integration_test.go:360\n"}
{"Time":"2025-10-04T21:54:01.084508662+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_BasicOperations_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.08454921+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_BasicOperations_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.084570046+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_BasicOperations_Integration","Output":"        \tTest:       \tTestPerformance_BasicOperations_Integration\n"}
{"Time":"2025-10-04T21:54:01.084586302+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_BasicOperations_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.084621914+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_BasicOperations_Integration","Output":"--- FAIL: TestPerformance_BasicOperations_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.084657898+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_BasicOperations_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.084684374+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentOperations_Integration"}
{"Time":"2025-10-04T21:54:01.084702479+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentOperations_Integration","Output":"=== RUN   TestPerformance_ConcurrentOperations_Integration\n"}
{"Time":"2025-10-04T21:54:01.085779667+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentOperations_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.090082864+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentOperations_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.090160426+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentOperations_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.090183131+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentOperations_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.090235989+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentOperations_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.090259119+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentOperations_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.090305096+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentOperations_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_core_integration_test.go:384\n"}
{"Time":"2025-10-04T21:54:01.090324621+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentOperations_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.090342939+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentOperations_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.09037422+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentOperations_Integration","Output":"        \tTest:       \tTestPerformance_ConcurrentOperations_Integration\n"}
{"Time":"2025-10-04T21:54:01.090393591+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentOperations_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.090422565+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentOperations_Integration","Output":"--- FAIL: TestPerformance_ConcurrentOperations_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.090450366+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentOperations_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.090475292+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventIntegration_SystemEvents_Integration"}
{"Time":"2025-10-04T21:54:01.090498616+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventIntegration_SystemEvents_Integration","Output":"=== RUN   TestEventIntegration_SystemEvents_Integration\n"}
{"Time":"2025-10-04T21:54:01.091603632+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventIntegration_SystemEvents_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.09637847+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventIntegration_SystemEvents_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.096446049+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventIntegration_SystemEvents_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.096470894+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventIntegration_SystemEvents_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.096509016+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventIntegration_SystemEvents_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.096530649+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventIntegration_SystemEvents_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.096547839+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventIntegration_SystemEvents_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_core_integration_test.go:432\n"}
{"Time":"2025-10-04T21:54:01.096564329+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventIntegration_SystemEvents_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.096582379+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventIntegration_SystemEvents_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.096602417+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventIntegration_SystemEvents_Integration","Output":"        \tTest:       \tTestEventIntegration_SystemEvents_Integration\n"}
{"Time":"2025-10-04T21:54:01.09661974+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventIntegration_SystemEvents_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.096645364+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventIntegration_SystemEvents_Integration","Output":"--- FAIL: TestEventIntegration_SystemEvents_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.096680612+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventIntegration_SystemEvents_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.096706317+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_Metrics_Integration"}
{"Time":"2025-10-04T21:54:01.096722993+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_Metrics_Integration","Output":"=== RUN   TestServerManagement_Metrics_Integration\n"}
{"Time":"2025-10-04T21:54:01.09781576+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_Metrics_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.102472466+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_Metrics_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.10253409+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_Metrics_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.102558529+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_Metrics_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.102578474+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_Metrics_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.102597049+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_Metrics_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.102615992+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_Metrics_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_core_integration_test.go:461\n"}
{"Time":"2025-10-04T21:54:01.102633309+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_Metrics_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.102651479+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_Metrics_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.102670139+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_Metrics_Integration","Output":"        \tTest:       \tTestServerManagement_Metrics_Integration\n"}
{"Time":"2025-10-04T21:54:01.102686792+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_Metrics_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.10271249+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_Metrics_Integration","Output":"--- FAIL: TestServerManagement_Metrics_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.102738873+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_Metrics_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.102769679+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_EventBroadcasting_Integration"}
{"Time":"2025-10-04T21:54:01.102806362+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_EventBroadcasting_Integration","Output":"=== RUN   TestServerManagement_EventBroadcasting_Integration\n"}
{"Time":"2025-10-04T21:54:01.10389698+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_EventBroadcasting_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.109796207+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_EventBroadcasting_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.109872842+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_EventBroadcasting_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.109900701+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_EventBroadcasting_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.109918554+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_EventBroadcasting_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.109937143+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_EventBroadcasting_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.109954697+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_EventBroadcasting_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_core_integration_test.go:491\n"}
{"Time":"2025-10-04T21:54:01.109971351+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_EventBroadcasting_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.109995718+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_EventBroadcasting_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.110014018+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_EventBroadcasting_Integration","Output":"        \tTest:       \tTestServerManagement_EventBroadcasting_Integration\n"}
{"Time":"2025-10-04T21:54:01.110030081+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_EventBroadcasting_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.110075878+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_EventBroadcasting_Integration","Output":"--- FAIL: TestServerManagement_EventBroadcasting_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.110095194+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_EventBroadcasting_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.110124217+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_ErrorHandling_Integration"}
{"Time":"2025-10-04T21:54:01.110140237+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_ErrorHandling_Integration","Output":"=== RUN   TestServerManagement_ErrorHandling_Integration\n"}
{"Time":"2025-10-04T21:54:01.111127863+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_ErrorHandling_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.11599902+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_ErrorHandling_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.116055474+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_ErrorHandling_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.116085515+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_ErrorHandling_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.116111752+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_ErrorHandling_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.116130916+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_ErrorHandling_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.116148384+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_ErrorHandling_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_core_integration_test.go:517\n"}
{"Time":"2025-10-04T21:54:01.116176144+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_ErrorHandling_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.116199966+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_ErrorHandling_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.116264001+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_ErrorHandling_Integration","Output":"        \tTest:       \tTestServerManagement_ErrorHandling_Integration\n"}
{"Time":"2025-10-04T21:54:01.116284535+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_ErrorHandling_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.11631859+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_ErrorHandling_Integration","Output":"--- FAIL: TestServerManagement_ErrorHandling_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.116338324+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestServerManagement_ErrorHandling_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.116358207+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration"}
{"Time":"2025-10-04T21:54:01.116376428+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration","Output":"=== RUN   TestHealthEndpoints_HTTP_Integration\n"}
{"Time":"2025-10-04T21:54:01.116401695+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/BasicHealth"}
{"Time":"2025-10-04T21:54:01.116417235+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/BasicHealth","Output":"=== RUN   TestHealthEndpoints_HTTP_Integration/BasicHealth\n"}
{"Time":"2025-10-04T21:54:01.117932377+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/BasicHealth","Output":"    test_core_integration_test.go:557: \n"}
{"Time":"2025-10-04T21:54:01.117992605+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/BasicHealth","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_core_integration_test.go:557\n"}
{"Time":"2025-10-04T21:54:01.118013421+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/BasicHealth","Output":"        \tError:      \tNot equal: \n"}
{"Time":"2025-10-04T21:54:01.11802856+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/BasicHealth","Output":"        \t            \texpected: \"HEALTHY\"\n"}
{"Time":"2025-10-04T21:54:01.118051889+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/BasicHealth","Output":"        \t            \tactual  : \"healthy\"\n"}
{"Time":"2025-10-04T21:54:01.118066278+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/BasicHealth","Output":"        \t            \t\n"}
{"Time":"2025-10-04T21:54:01.118084587+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/BasicHealth","Output":"        \t            \tDiff:\n"}
{"Time":"2025-10-04T21:54:01.118114418+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/BasicHealth","Output":"        \t            \t--- Expected\n"}
{"Time":"2025-10-04T21:54:01.118131175+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/BasicHealth","Output":"        \t            \t+++ Actual\n"}
{"Time":"2025-10-04T21:54:01.118145316+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/BasicHealth","Output":"        \t            \t@@ -1 +1 @@\n"}
{"Time":"2025-10-04T21:54:01.118158903+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/BasicHealth","Output":"        \t            \t-HEALTHY\n"}
{"Time":"2025-10-04T21:54:01.118172715+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/BasicHealth","Output":"        \t            \t+healthy\n"}
{"Time":"2025-10-04T21:54:01.118193151+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/BasicHealth","Output":"        \tTest:       \tTestHealthEndpoints_HTTP_Integration/BasicHealth\n"}
{"Time":"2025-10-04T21:54:01.118228208+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/BasicHealth","Output":"        \tMessages:   \tSystem should be healthy\n"}
{"Time":"2025-10-04T21:54:01.11825486+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/BasicHealth","Output":"--- FAIL: TestHealthEndpoints_HTTP_Integration/BasicHealth (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.118278187+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/BasicHealth","Elapsed":0}
{"Time":"2025-10-04T21:54:01.118296417+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/DetailedHealth"}
{"Time":"2025-10-04T21:54:01.1183104+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/DetailedHealth","Output":"=== RUN   TestHealthEndpoints_HTTP_Integration/DetailedHealth\n"}
{"Time":"2025-10-04T21:54:01.118728848+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/DetailedHealth","Output":"    test_core_integration_test.go:575: \n"}
{"Time":"2025-10-04T21:54:01.118767077+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/DetailedHealth","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_core_integration_test.go:575\n"}
{"Time":"2025-10-04T21:54:01.118787059+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/DetailedHealth","Output":"        \tError:      \tNot equal: \n"}
{"Time":"2025-10-04T21:54:01.118803647+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/DetailedHealth","Output":"        \t            \texpected: \"HEALTHY\"\n"}
{"Time":"2025-10-04T21:54:01.118835057+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/DetailedHealth","Output":"        \t            \tactual  : \"healthy\"\n"}
{"Time":"2025-10-04T21:54:01.118854745+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/DetailedHealth","Output":"        \t            \t\n"}
{"Time":"2025-10-04T21:54:01.118871503+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/DetailedHealth","Output":"        \t            \tDiff:\n"}
{"Time":"2025-10-04T21:54:01.118884775+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/DetailedHealth","Output":"        \t            \t--- Expected\n"}
{"Time":"2025-10-04T21:54:01.118895514+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/DetailedHealth","Output":"        \t            \t+++ Actual\n"}
{"Time":"2025-10-04T21:54:01.118910614+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/DetailedHealth","Output":"        \t            \t@@ -1 +1 @@\n"}
{"Time":"2025-10-04T21:54:01.118926584+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/DetailedHealth","Output":"        \t            \t-HEALTHY\n"}
{"Time":"2025-10-04T21:54:01.118949575+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/DetailedHealth","Output":"        \t            \t+healthy\n"}
{"Time":"2025-10-04T21:54:01.118967911+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/DetailedHealth","Output":"        \tTest:       \tTestHealthEndpoints_HTTP_Integration/DetailedHealth\n"}
{"Time":"2025-10-04T21:54:01.118984471+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/DetailedHealth","Output":"        \tMessages:   \tSystem should be healthy\n"}
{"Time":"2025-10-04T21:54:01.119005472+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/DetailedHealth","Output":"--- FAIL: TestHealthEndpoints_HTTP_Integration/DetailedHealth (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.119031051+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/DetailedHealth","Elapsed":0}
{"Time":"2025-10-04T21:54:01.119051727+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/ReadinessProbe"}
{"Time":"2025-10-04T21:54:01.119079667+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/ReadinessProbe","Output":"=== RUN   TestHealthEndpoints_HTTP_Integration/ReadinessProbe\n"}
{"Time":"2025-10-04T21:54:01.119389348+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/ReadinessProbe","Output":"    test_core_integration_test.go:596: ✅ Health Endpoints: Readiness probe working\n"}
{"Time":"2025-10-04T21:54:01.119431861+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/ReadinessProbe","Output":"--- PASS: TestHealthEndpoints_HTTP_Integration/ReadinessProbe (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.119478508+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/ReadinessProbe","Elapsed":0}
{"Time":"2025-10-04T21:54:01.119499653+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/LivenessProbe"}
{"Time":"2025-10-04T21:54:01.119513824+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/LivenessProbe","Output":"=== RUN   TestHealthEndpoints_HTTP_Integration/LivenessProbe\n"}
{"Time":"2025-10-04T21:54:01.119903445+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/LivenessProbe","Output":"    test_core_integration_test.go:612: ✅ Health Endpoints: Liveness probe working\n"}
{"Time":"2025-10-04T21:54:01.11994453+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/LivenessProbe","Output":"--- PASS: TestHealthEndpoints_HTTP_Integration/LivenessProbe (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.119972244+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration/LivenessProbe","Elapsed":0}
{"Time":"2025-10-04T21:54:01.11998971+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration","Output":"    test_core_integration_test.go:615: ✅ Health Endpoints: All HTTP health endpoints tested successfully\n"}
{"Time":"2025-10-04T21:54:01.120008177+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration","Output":"--- FAIL: TestHealthEndpoints_HTTP_Integration (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.120024306+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestHealthEndpoints_HTTP_Integration","Elapsed":0}
{"Time":"2025-10-04T21:54:01.120043103+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConnectionStability_Integration"}
{"Time":"2025-10-04T21:54:01.120056865+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConnectionStability_Integration","Output":"=== RUN   TestWebSocket_ConnectionStability_Integration\n"}
{"Time":"2025-10-04T21:54:01.121018198+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConnectionStability_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.125795719+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConnectionStability_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.125851475+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConnectionStability_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.125880055+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConnectionStability_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.125925041+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConnectionStability_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.125945189+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConnectionStability_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.125962004+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConnectionStability_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_core_integration_test.go:623\n"}
{"Time":"2025-10-04T21:54:01.125978182+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConnectionStability_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.125996431+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConnectionStability_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.126014777+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConnectionStability_Integration","Output":"        \tTest:       \tTestWebSocket_ConnectionStability_Integration\n"}
{"Time":"2025-10-04T21:54:01.126030146+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConnectionStability_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.126054923+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConnectionStability_Integration","Output":"--- FAIL: TestWebSocket_ConnectionStability_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.126080621+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConnectionStability_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.126102567+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_StabilityPerformance_Integration"}
{"Time":"2025-10-04T21:54:01.126117651+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_StabilityPerformance_Integration","Output":"=== RUN   TestWebSocket_StabilityPerformance_Integration\n"}
{"Time":"2025-10-04T21:54:01.12710968+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_StabilityPerformance_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.132652957+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_StabilityPerformance_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.132734517+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_StabilityPerformance_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.132762947+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_StabilityPerformance_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.132779428+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_StabilityPerformance_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.132789026+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_StabilityPerformance_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.132798272+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_StabilityPerformance_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_core_integration_test.go:801\n"}
{"Time":"2025-10-04T21:54:01.132807642+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_StabilityPerformance_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.132818226+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_StabilityPerformance_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.132829762+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_StabilityPerformance_Integration","Output":"        \tTest:       \tTestWebSocket_StabilityPerformance_Integration\n"}
{"Time":"2025-10-04T21:54:01.132839366+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_StabilityPerformance_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.132865335+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_StabilityPerformance_Integration","Output":"--- FAIL: TestWebSocket_StabilityPerformance_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.132877073+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_StabilityPerformance_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.132896673+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorHandling_Integration"}
{"Time":"2025-10-04T21:54:01.132915673+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorHandling_Integration","Output":"=== RUN   TestWebSocket_ErrorHandling_Integration\n"}
{"Time":"2025-10-04T21:54:01.133946078+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorHandling_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.138747181+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorHandling_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.138802483+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorHandling_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.138830649+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorHandling_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.138856249+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorHandling_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.138874925+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorHandling_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.13889121+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorHandling_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_core_integration_test.go:914\n"}
{"Time":"2025-10-04T21:54:01.138907596+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorHandling_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.138933079+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorHandling_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.138951136+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorHandling_Integration","Output":"        \tTest:       \tTestWebSocket_ErrorHandling_Integration\n"}
{"Time":"2025-10-04T21:54:01.138966627+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorHandling_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.139008908+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorHandling_Integration","Output":"--- FAIL: TestWebSocket_ErrorHandling_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.139037032+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorHandling_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.139057939+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorRecoveryPatterns_Integration"}
{"Time":"2025-10-04T21:54:01.139072721+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorRecoveryPatterns_Integration","Output":"=== RUN   TestWebSocket_ErrorRecoveryPatterns_Integration\n"}
{"Time":"2025-10-04T21:54:01.140153704+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorRecoveryPatterns_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.144942829+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorRecoveryPatterns_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.144997976+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorRecoveryPatterns_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.145020305+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorRecoveryPatterns_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.145039575+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorRecoveryPatterns_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.145058112+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorRecoveryPatterns_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.145077243+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorRecoveryPatterns_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_core_integration_test.go:1106\n"}
{"Time":"2025-10-04T21:54:01.145094252+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorRecoveryPatterns_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.145112401+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorRecoveryPatterns_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.145153625+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorRecoveryPatterns_Integration","Output":"        \tTest:       \tTestWebSocket_ErrorRecoveryPatterns_Integration\n"}
{"Time":"2025-10-04T21:54:01.145180656+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorRecoveryPatterns_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.145223386+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorRecoveryPatterns_Integration","Output":"--- FAIL: TestWebSocket_ErrorRecoveryPatterns_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.145255807+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ErrorRecoveryPatterns_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.145290863+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_API_Contract_Validation_Integration"}
{"Time":"2025-10-04T21:54:01.145308751+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_API_Contract_Validation_Integration","Output":"=== RUN   TestWebSocket_API_Contract_Validation_Integration\n"}
{"Time":"2025-10-04T21:54:01.146409984+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_API_Contract_Validation_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.151057752+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_API_Contract_Validation_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.151105116+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_API_Contract_Validation_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.151128885+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_API_Contract_Validation_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.151147735+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_API_Contract_Validation_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.151166868+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_API_Contract_Validation_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.151185665+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_API_Contract_Validation_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_core_integration_test.go:1234\n"}
{"Time":"2025-10-04T21:54:01.151203185+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_API_Contract_Validation_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.151266741+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_API_Contract_Validation_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.151289693+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_API_Contract_Validation_Integration","Output":"        \tTest:       \tTestWebSocket_API_Contract_Validation_Integration\n"}
{"Time":"2025-10-04T21:54:01.15130697+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_API_Contract_Validation_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.151339285+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_API_Contract_Validation_Integration","Output":"--- FAIL: TestWebSocket_API_Contract_Validation_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.151369171+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_API_Contract_Validation_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.151393307+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Event_Integration_Integration"}
{"Time":"2025-10-04T21:54:01.151410339+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Event_Integration_Integration","Output":"=== RUN   TestWebSocket_Event_Integration_Integration\n"}
{"Time":"2025-10-04T21:54:01.152572167+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Event_Integration_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.157177015+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Event_Integration_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.157247796+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Event_Integration_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.157282359+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Event_Integration_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.157302207+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Event_Integration_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.157320336+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Event_Integration_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.157357907+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Event_Integration_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_core_integration_test.go:1333\n"}
{"Time":"2025-10-04T21:54:01.157376574+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Event_Integration_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.157394432+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Event_Integration_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.157414253+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Event_Integration_Integration","Output":"        \tTest:       \tTestWebSocket_Event_Integration_Integration\n"}
{"Time":"2025-10-04T21:54:01.157439372+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Event_Integration_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.157465289+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Event_Integration_Integration","Output":"--- FAIL: TestWebSocket_Event_Integration_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.157494081+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_Event_Integration_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.157517738+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_DeleteRecording"}
{"Time":"2025-10-04T21:54:01.157540638+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_DeleteRecording","Output":"=== RUN   TestTargetedCoverage_DeleteRecording\n"}
{"Time":"2025-10-04T21:54:01.158617208+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_DeleteRecording","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.164623339+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_DeleteRecording","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.164690025+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_DeleteRecording","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.164709537+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_DeleteRecording","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.164748816+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_DeleteRecording","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.164765677+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_DeleteRecording","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.164777681+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_DeleteRecording","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_coverage_targeted_test.go:40\n"}
{"Time":"2025-10-04T21:54:01.164788983+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_DeleteRecording","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.164801753+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_DeleteRecording","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.164832527+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_DeleteRecording","Output":"        \tTest:       \tTestTargetedCoverage_DeleteRecording\n"}
{"Time":"2025-10-04T21:54:01.164845619+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_DeleteRecording","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.16486471+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_DeleteRecording","Output":"--- FAIL: TestTargetedCoverage_DeleteRecording (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.16488279+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_DeleteRecording","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.164904049+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_StartStreaming"}
{"Time":"2025-10-04T21:54:01.164931957+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_StartStreaming","Output":"=== RUN   TestTargetedCoverage_StartStreaming\n"}
{"Time":"2025-10-04T21:54:01.166229118+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_StartStreaming","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.173291317+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_StartStreaming","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.173377368+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_StartStreaming","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.173412668+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_StartStreaming","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.173438051+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_StartStreaming","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.173455381+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_StartStreaming","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.173471405+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_StartStreaming","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_coverage_targeted_test.go:83\n"}
{"Time":"2025-10-04T21:54:01.173495092+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_StartStreaming","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.173517905+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_StartStreaming","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.173533804+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_StartStreaming","Output":"        \tTest:       \tTestTargetedCoverage_StartStreaming\n"}
{"Time":"2025-10-04T21:54:01.173546318+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_StartStreaming","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.173565093+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_StartStreaming","Output":"--- FAIL: TestTargetedCoverage_StartStreaming (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.173583469+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_StartStreaming","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.173614778+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_StopStreaming"}
{"Time":"2025-10-04T21:54:01.173628897+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_StopStreaming","Output":"=== RUN   TestTargetedCoverage_StopStreaming\n"}
{"Time":"2025-10-04T21:54:01.175596142+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_StopStreaming","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.178818691+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:01.182769351+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_StopStreaming","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.18283428+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_StopStreaming","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.182866753+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_StopStreaming","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.182898146+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_StopStreaming","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.182909002+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_StopStreaming","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.182918848+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_StopStreaming","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_coverage_targeted_test.go:119\n"}
{"Time":"2025-10-04T21:54:01.18292856+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_StopStreaming","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.182938161+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_StopStreaming","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.182948231+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_StopStreaming","Output":"        \tTest:       \tTestTargetedCoverage_StopStreaming\n"}
{"Time":"2025-10-04T21:54:01.182957838+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_StopStreaming","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.182993345+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_StopStreaming","Output":"--- FAIL: TestTargetedCoverage_StopStreaming (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.183009856+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_StopStreaming","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.183021381+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_AddExternalStream"}
{"Time":"2025-10-04T21:54:01.183027723+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_AddExternalStream","Output":"=== RUN   TestTargetedCoverage_AddExternalStream\n"}
{"Time":"2025-10-04T21:54:01.183855117+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_AddExternalStream","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.186779796+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_AddExternalStream","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.186816873+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_AddExternalStream","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.186832754+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_AddExternalStream","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.186846489+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_AddExternalStream","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.186860506+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_AddExternalStream","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.186878668+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_AddExternalStream","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_coverage_targeted_test.go:147\n"}
{"Time":"2025-10-04T21:54:01.186901463+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_AddExternalStream","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.186912088+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_AddExternalStream","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.186934175+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_AddExternalStream","Output":"        \tTest:       \tTestTargetedCoverage_AddExternalStream\n"}
{"Time":"2025-10-04T21:54:01.186945272+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_AddExternalStream","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.186963665+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_AddExternalStream","Output":"--- FAIL: TestTargetedCoverage_AddExternalStream (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.186976114+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_AddExternalStream","Elapsed":0}
{"Time":"2025-10-04T21:54:01.18698837+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_RemoveExternalStream"}
{"Time":"2025-10-04T21:54:01.186994395+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_RemoveExternalStream","Output":"=== RUN   TestTargetedCoverage_RemoveExternalStream\n"}
{"Time":"2025-10-04T21:54:01.187735349+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_RemoveExternalStream","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.189133233+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:01.189180589+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:01.18920394+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:01.189239291+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:01.189490674+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:01.189529351+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:01.189546929+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:01.189556788+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:01.189587408+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:01.189605775+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"    camera_asserters_test.go:147: ✅ Monitor stopped successfully\n"}
{"Time":"2025-10-04T21:54:01.19146152+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_RemoveExternalStream","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.19150897+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_RemoveExternalStream","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.191529956+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_RemoveExternalStream","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.191549057+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_RemoveExternalStream","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.191567769+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_RemoveExternalStream","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.191584946+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_RemoveExternalStream","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_coverage_targeted_test.go:177\n"}
{"Time":"2025-10-04T21:54:01.191594954+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_RemoveExternalStream","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.191605428+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_RemoveExternalStream","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.191616353+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_RemoveExternalStream","Output":"        \tTest:       \tTestTargetedCoverage_RemoveExternalStream\n"}
{"Time":"2025-10-04T21:54:01.191625484+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_RemoveExternalStream","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.191659174+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_RemoveExternalStream","Output":"--- FAIL: TestTargetedCoverage_RemoveExternalStream (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.191677821+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_RemoveExternalStream","Elapsed":0}
{"Time":"2025-10-04T21:54:01.191697413+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_SecurityBlockedMethods"}
{"Time":"2025-10-04T21:54:01.191707482+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_SecurityBlockedMethods","Output":"=== RUN   TestTargetedCoverage_SecurityBlockedMethods\n"}
{"Time":"2025-10-04T21:54:01.192579478+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_SecurityBlockedMethods","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.197099452+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_SecurityBlockedMethods","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.197180706+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_SecurityBlockedMethods","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.197248719+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_SecurityBlockedMethods","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.197284658+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_SecurityBlockedMethods","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.197296386+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_SecurityBlockedMethods","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.19730772+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_SecurityBlockedMethods","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_coverage_targeted_test.go:206\n"}
{"Time":"2025-10-04T21:54:01.197318194+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_SecurityBlockedMethods","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.1973322+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_SecurityBlockedMethods","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.197366558+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_SecurityBlockedMethods","Output":"        \tTest:       \tTestTargetedCoverage_SecurityBlockedMethods\n"}
{"Time":"2025-10-04T21:54:01.197385043+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_SecurityBlockedMethods","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.197407698+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_SecurityBlockedMethods","Output":"--- FAIL: TestTargetedCoverage_SecurityBlockedMethods (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.197430739+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_SecurityBlockedMethods","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.197449339+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_AllUntestedMethods"}
{"Time":"2025-10-04T21:54:01.197459721+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_AllUntestedMethods","Output":"=== RUN   TestTargetedCoverage_AllUntestedMethods\n"}
{"Time":"2025-10-04T21:54:01.198991131+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_AllUntestedMethods","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.199974356+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:01.200029045+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:01.200065397+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:01.200242955+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:01.200267156+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:01.200278514+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:01.200288333+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:01.200297867+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:01.200324198+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:01.200341024+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:01.200354139+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:01.200368795+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:01.200496617+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:01.200569648+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:01.200601051+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:01.20063085+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:01.200655903+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:01.200681388+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:01.200699352+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:01.204975937+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_AllUntestedMethods","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.205036617+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_AllUntestedMethods","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.205073273+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_AllUntestedMethods","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.205125171+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_AllUntestedMethods","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.205145236+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_AllUntestedMethods","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.205153876+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_AllUntestedMethods","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_coverage_targeted_test.go:243\n"}
{"Time":"2025-10-04T21:54:01.205162172+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_AllUntestedMethods","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.205172648+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_AllUntestedMethods","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.205183309+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_AllUntestedMethods","Output":"        \tTest:       \tTestTargetedCoverage_AllUntestedMethods\n"}
{"Time":"2025-10-04T21:54:01.205192647+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_AllUntestedMethods","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.2052188+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_AllUntestedMethods","Output":"--- FAIL: TestTargetedCoverage_AllUntestedMethods (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.205248901+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestTargetedCoverage_AllUntestedMethods","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.205272131+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_SubscribeEvents_Integration"}
{"Time":"2025-10-04T21:54:01.205284104+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_SubscribeEvents_Integration","Output":"=== RUN   TestEventSystem_SubscribeEvents_Integration\n"}
{"Time":"2025-10-04T21:54:01.206056881+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_SubscribeEvents_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.208970164+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_SubscribeEvents_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.209021223+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_SubscribeEvents_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.209036921+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_SubscribeEvents_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.209049095+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_SubscribeEvents_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.209060019+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_SubscribeEvents_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.209071876+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_SubscribeEvents_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_event_system_integration_test.go:38\n"}
{"Time":"2025-10-04T21:54:01.209082801+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_SubscribeEvents_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.209093637+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_SubscribeEvents_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.209104577+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_SubscribeEvents_Integration","Output":"        \tTest:       \tTestEventSystem_SubscribeEvents_Integration\n"}
{"Time":"2025-10-04T21:54:01.209114651+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_SubscribeEvents_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.209135503+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_SubscribeEvents_Integration","Output":"--- FAIL: TestEventSystem_SubscribeEvents_Integration (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.209154041+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_SubscribeEvents_Integration","Elapsed":0}
{"Time":"2025-10-04T21:54:01.209167635+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_UnsubscribeEvents_Integration"}
{"Time":"2025-10-04T21:54:01.209187126+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_UnsubscribeEvents_Integration","Output":"=== RUN   TestEventSystem_UnsubscribeEvents_Integration\n"}
{"Time":"2025-10-04T21:54:01.209868493+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_UnsubscribeEvents_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.212761056+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_UnsubscribeEvents_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.21280019+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_UnsubscribeEvents_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.212816482+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_UnsubscribeEvents_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.212828226+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_UnsubscribeEvents_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.212841049+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_UnsubscribeEvents_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.212853341+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_UnsubscribeEvents_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_event_system_integration_test.go:80\n"}
{"Time":"2025-10-04T21:54:01.212865008+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_UnsubscribeEvents_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.212876442+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_UnsubscribeEvents_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.212887914+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_UnsubscribeEvents_Integration","Output":"        \tTest:       \tTestEventSystem_UnsubscribeEvents_Integration\n"}
{"Time":"2025-10-04T21:54:01.212898081+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_UnsubscribeEvents_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.212933975+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_UnsubscribeEvents_Integration","Output":"--- FAIL: TestEventSystem_UnsubscribeEvents_Integration (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.21295396+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_UnsubscribeEvents_Integration","Elapsed":0}
{"Time":"2025-10-04T21:54:01.212969388+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_GetSubscriptionStats_Integration"}
{"Time":"2025-10-04T21:54:01.212984488+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_GetSubscriptionStats_Integration","Output":"=== RUN   TestEventSystem_GetSubscriptionStats_Integration\n"}
{"Time":"2025-10-04T21:54:01.213648559+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_GetSubscriptionStats_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.220917476+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_GetSubscriptionStats_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.220994562+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_GetSubscriptionStats_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.221019994+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_GetSubscriptionStats_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.221039152+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_GetSubscriptionStats_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.221052992+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_GetSubscriptionStats_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.221064138+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_GetSubscriptionStats_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_event_system_integration_test.go:115\n"}
{"Time":"2025-10-04T21:54:01.221074972+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_GetSubscriptionStats_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.221087178+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_GetSubscriptionStats_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.221157356+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_GetSubscriptionStats_Integration","Output":"        \tTest:       \tTestEventSystem_GetSubscriptionStats_Integration\n"}
{"Time":"2025-10-04T21:54:01.221174254+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_GetSubscriptionStats_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.221189954+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_GetSubscriptionStats_Integration","Output":"--- FAIL: TestEventSystem_GetSubscriptionStats_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.221206709+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_GetSubscriptionStats_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.221235644+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_EndToEndEventDelivery_Integration"}
{"Time":"2025-10-04T21:54:01.22124393+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_EndToEndEventDelivery_Integration","Output":"=== RUN   TestEventSystem_EndToEndEventDelivery_Integration\n"}
{"Time":"2025-10-04T21:54:01.221951981+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_EndToEndEventDelivery_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.22717572+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_EndToEndEventDelivery_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.22727287+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_EndToEndEventDelivery_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.227302109+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_EndToEndEventDelivery_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.227325507+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_EndToEndEventDelivery_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.227339166+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_EndToEndEventDelivery_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.227353695+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_EndToEndEventDelivery_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_event_system_integration_test.go:156\n"}
{"Time":"2025-10-04T21:54:01.227394971+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_EndToEndEventDelivery_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.227413445+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_EndToEndEventDelivery_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.227432706+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_EndToEndEventDelivery_Integration","Output":"        \tTest:       \tTestEventSystem_EndToEndEventDelivery_Integration\n"}
{"Time":"2025-10-04T21:54:01.22745048+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_EndToEndEventDelivery_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.227477072+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_EndToEndEventDelivery_Integration","Output":"--- FAIL: TestEventSystem_EndToEndEventDelivery_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.227535824+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_EndToEndEventDelivery_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.227554657+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_InvalidTopics_Integration"}
{"Time":"2025-10-04T21:54:01.227563993+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_InvalidTopics_Integration","Output":"=== RUN   TestEventSystem_InvalidTopics_Integration\n"}
{"Time":"2025-10-04T21:54:01.229102535+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_InvalidTopics_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.235876598+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_InvalidTopics_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.235949303+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_InvalidTopics_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.235983586+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_InvalidTopics_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.236012498+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_InvalidTopics_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.236065414+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_InvalidTopics_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.236094292+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_InvalidTopics_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_event_system_integration_test.go:190\n"}
{"Time":"2025-10-04T21:54:01.236110903+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_InvalidTopics_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.236126494+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_InvalidTopics_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.23616262+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_InvalidTopics_Integration","Output":"        \tTest:       \tTestEventSystem_InvalidTopics_Integration\n"}
{"Time":"2025-10-04T21:54:01.23618186+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_InvalidTopics_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.2362302+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_InvalidTopics_Integration","Output":"--- FAIL: TestEventSystem_InvalidTopics_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.236267728+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_InvalidTopics_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.236295178+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_ProgressiveReadiness_Integration"}
{"Time":"2025-10-04T21:54:01.236309259+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_ProgressiveReadiness_Integration","Output":"=== RUN   TestEventSystem_ProgressiveReadiness_Integration\n"}
{"Time":"2025-10-04T21:54:01.237971712+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_ProgressiveReadiness_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.244882584+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_ProgressiveReadiness_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.244950774+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_ProgressiveReadiness_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.2449892+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_ProgressiveReadiness_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.245000175+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_ProgressiveReadiness_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.24500728+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_ProgressiveReadiness_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.245013844+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_ProgressiveReadiness_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_event_system_integration_test.go:223\n"}
{"Time":"2025-10-04T21:54:01.245020534+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_ProgressiveReadiness_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.245037403+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_ProgressiveReadiness_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.245044895+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_ProgressiveReadiness_Integration","Output":"        \tTest:       \tTestEventSystem_ProgressiveReadiness_Integration\n"}
{"Time":"2025-10-04T21:54:01.24505199+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_ProgressiveReadiness_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.245069543+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_ProgressiveReadiness_Integration","Output":"--- FAIL: TestEventSystem_ProgressiveReadiness_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.245079791+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_ProgressiveReadiness_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.245098606+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_MultipleClients_Integration"}
{"Time":"2025-10-04T21:54:01.24510529+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_MultipleClients_Integration","Output":"=== RUN   TestEventSystem_MultipleClients_Integration\n"}
{"Time":"2025-10-04T21:54:01.245982137+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_MultipleClients_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.252548846+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_MultipleClients_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.252607193+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_MultipleClients_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.252635963+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_MultipleClients_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.252675464+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_MultipleClients_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.252697398+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_MultipleClients_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.252712706+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_MultipleClients_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_event_system_integration_test.go:258\n"}
{"Time":"2025-10-04T21:54:01.252731061+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_MultipleClients_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.252753936+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_MultipleClients_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.252779046+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_MultipleClients_Integration","Output":"        \tTest:       \tTestEventSystem_MultipleClients_Integration\n"}
{"Time":"2025-10-04T21:54:01.252794382+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_MultipleClients_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.252815468+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_MultipleClients_Integration","Output":"--- FAIL: TestEventSystem_MultipleClients_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.252833041+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestEventSystem_MultipleClients_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.252880551+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_FileLifecycle_Complete_Integration"}
{"Time":"2025-10-04T21:54:01.252904704+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_FileLifecycle_Complete_Integration","Output":"=== RUN   TestWebSocket_FileLifecycle_Complete_Integration\n"}
{"Time":"2025-10-04T21:54:01.255442423+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_FileLifecycle_Complete_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.261610004+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_FileLifecycle_Complete_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.261661172+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_FileLifecycle_Complete_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.261678594+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_FileLifecycle_Complete_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.261690446+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_FileLifecycle_Complete_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.261701742+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_FileLifecycle_Complete_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.261712524+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_FileLifecycle_Complete_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_file_lifecycle_integration_test.go:22\n"}
{"Time":"2025-10-04T21:54:01.261721737+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_FileLifecycle_Complete_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.261732242+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_FileLifecycle_Complete_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.261743185+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_FileLifecycle_Complete_Integration","Output":"        \tTest:       \tTestWebSocket_FileLifecycle_Complete_Integration\n"}
{"Time":"2025-10-04T21:54:01.261771978+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_FileLifecycle_Complete_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.261801379+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_FileLifecycle_Complete_Integration","Output":"--- FAIL: TestWebSocket_FileLifecycle_Complete_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.261830114+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_FileLifecycle_Complete_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.261849483+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_FileValidation_Comprehensive_Integration"}
{"Time":"2025-10-04T21:54:01.261863374+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_FileValidation_Comprehensive_Integration","Output":"=== RUN   TestWebSocket_FileValidation_Comprehensive_Integration\n"}
{"Time":"2025-10-04T21:54:01.262541632+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_FileValidation_Comprehensive_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.265418771+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_FileValidation_Comprehensive_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.265456382+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_FileValidation_Comprehensive_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.265472151+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_FileValidation_Comprehensive_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.26548401+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_FileValidation_Comprehensive_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.26549455+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_FileValidation_Comprehensive_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.265505845+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_FileValidation_Comprehensive_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_file_lifecycle_integration_test.go:31\n"}
{"Time":"2025-10-04T21:54:01.265515958+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_FileValidation_Comprehensive_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.265527069+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_FileValidation_Comprehensive_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.26555336+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_FileValidation_Comprehensive_Integration","Output":"        \tTest:       \tTestWebSocket_FileValidation_Comprehensive_Integration\n"}
{"Time":"2025-10-04T21:54:01.265566513+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_FileValidation_Comprehensive_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.265582883+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_FileValidation_Comprehensive_Integration","Output":"--- FAIL: TestWebSocket_FileValidation_Comprehensive_Integration (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.265605635+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_FileValidation_Comprehensive_Integration","Elapsed":0}
{"Time":"2025-10-04T21:54:01.265620784+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConfigurationDrivenPaths_Integration"}
{"Time":"2025-10-04T21:54:01.265631363+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConfigurationDrivenPaths_Integration","Output":"=== RUN   TestWebSocket_ConfigurationDrivenPaths_Integration\n"}
{"Time":"2025-10-04T21:54:01.26634932+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConfigurationDrivenPaths_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.269237166+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConfigurationDrivenPaths_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.269275788+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConfigurationDrivenPaths_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.269290988+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConfigurationDrivenPaths_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.269301964+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConfigurationDrivenPaths_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.269312641+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConfigurationDrivenPaths_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.269340263+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConfigurationDrivenPaths_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_file_lifecycle_integration_test.go:45\n"}
{"Time":"2025-10-04T21:54:01.269354428+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConfigurationDrivenPaths_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.269367056+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConfigurationDrivenPaths_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.269379622+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConfigurationDrivenPaths_Integration","Output":"        \tTest:       \tTestWebSocket_ConfigurationDrivenPaths_Integration\n"}
{"Time":"2025-10-04T21:54:01.269395807+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConfigurationDrivenPaths_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.269413895+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConfigurationDrivenPaths_Integration","Output":"--- FAIL: TestWebSocket_ConfigurationDrivenPaths_Integration (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.269431187+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_ConfigurationDrivenPaths_Integration","Elapsed":0}
{"Time":"2025-10-04T21:54:01.269447444+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_TestUtilsIntegration_Integration"}
{"Time":"2025-10-04T21:54:01.269462455+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_TestUtilsIntegration_Integration","Output":"=== RUN   TestWebSocket_TestUtilsIntegration_Integration\n"}
{"Time":"2025-10-04T21:54:01.269481036+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_TestUtilsIntegration_Integration","Output":"--- PASS: TestWebSocket_TestUtilsIntegration_Integration (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.269497793+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestWebSocket_TestUtilsIntegration_Integration","Elapsed":0}
{"Time":"2025-10-04T21:54:01.26951364+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentClients_Integration"}
{"Time":"2025-10-04T21:54:01.269524611+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentClients_Integration","Output":"=== RUN   TestPerformance_ConcurrentClients_Integration\n"}
{"Time":"2025-10-04T21:54:01.270342178+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentClients_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.273234969+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentClients_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.273268398+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentClients_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.273283279+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentClients_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.27329489+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentClients_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.273306959+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentClients_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.273318737+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentClients_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_performance_integration_test.go:38\n"}
{"Time":"2025-10-04T21:54:01.273329451+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentClients_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.273341611+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentClients_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.273352653+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentClients_Integration","Output":"        \tTest:       \tTestPerformance_ConcurrentClients_Integration\n"}
{"Time":"2025-10-04T21:54:01.273361836+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentClients_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.273382623+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentClients_Integration","Output":"--- FAIL: TestPerformance_ConcurrentClients_Integration (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.273415255+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentClients_Integration","Elapsed":0}
{"Time":"2025-10-04T21:54:01.273430367+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentOperationsAdvanced_Integration"}
{"Time":"2025-10-04T21:54:01.273441019+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentOperationsAdvanced_Integration","Output":"=== RUN   TestPerformance_ConcurrentOperationsAdvanced_Integration\n"}
{"Time":"2025-10-04T21:54:01.274097676+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentOperationsAdvanced_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.276977936+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentOperationsAdvanced_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.277013483+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentOperationsAdvanced_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.277028284+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentOperationsAdvanced_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.277039772+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentOperationsAdvanced_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.277050852+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentOperationsAdvanced_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.277061972+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentOperationsAdvanced_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_performance_integration_test.go:53\n"}
{"Time":"2025-10-04T21:54:01.277073308+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentOperationsAdvanced_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.277085176+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentOperationsAdvanced_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.277095969+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentOperationsAdvanced_Integration","Output":"        \tTest:       \tTestPerformance_ConcurrentOperationsAdvanced_Integration\n"}
{"Time":"2025-10-04T21:54:01.277124685+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentOperationsAdvanced_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.277143842+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentOperationsAdvanced_Integration","Output":"--- FAIL: TestPerformance_ConcurrentOperationsAdvanced_Integration (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.277253523+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ConcurrentOperationsAdvanced_Integration","Elapsed":0}
{"Time":"2025-10-04T21:54:01.277285518+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_LoadTesting_Integration"}
{"Time":"2025-10-04T21:54:01.277297652+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_LoadTesting_Integration","Output":"=== RUN   TestPerformance_LoadTesting_Integration\n"}
{"Time":"2025-10-04T21:54:01.277893527+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_LoadTesting_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.282487704+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_LoadTesting_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.282554985+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_LoadTesting_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.282582671+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_LoadTesting_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.282608686+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_LoadTesting_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.282626599+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_LoadTesting_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.28263989+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_LoadTesting_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_performance_integration_test.go:72\n"}
{"Time":"2025-10-04T21:54:01.282650537+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_LoadTesting_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.282675251+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_LoadTesting_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.282689023+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_LoadTesting_Integration","Output":"        \tTest:       \tTestPerformance_LoadTesting_Integration\n"}
{"Time":"2025-10-04T21:54:01.282696412+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_LoadTesting_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.282717291+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_LoadTesting_Integration","Output":"--- FAIL: TestPerformance_LoadTesting_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.282729194+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_LoadTesting_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.282743931+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_StressTesting_Integration"}
{"Time":"2025-10-04T21:54:01.282751243+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_StressTesting_Integration","Output":"=== RUN   TestPerformance_StressTesting_Integration\n"}
{"Time":"2025-10-04T21:54:01.284238407+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_StressTesting_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.289924859+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_StressTesting_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.289983155+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_StressTesting_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.290009769+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_StressTesting_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.290034062+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_StressTesting_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.290057376+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_StressTesting_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.290093896+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_StressTesting_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_performance_integration_test.go:87\n"}
{"Time":"2025-10-04T21:54:01.290108432+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_StressTesting_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.290129094+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_StressTesting_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.290152294+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_StressTesting_Integration","Output":"        \tTest:       \tTestPerformance_StressTesting_Integration\n"}
{"Time":"2025-10-04T21:54:01.290166322+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_StressTesting_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.29018723+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_StressTesting_Integration","Output":"--- FAIL: TestPerformance_StressTesting_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.290201459+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_StressTesting_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.290253109+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_MemoryUsage_Integration"}
{"Time":"2025-10-04T21:54:01.290272095+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_MemoryUsage_Integration","Output":"=== RUN   TestPerformance_MemoryUsage_Integration\n"}
{"Time":"2025-10-04T21:54:01.291741539+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_MemoryUsage_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.297473793+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_MemoryUsage_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.297540602+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_MemoryUsage_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.29756851+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_MemoryUsage_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.297595317+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_MemoryUsage_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.297632422+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_MemoryUsage_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.297648042+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_MemoryUsage_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_performance_integration_test.go:106\n"}
{"Time":"2025-10-04T21:54:01.297662976+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_MemoryUsage_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.29768592+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_MemoryUsage_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.297705973+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_MemoryUsage_Integration","Output":"        \tTest:       \tTestPerformance_MemoryUsage_Integration\n"}
{"Time":"2025-10-04T21:54:01.297718859+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_MemoryUsage_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.297742782+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_MemoryUsage_Integration","Output":"--- FAIL: TestPerformance_MemoryUsage_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.297760904+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_MemoryUsage_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.297794003+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_MemoryLeaks_Integration"}
{"Time":"2025-10-04T21:54:01.297811737+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_MemoryLeaks_Integration","Output":"=== RUN   TestPerformance_MemoryLeaks_Integration\n"}
{"Time":"2025-10-04T21:54:01.299199138+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_MemoryLeaks_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.300872843+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:01.305177044+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_MemoryLeaks_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.305269679+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_MemoryLeaks_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.305299891+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_MemoryLeaks_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.305327698+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_MemoryLeaks_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.305341859+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_MemoryLeaks_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.305354967+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_MemoryLeaks_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_performance_integration_test.go:121\n"}
{"Time":"2025-10-04T21:54:01.305375758+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_MemoryLeaks_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.305399088+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_MemoryLeaks_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.305419293+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_MemoryLeaks_Integration","Output":"        \tTest:       \tTestPerformance_MemoryLeaks_Integration\n"}
{"Time":"2025-10-04T21:54:01.305431902+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_MemoryLeaks_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.305452589+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_MemoryLeaks_Integration","Output":"--- FAIL: TestPerformance_MemoryLeaks_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.305474416+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_MemoryLeaks_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.305499165+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ResponseTime_Integration"}
{"Time":"2025-10-04T21:54:01.305529256+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ResponseTime_Integration","Output":"=== RUN   TestPerformance_ResponseTime_Integration\n"}
{"Time":"2025-10-04T21:54:01.307059794+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ResponseTime_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.311231048+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:01.311433494+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:01.311450609+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:01.311555881+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:01.312167385+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:01.312234426+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:01.312269806+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:01.312293538+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:01.312314947+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:01.312339624+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"    camera_asserters_test.go:147: ✅ Monitor stopped successfully\n"}
{"Time":"2025-10-04T21:54:01.313612212+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ResponseTime_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.313681235+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ResponseTime_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.313706397+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ResponseTime_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.3137596+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ResponseTime_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.313785895+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ResponseTime_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.31380791+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ResponseTime_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_performance_integration_test.go:140\n"}
{"Time":"2025-10-04T21:54:01.313827858+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ResponseTime_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.313849299+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ResponseTime_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.313869742+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ResponseTime_Integration","Output":"        \tTest:       \tTestPerformance_ResponseTime_Integration\n"}
{"Time":"2025-10-04T21:54:01.313887741+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ResponseTime_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.313920329+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ResponseTime_Integration","Output":"--- FAIL: TestPerformance_ResponseTime_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.313962125+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ResponseTime_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.313993073+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Throughput_Integration"}
{"Time":"2025-10-04T21:54:01.314012059+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Throughput_Integration","Output":"=== RUN   TestPerformance_Throughput_Integration\n"}
{"Time":"2025-10-04T21:54:01.315535767+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Throughput_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.321904723+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Throughput_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.321969443+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Throughput_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.321993338+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Throughput_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.322018308+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Throughput_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.322049404+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Throughput_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.322063702+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Throughput_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_performance_integration_test.go:155\n"}
{"Time":"2025-10-04T21:54:01.322075682+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Throughput_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.322089363+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Throughput_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.322110063+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Throughput_Integration","Output":"        \tTest:       \tTestPerformance_Throughput_Integration\n"}
{"Time":"2025-10-04T21:54:01.322132006+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Throughput_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.322153843+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Throughput_Integration","Output":"--- FAIL: TestPerformance_Throughput_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.322166482+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Throughput_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.322185642+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Scalability_Integration"}
{"Time":"2025-10-04T21:54:01.322245497+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Scalability_Integration","Output":"=== RUN   TestPerformance_Scalability_Integration\n"}
{"Time":"2025-10-04T21:54:01.322736976+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:01.32278636+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:01.322817641+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:01.322892764+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:01.322923033+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:01.322943928+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:01.322967314+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:01.322986945+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:01.323009667+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:01.323041771+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:01.323068959+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:01.323177982+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:01.323409547+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:01.323463341+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:01.323487269+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:01.323506202+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:01.323530653+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:01.32355742+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:01.323577801+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:01.324051649+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Scalability_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.329127825+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Scalability_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.329196521+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Scalability_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.329246969+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Scalability_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.329270754+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Scalability_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.329291368+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Scalability_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.329310341+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Scalability_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_performance_integration_test.go:174\n"}
{"Time":"2025-10-04T21:54:01.329328063+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Scalability_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.329362443+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Scalability_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.329377015+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Scalability_Integration","Output":"        \tTest:       \tTestPerformance_Scalability_Integration\n"}
{"Time":"2025-10-04T21:54:01.329392235+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Scalability_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.329413179+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Scalability_Integration","Output":"--- FAIL: TestPerformance_Scalability_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.329432075+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Scalability_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.32944947+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ResourceUtilization_Integration"}
{"Time":"2025-10-04T21:54:01.329463719+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ResourceUtilization_Integration","Output":"=== RUN   TestPerformance_ResourceUtilization_Integration\n"}
{"Time":"2025-10-04T21:54:01.330553962+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ResourceUtilization_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.335636648+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ResourceUtilization_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.335717606+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ResourceUtilization_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.335743491+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ResourceUtilization_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.335764187+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ResourceUtilization_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.335786208+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ResourceUtilization_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.335824586+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ResourceUtilization_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_performance_integration_test.go:189\n"}
{"Time":"2025-10-04T21:54:01.335844977+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ResourceUtilization_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.335865629+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ResourceUtilization_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.33589474+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ResourceUtilization_Integration","Output":"        \tTest:       \tTestPerformance_ResourceUtilization_Integration\n"}
{"Time":"2025-10-04T21:54:01.335915507+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ResourceUtilization_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.335943071+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ResourceUtilization_Integration","Output":"--- FAIL: TestPerformance_ResourceUtilization_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.335973397+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_ResourceUtilization_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.335999487+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Regression_Integration"}
{"Time":"2025-10-04T21:54:01.336017873+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Regression_Integration","Output":"=== RUN   TestPerformance_Regression_Integration\n"}
{"Time":"2025-10-04T21:54:01.337240509+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Regression_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.34207569+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Regression_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.342123679+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Regression_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.342146803+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Regression_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.342184633+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Regression_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.342206602+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Regression_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.342250868+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Regression_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_performance_integration_test.go:208\n"}
{"Time":"2025-10-04T21:54:01.34226895+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Regression_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.342287373+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Regression_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.342306949+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Regression_Integration","Output":"        \tTest:       \tTestPerformance_Regression_Integration\n"}
{"Time":"2025-10-04T21:54:01.342324832+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Regression_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.342356745+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Regression_Integration","Output":"--- FAIL: TestPerformance_Regression_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.342385097+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Regression_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.34240897+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Baseline_Integration"}
{"Time":"2025-10-04T21:54:01.342426043+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Baseline_Integration","Output":"=== RUN   TestPerformance_Baseline_Integration\n"}
{"Time":"2025-10-04T21:54:01.343478993+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Baseline_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.347862721+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Baseline_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.347935197+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Baseline_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.347958468+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Baseline_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.347976867+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Baseline_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.348004012+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Baseline_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.348025938+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Baseline_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_performance_integration_test.go:223\n"}
{"Time":"2025-10-04T21:54:01.348043747+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Baseline_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.348068831+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Baseline_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.348084672+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Baseline_Integration","Output":"        \tTest:       \tTestPerformance_Baseline_Integration\n"}
{"Time":"2025-10-04T21:54:01.348094812+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Baseline_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.348109601+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Baseline_Integration","Output":"--- FAIL: TestPerformance_Baseline_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.348126248+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestPerformance_Baseline_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.348141539+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileLifecycle_Complete_Integration"}
{"Time":"2025-10-04T21:54:01.348150169+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileLifecycle_Complete_Integration","Output":"=== RUN   TestRecording_FileLifecycle_Complete_Integration\n"}
{"Time":"2025-10-04T21:54:01.349203727+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileLifecycle_Complete_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.353650619+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileLifecycle_Complete_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.353694422+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileLifecycle_Complete_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.353703551+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileLifecycle_Complete_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.353710299+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileLifecycle_Complete_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.353717135+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileLifecycle_Complete_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.353724685+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileLifecycle_Complete_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_recording_integration_test.go:44\n"}
{"Time":"2025-10-04T21:54:01.353734907+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileLifecycle_Complete_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.353746739+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileLifecycle_Complete_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.35375881+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileLifecycle_Complete_Integration","Output":"        \tTest:       \tTestRecording_FileLifecycle_Complete_Integration\n"}
{"Time":"2025-10-04T21:54:01.353769335+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileLifecycle_Complete_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.353792298+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileLifecycle_Complete_Integration","Output":"--- FAIL: TestRecording_FileLifecycle_Complete_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.353821047+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileLifecycle_Complete_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.353842207+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileValidation_Comprehensive_Integration"}
{"Time":"2025-10-04T21:54:01.353849135+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileValidation_Comprehensive_Integration","Output":"=== RUN   TestRecording_FileValidation_Comprehensive_Integration\n"}
{"Time":"2025-10-04T21:54:01.354729768+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileValidation_Comprehensive_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.357660414+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileValidation_Comprehensive_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.357702814+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileValidation_Comprehensive_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.357724357+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileValidation_Comprehensive_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.357743681+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileValidation_Comprehensive_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.357762928+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileValidation_Comprehensive_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.357781872+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileValidation_Comprehensive_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_recording_integration_test.go:59\n"}
{"Time":"2025-10-04T21:54:01.357793808+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileValidation_Comprehensive_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.357801232+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileValidation_Comprehensive_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.357819724+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileValidation_Comprehensive_Integration","Output":"        \tTest:       \tTestRecording_FileValidation_Comprehensive_Integration\n"}
{"Time":"2025-10-04T21:54:01.357830811+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileValidation_Comprehensive_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.35785018+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileValidation_Comprehensive_Integration","Output":"--- FAIL: TestRecording_FileValidation_Comprehensive_Integration (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.357863891+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileValidation_Comprehensive_Integration","Elapsed":0}
{"Time":"2025-10-04T21:54:01.357872771+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StatelessArchitecture_Integration"}
{"Time":"2025-10-04T21:54:01.357884577+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StatelessArchitecture_Integration","Output":"=== RUN   TestRecording_StatelessArchitecture_Integration\n"}
{"Time":"2025-10-04T21:54:01.358686806+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StatelessArchitecture_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.361864005+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StatelessArchitecture_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.361919802+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StatelessArchitecture_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.361936488+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StatelessArchitecture_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.361952836+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StatelessArchitecture_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.361970804+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StatelessArchitecture_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.361980269+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StatelessArchitecture_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_recording_integration_test.go:73\n"}
{"Time":"2025-10-04T21:54:01.362004099+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StatelessArchitecture_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.362012076+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StatelessArchitecture_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.362019344+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StatelessArchitecture_Integration","Output":"        \tTest:       \tTestRecording_StatelessArchitecture_Integration\n"}
{"Time":"2025-10-04T21:54:01.362025599+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StatelessArchitecture_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.362042144+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StatelessArchitecture_Integration","Output":"--- FAIL: TestRecording_StatelessArchitecture_Integration (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.362068359+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StatelessArchitecture_Integration","Elapsed":0}
{"Time":"2025-10-04T21:54:01.362079284+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_MediaMTXSourceOfTruth_Integration"}
{"Time":"2025-10-04T21:54:01.362085258+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_MediaMTXSourceOfTruth_Integration","Output":"=== RUN   TestRecording_MediaMTXSourceOfTruth_Integration\n"}
{"Time":"2025-10-04T21:54:01.362821577+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_MediaMTXSourceOfTruth_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.365845392+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_MediaMTXSourceOfTruth_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.36588692+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_MediaMTXSourceOfTruth_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.365902877+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_MediaMTXSourceOfTruth_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.365917375+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_MediaMTXSourceOfTruth_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.365950824+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_MediaMTXSourceOfTruth_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.36596656+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_MediaMTXSourceOfTruth_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_recording_integration_test.go:90\n"}
{"Time":"2025-10-04T21:54:01.365979284+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_MediaMTXSourceOfTruth_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.365986754+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_MediaMTXSourceOfTruth_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.365993883+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_MediaMTXSourceOfTruth_Integration","Output":"        \tTest:       \tTestRecording_MediaMTXSourceOfTruth_Integration\n"}
{"Time":"2025-10-04T21:54:01.366000077+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_MediaMTXSourceOfTruth_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.366011715+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_MediaMTXSourceOfTruth_Integration","Output":"--- FAIL: TestRecording_MediaMTXSourceOfTruth_Integration (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.366026652+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_MediaMTXSourceOfTruth_Integration","Elapsed":0}
{"Time":"2025-10-04T21:54:01.366040706+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_BasicWorkflow_Integration"}
{"Time":"2025-10-04T21:54:01.36604751+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_BasicWorkflow_Integration","Output":"=== RUN   TestRecording_BasicWorkflow_Integration\n"}
{"Time":"2025-10-04T21:54:01.366873731+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_BasicWorkflow_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.369931371+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_BasicWorkflow_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.369975428+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_BasicWorkflow_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.370006525+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_BasicWorkflow_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.370025789+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_BasicWorkflow_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.370043745+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_BasicWorkflow_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.370053724+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_BasicWorkflow_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_recording_integration_test.go:110\n"}
{"Time":"2025-10-04T21:54:01.370060363+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_BasicWorkflow_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.370067445+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_BasicWorkflow_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.370081148+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_BasicWorkflow_Integration","Output":"        \tTest:       \tTestRecording_BasicWorkflow_Integration\n"}
{"Time":"2025-10-04T21:54:01.370089439+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_BasicWorkflow_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.370102633+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_BasicWorkflow_Integration","Output":"--- FAIL: TestRecording_BasicWorkflow_Integration (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.370119513+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_BasicWorkflow_Integration","Elapsed":0}
{"Time":"2025-10-04T21:54:01.37013127+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StartRecording_Integration"}
{"Time":"2025-10-04T21:54:01.370137078+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StartRecording_Integration","Output":"=== RUN   TestRecording_StartRecording_Integration\n"}
{"Time":"2025-10-04T21:54:01.370882906+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StartRecording_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.376579052+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StartRecording_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.376651287+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StartRecording_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.376678556+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StartRecording_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.376703819+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StartRecording_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.376731041+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StartRecording_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.376749961+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StartRecording_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_recording_integration_test.go:126\n"}
{"Time":"2025-10-04T21:54:01.376767131+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StartRecording_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.376774677+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StartRecording_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.376783943+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StartRecording_Integration","Output":"        \tTest:       \tTestRecording_StartRecording_Integration\n"}
{"Time":"2025-10-04T21:54:01.376794132+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StartRecording_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.376813313+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StartRecording_Integration","Output":"--- FAIL: TestRecording_StartRecording_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.376827265+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StartRecording_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.376860018+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StopRecording_Integration"}
{"Time":"2025-10-04T21:54:01.376874742+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StopRecording_Integration","Output":"=== RUN   TestRecording_StopRecording_Integration\n"}
{"Time":"2025-10-04T21:54:01.378196937+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StopRecording_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.384708673+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StopRecording_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.384767639+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StopRecording_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.384795642+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StopRecording_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.38482422+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StopRecording_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.384844976+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StopRecording_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.384863425+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StopRecording_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_recording_integration_test.go:142\n"}
{"Time":"2025-10-04T21:54:01.384876285+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StopRecording_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.384889277+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StopRecording_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.384902263+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StopRecording_Integration","Output":"        \tTest:       \tTestRecording_StopRecording_Integration\n"}
{"Time":"2025-10-04T21:54:01.384929852+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StopRecording_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.384972494+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StopRecording_Integration","Output":"--- FAIL: TestRecording_StopRecording_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.384987619+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_StopRecording_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.385018496+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_RecordingStatus_Integration"}
{"Time":"2025-10-04T21:54:01.385038051+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_RecordingStatus_Integration","Output":"=== RUN   TestRecording_RecordingStatus_Integration\n"}
{"Time":"2025-10-04T21:54:01.386689032+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_RecordingStatus_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.393704954+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_RecordingStatus_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.393790689+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_RecordingStatus_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.39381772+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_RecordingStatus_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.39384151+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_RecordingStatus_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.393873252+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_RecordingStatus_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.39388957+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_RecordingStatus_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_recording_integration_test.go:158\n"}
{"Time":"2025-10-04T21:54:01.393905537+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_RecordingStatus_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.39393155+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_RecordingStatus_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.39397718+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_RecordingStatus_Integration","Output":"        \tTest:       \tTestRecording_RecordingStatus_Integration\n"}
{"Time":"2025-10-04T21:54:01.393992711+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_RecordingStatus_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.394027755+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_RecordingStatus_Integration","Output":"--- FAIL: TestRecording_RecordingStatus_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.394049794+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_RecordingStatus_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.394069872+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_DurationManagement_Integration"}
{"Time":"2025-10-04T21:54:01.39409134+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_DurationManagement_Integration","Output":"=== RUN   TestRecording_DurationManagement_Integration\n"}
{"Time":"2025-10-04T21:54:01.39581926+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_DurationManagement_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.402754828+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_DurationManagement_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.402820934+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_DurationManagement_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.402848371+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_DurationManagement_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.402873262+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_DurationManagement_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.402912056+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_DurationManagement_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.402933692+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_DurationManagement_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_recording_integration_test.go:178\n"}
{"Time":"2025-10-04T21:54:01.402949761+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_DurationManagement_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.402994017+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_DurationManagement_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.403023449+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_DurationManagement_Integration","Output":"        \tTest:       \tTestRecording_DurationManagement_Integration\n"}
{"Time":"2025-10-04T21:54:01.403039807+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_DurationManagement_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.403063642+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_DurationManagement_Integration","Output":"--- FAIL: TestRecording_DurationManagement_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.403090637+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_DurationManagement_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.403121654+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FormatSupport_Integration"}
{"Time":"2025-10-04T21:54:01.403137774+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FormatSupport_Integration","Output":"=== RUN   TestRecording_FormatSupport_Integration\n"}
{"Time":"2025-10-04T21:54:01.404636775+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FormatSupport_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.411058312+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FormatSupport_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.411118989+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FormatSupport_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.411146878+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FormatSupport_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.411171835+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FormatSupport_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.411198012+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FormatSupport_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.411283971+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FormatSupport_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_recording_integration_test.go:194\n"}
{"Time":"2025-10-04T21:54:01.411315778+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FormatSupport_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.411336558+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FormatSupport_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.411353761+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FormatSupport_Integration","Output":"        \tTest:       \tTestRecording_FormatSupport_Integration\n"}
{"Time":"2025-10-04T21:54:01.411370507+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FormatSupport_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.411404702+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FormatSupport_Integration","Output":"--- FAIL: TestRecording_FormatSupport_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.411427157+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FormatSupport_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.411464203+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_STANAG4609Compliance_Integration"}
{"Time":"2025-10-04T21:54:01.411488155+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_STANAG4609Compliance_Integration","Output":"=== RUN   TestRecording_STANAG4609Compliance_Integration\n"}
{"Time":"2025-10-04T21:54:01.413240077+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_STANAG4609Compliance_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.420987988+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_STANAG4609Compliance_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.421073944+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_STANAG4609Compliance_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.421106085+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_STANAG4609Compliance_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.421159722+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_STANAG4609Compliance_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.421190771+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_STANAG4609Compliance_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.421233725+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_STANAG4609Compliance_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_recording_integration_test.go:210\n"}
{"Time":"2025-10-04T21:54:01.421269337+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_STANAG4609Compliance_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.421298131+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_STANAG4609Compliance_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.421325112+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_STANAG4609Compliance_Integration","Output":"        \tTest:       \tTestRecording_STANAG4609Compliance_Integration\n"}
{"Time":"2025-10-04T21:54:01.421351344+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_STANAG4609Compliance_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.421397771+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_STANAG4609Compliance_Integration","Output":"--- FAIL: TestRecording_STANAG4609Compliance_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.42143812+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_STANAG4609Compliance_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.421472141+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileManagement_Integration"}
{"Time":"2025-10-04T21:54:01.421495832+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileManagement_Integration","Output":"=== RUN   TestRecording_FileManagement_Integration\n"}
{"Time":"2025-10-04T21:54:01.423071065+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileManagement_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.423660458+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:01.430004404+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileManagement_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.430070892+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileManagement_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.4301027+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileManagement_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.430129259+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileManagement_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.430155461+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileManagement_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.430182598+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileManagement_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_recording_integration_test.go:230\n"}
{"Time":"2025-10-04T21:54:01.43020732+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileManagement_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.430273606+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileManagement_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.430301907+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileManagement_Integration","Output":"        \tTest:       \tTestRecording_FileManagement_Integration\n"}
{"Time":"2025-10-04T21:54:01.430326939+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileManagement_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.430362037+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileManagement_Integration","Output":"--- FAIL: TestRecording_FileManagement_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.430407571+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileManagement_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.43046663+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileListing_Integration"}
{"Time":"2025-10-04T21:54:01.43049331+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileListing_Integration","Output":"=== RUN   TestRecording_FileListing_Integration\n"}
{"Time":"2025-10-04T21:54:01.432087147+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileListing_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.434011658+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:01.434084269+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:01.434115911+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:01.434147499+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:01.434424887+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:01.434472701+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:01.434569956+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:01.434608287+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:01.434656365+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:01.435086804+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"    camera_asserters_test.go:147: ✅ Monitor stopped successfully\n"}
{"Time":"2025-10-04T21:54:01.439547209+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileListing_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.439608935+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileListing_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.4396769+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileListing_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.439710076+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileListing_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.439737555+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileListing_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.439749618+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileListing_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_recording_integration_test.go:246\n"}
{"Time":"2025-10-04T21:54:01.439759971+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileListing_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.439770056+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileListing_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.439784827+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileListing_Integration","Output":"        \tTest:       \tTestRecording_FileListing_Integration\n"}
{"Time":"2025-10-04T21:54:01.43979502+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileListing_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.439816541+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileListing_Integration","Output":"--- FAIL: TestRecording_FileListing_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.439834176+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileListing_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.439855698+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileCleanup_Integration"}
{"Time":"2025-10-04T21:54:01.439867422+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileCleanup_Integration","Output":"=== RUN   TestRecording_FileCleanup_Integration\n"}
{"Time":"2025-10-04T21:54:01.441397311+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileCleanup_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.445102686+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"    camera_error_handling_test.go:189: ✅ Rapid start/stop cycles validated\n"}
{"Time":"2025-10-04T21:54:01.445183742+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/rapid_start_stop_cycles","Output":"--- PASS: TestCameraMonitor_EdgeCases_Comprehensive/rapid_start_stop_cycles (0.61s)\n"}
{"Time":"2025-10-04T21:54:01.445243459+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/rapid_start_stop_cycles","Elapsed":0.61}
{"Time":"2025-10-04T21:54:01.445268409+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/concurrent_operations"}
{"Time":"2025-10-04T21:54:01.445279198+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/concurrent_operations","Output":"=== RUN   TestCameraMonitor_EdgeCases_Comprehensive/concurrent_operations\n"}
{"Time":"2025-10-04T21:54:01.445292679+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/concurrent_operations","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:01.445315663+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/concurrent_operations","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:01.445393399+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/concurrent_operations","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:01.44567338+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/concurrent_operations","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:01.445723566+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/concurrent_operations","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:01.445741905+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/concurrent_operations","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:01.445758425+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/concurrent_operations","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:01.445770389+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/concurrent_operations","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:01.445794373+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/concurrent_operations","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:01.445812333+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:01.445829549+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:01.445850538+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:01.445965832+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:01.445991548+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:01.44600567+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:01.44602458+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:01.446042544+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:01.446060162+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:01.44607435+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:01.447863304+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileCleanup_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.447917006+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileCleanup_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.447950697+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileCleanup_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.447998378+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileCleanup_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.448019882+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileCleanup_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.448040475+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileCleanup_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_recording_integration_test.go:262\n"}
{"Time":"2025-10-04T21:54:01.448057374+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileCleanup_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.448082661+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileCleanup_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.448099356+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileCleanup_Integration","Output":"        \tTest:       \tTestRecording_FileCleanup_Integration\n"}
{"Time":"2025-10-04T21:54:01.448105817+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileCleanup_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.448117109+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileCleanup_Integration","Output":"--- FAIL: TestRecording_FileCleanup_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.448124231+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_FileCleanup_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.448142631+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_ConcurrentRecordings_Integration"}
{"Time":"2025-10-04T21:54:01.448152009+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_ConcurrentRecordings_Integration","Output":"=== RUN   TestRecording_ConcurrentRecordings_Integration\n"}
{"Time":"2025-10-04T21:54:01.448955527+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_ConcurrentRecordings_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.454723602+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_ConcurrentRecordings_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.454792289+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_ConcurrentRecordings_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.454817565+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_ConcurrentRecordings_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.454844425+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_ConcurrentRecordings_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.45486848+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_ConcurrentRecordings_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.454883493+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_ConcurrentRecordings_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_recording_integration_test.go:282\n"}
{"Time":"2025-10-04T21:54:01.454896144+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_ConcurrentRecordings_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.454909842+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_ConcurrentRecordings_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.454939801+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_ConcurrentRecordings_Integration","Output":"        \tTest:       \tTestRecording_ConcurrentRecordings_Integration\n"}
{"Time":"2025-10-04T21:54:01.454962904+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_ConcurrentRecordings_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.454990594+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_ConcurrentRecordings_Integration","Output":"--- FAIL: TestRecording_ConcurrentRecordings_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.455011887+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_ConcurrentRecordings_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.455043256+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_MultipleCameras_Integration"}
{"Time":"2025-10-04T21:54:01.455062975+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_MultipleCameras_Integration","Output":"=== RUN   TestRecording_MultipleCameras_Integration\n"}
{"Time":"2025-10-04T21:54:01.456562989+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_MultipleCameras_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.464186179+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_MultipleCameras_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.464286486+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_MultipleCameras_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.464321172+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_MultipleCameras_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.464346015+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_MultipleCameras_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.464363876+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_MultipleCameras_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.464380809+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_MultipleCameras_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_recording_integration_test.go:298\n"}
{"Time":"2025-10-04T21:54:01.464405296+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_MultipleCameras_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.464442262+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_MultipleCameras_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.464465874+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_MultipleCameras_Integration","Output":"        \tTest:       \tTestRecording_MultipleCameras_Integration\n"}
{"Time":"2025-10-04T21:54:01.464482942+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_MultipleCameras_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.464518593+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_MultipleCameras_Integration","Output":"--- FAIL: TestRecording_MultipleCameras_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.464561426+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_MultipleCameras_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.464597998+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_InvalidDevice_Integration"}
{"Time":"2025-10-04T21:54:01.464622741+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_InvalidDevice_Integration","Output":"=== RUN   TestRecording_InvalidDevice_Integration\n"}
{"Time":"2025-10-04T21:54:01.466407449+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_InvalidDevice_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.473392112+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_InvalidDevice_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.473452248+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_InvalidDevice_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.473479914+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_InvalidDevice_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.47350411+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_InvalidDevice_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.473530769+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_InvalidDevice_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.473554904+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_InvalidDevice_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_recording_integration_test.go:318\n"}
{"Time":"2025-10-04T21:54:01.473571798+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_InvalidDevice_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.473589247+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_InvalidDevice_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.473616547+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_InvalidDevice_Integration","Output":"        \tTest:       \tTestRecording_InvalidDevice_Integration\n"}
{"Time":"2025-10-04T21:54:01.473659191+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_InvalidDevice_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.473686285+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_InvalidDevice_Integration","Output":"--- FAIL: TestRecording_InvalidDevice_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.473712574+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_InvalidDevice_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.473742021+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_UnauthorizedAccess_Integration"}
{"Time":"2025-10-04T21:54:01.473764999+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_UnauthorizedAccess_Integration","Output":"=== RUN   TestRecording_UnauthorizedAccess_Integration\n"}
{"Time":"2025-10-04T21:54:01.475530289+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_UnauthorizedAccess_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.482481156+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_UnauthorizedAccess_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.482549355+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_UnauthorizedAccess_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.482580667+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_UnauthorizedAccess_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.482610658+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_UnauthorizedAccess_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.482636023+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_UnauthorizedAccess_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.482653449+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_UnauthorizedAccess_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_recording_integration_test.go:334\n"}
{"Time":"2025-10-04T21:54:01.482681954+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_UnauthorizedAccess_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.482710472+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_UnauthorizedAccess_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.482752848+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_UnauthorizedAccess_Integration","Output":"        \tTest:       \tTestRecording_UnauthorizedAccess_Integration\n"}
{"Time":"2025-10-04T21:54:01.482771299+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_UnauthorizedAccess_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.482805185+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_UnauthorizedAccess_Integration","Output":"--- FAIL: TestRecording_UnauthorizedAccess_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.482827351+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_UnauthorizedAccess_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.482855218+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_NetworkErrorRecovery_Integration"}
{"Time":"2025-10-04T21:54:01.482875883+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_NetworkErrorRecovery_Integration","Output":"=== RUN   TestRecording_NetworkErrorRecovery_Integration\n"}
{"Time":"2025-10-04T21:54:01.484645575+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_NetworkErrorRecovery_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.49156285+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_NetworkErrorRecovery_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.491625779+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_NetworkErrorRecovery_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.491657894+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_NetworkErrorRecovery_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.491688396+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_NetworkErrorRecovery_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.491710772+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_NetworkErrorRecovery_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.491747612+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_NetworkErrorRecovery_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_recording_integration_test.go:350\n"}
{"Time":"2025-10-04T21:54:01.491774857+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_NetworkErrorRecovery_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.491800081+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_NetworkErrorRecovery_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.491818334+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_NetworkErrorRecovery_Integration","Output":"        \tTest:       \tTestRecording_NetworkErrorRecovery_Integration\n"}
{"Time":"2025-10-04T21:54:01.491834195+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_NetworkErrorRecovery_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.49186443+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_NetworkErrorRecovery_Integration","Output":"--- FAIL: TestRecording_NetworkErrorRecovery_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.491891438+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_NetworkErrorRecovery_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.49192007+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_PerformanceTargets_Integration"}
{"Time":"2025-10-04T21:54:01.491937002+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_PerformanceTargets_Integration","Output":"=== RUN   TestRecording_PerformanceTargets_Integration\n"}
{"Time":"2025-10-04T21:54:01.493759772+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_PerformanceTargets_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.500361669+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_PerformanceTargets_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.500433005+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_PerformanceTargets_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.500455441+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_PerformanceTargets_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.500504133+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_PerformanceTargets_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.500524837+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_PerformanceTargets_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.500539989+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_PerformanceTargets_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_recording_integration_test.go:370\n"}
{"Time":"2025-10-04T21:54:01.500558828+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_PerformanceTargets_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.500582657+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_PerformanceTargets_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.500601839+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_PerformanceTargets_Integration","Output":"        \tTest:       \tTestRecording_PerformanceTargets_Integration\n"}
{"Time":"2025-10-04T21:54:01.5006158+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_PerformanceTargets_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.500639538+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_PerformanceTargets_Integration","Output":"--- FAIL: TestRecording_PerformanceTargets_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.500664128+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_PerformanceTargets_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.500697719+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_LoadTesting_Integration"}
{"Time":"2025-10-04T21:54:01.500719046+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_LoadTesting_Integration","Output":"=== RUN   TestRecording_LoadTesting_Integration\n"}
{"Time":"2025-10-04T21:54:01.502356291+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_LoadTesting_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.509604968+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_LoadTesting_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.509708277+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_LoadTesting_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.509740737+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_LoadTesting_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.509766978+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_LoadTesting_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.509792825+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_LoadTesting_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.509818569+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_LoadTesting_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_recording_integration_test.go:386\n"}
{"Time":"2025-10-04T21:54:01.509844046+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_LoadTesting_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.509873445+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_LoadTesting_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.509900049+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_LoadTesting_Integration","Output":"        \tTest:       \tTestRecording_LoadTesting_Integration\n"}
{"Time":"2025-10-04T21:54:01.509922392+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_LoadTesting_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.509965523+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_LoadTesting_Integration","Output":"--- FAIL: TestRecording_LoadTesting_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.510005196+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestRecording_LoadTesting_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.510041337+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionPersistence_Integration"}
{"Time":"2025-10-04T21:54:01.510064841+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionPersistence_Integration","Output":"=== RUN   TestSessionManagement_SessionPersistence_Integration\n"}
{"Time":"2025-10-04T21:54:01.511831808+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionPersistence_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.518936637+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionPersistence_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.519020352+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionPersistence_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.519069606+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionPersistence_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.519098485+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionPersistence_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.519126262+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionPersistence_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.519152115+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionPersistence_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_session_management_integration_test.go:38\n"}
{"Time":"2025-10-04T21:54:01.519176684+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionPersistence_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.51922798+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionPersistence_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.519302868+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionPersistence_Integration","Output":"        \tTest:       \tTestSessionManagement_SessionPersistence_Integration\n"}
{"Time":"2025-10-04T21:54:01.519336967+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionPersistence_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.519375004+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionPersistence_Integration","Output":"--- FAIL: TestSessionManagement_SessionPersistence_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.519440156+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionPersistence_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.519476289+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionState_Integration"}
{"Time":"2025-10-04T21:54:01.519509065+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionState_Integration","Output":"=== RUN   TestSessionManagement_SessionState_Integration\n"}
{"Time":"2025-10-04T21:54:01.521072905+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionState_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.527938626+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionState_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.528004308+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionState_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.528036395+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionState_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.528064164+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionState_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.528091066+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionState_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.528117906+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionState_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_session_management_integration_test.go:53\n"}
{"Time":"2025-10-04T21:54:01.528143933+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionState_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.528182466+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionState_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.528283585+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionState_Integration","Output":"        \tTest:       \tTestSessionManagement_SessionState_Integration\n"}
{"Time":"2025-10-04T21:54:01.528326238+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionState_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.528393859+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionState_Integration","Output":"--- FAIL: TestSessionManagement_SessionState_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.528434605+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionState_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.528468266+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionCleanup_Integration"}
{"Time":"2025-10-04T21:54:01.528492317+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionCleanup_Integration","Output":"=== RUN   TestSessionManagement_SessionCleanup_Integration\n"}
{"Time":"2025-10-04T21:54:01.530048329+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionCleanup_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.53691687+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionCleanup_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.536995078+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionCleanup_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.537028524+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionCleanup_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.537056389+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionCleanup_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.53709386+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionCleanup_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.537123755+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionCleanup_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_session_management_integration_test.go:72\n"}
{"Time":"2025-10-04T21:54:01.537147731+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionCleanup_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.537199127+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionCleanup_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.537290222+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionCleanup_Integration","Output":"        \tTest:       \tTestSessionManagement_SessionCleanup_Integration\n"}
{"Time":"2025-10-04T21:54:01.537325789+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionCleanup_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.537358241+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionCleanup_Integration","Output":"--- FAIL: TestSessionManagement_SessionCleanup_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.537394015+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionCleanup_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.537424539+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ResourceCleanup_Integration"}
{"Time":"2025-10-04T21:54:01.537451934+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ResourceCleanup_Integration","Output":"=== RUN   TestSessionManagement_ResourceCleanup_Integration\n"}
{"Time":"2025-10-04T21:54:01.539154368+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ResourceCleanup_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.542795176+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ResourceCleanup_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.54286356+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ResourceCleanup_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.542890007+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ResourceCleanup_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.542912391+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ResourceCleanup_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.542935012+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ResourceCleanup_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.54298184+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ResourceCleanup_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_session_management_integration_test.go:87\n"}
{"Time":"2025-10-04T21:54:01.543004654+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ResourceCleanup_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.543026273+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ResourceCleanup_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.543050248+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ResourceCleanup_Integration","Output":"        \tTest:       \tTestSessionManagement_ResourceCleanup_Integration\n"}
{"Time":"2025-10-04T21:54:01.543079173+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ResourceCleanup_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.543113051+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ResourceCleanup_Integration","Output":"--- FAIL: TestSessionManagement_ResourceCleanup_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.543146141+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ResourceCleanup_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.54317654+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ConcurrentSessions_Integration"}
{"Time":"2025-10-04T21:54:01.543196422+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ConcurrentSessions_Integration","Output":"=== RUN   TestSessionManagement_ConcurrentSessions_Integration\n"}
{"Time":"2025-10-04T21:54:01.54449947+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ConcurrentSessions_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.546844756+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:01.551755336+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ConcurrentSessions_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.551854362+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ConcurrentSessions_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.551888116+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ConcurrentSessions_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.551914369+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ConcurrentSessions_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.551935133+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ConcurrentSessions_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.551958678+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ConcurrentSessions_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_session_management_integration_test.go:106\n"}
{"Time":"2025-10-04T21:54:01.551969846+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ConcurrentSessions_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.551979887+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ConcurrentSessions_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.551998504+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ConcurrentSessions_Integration","Output":"        \tTest:       \tTestSessionManagement_ConcurrentSessions_Integration\n"}
{"Time":"2025-10-04T21:54:01.552009324+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ConcurrentSessions_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.552029638+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ConcurrentSessions_Integration","Output":"--- FAIL: TestSessionManagement_ConcurrentSessions_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.552047704+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ConcurrentSessions_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.552070151+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionIsolation_Integration"}
{"Time":"2025-10-04T21:54:01.552094715+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionIsolation_Integration","Output":"=== RUN   TestSessionManagement_SessionIsolation_Integration\n"}
{"Time":"2025-10-04T21:54:01.55359101+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionIsolation_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.558376808+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"    camera_error_handling_test.go:245: ✅ Concurrent operations validated\n"}
{"Time":"2025-10-04T21:54:01.558436116+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/concurrent_operations","Output":"--- PASS: TestCameraMonitor_EdgeCases_Comprehensive/concurrent_operations (0.11s)\n"}
{"Time":"2025-10-04T21:54:01.558451899+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/concurrent_operations","Elapsed":0.11}
{"Time":"2025-10-04T21:54:01.558467356+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/device_creation_edge_cases"}
{"Time":"2025-10-04T21:54:01.55847713+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/device_creation_edge_cases","Output":"=== RUN   TestCameraMonitor_EdgeCases_Comprehensive/device_creation_edge_cases\n"}
{"Time":"2025-10-04T21:54:01.558524029+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/device_creation_edge_cases","Output":"time=\"2025-10-04 21:54:01\" level=error msg=\"monitor_start_return_err - monitor is already running\"\n"}
{"Time":"2025-10-04T21:54:01.558544464+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"    progressive_readiness.go:61: ⏳ Monitor Start needs readiness - waiting for event (not polling)\n"}
{"Time":"2025-10-04T21:54:01.558564003+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"    progressive_readiness.go:67: 🔔 Readiness event received for Monitor Start - retrying operation\n"}
{"Time":"2025-10-04T21:54:01.558578117+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=error msg=\"monitor_start_return_err - monitor is already running\"\n"}
{"Time":"2025-10-04T21:54:01.558719249+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"    camera_asserters_test.go:127: \n"}
{"Time":"2025-10-04T21:54:01.558742797+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/camera/camera_asserters_test.go:127\n"}
{"Time":"2025-10-04T21:54:01.558760144+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/camera/camera_error_handling_test.go:250\n"}
{"Time":"2025-10-04T21:54:01.558786615+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.558797703+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"        \t            \tmonitor is already running\n"}
{"Time":"2025-10-04T21:54:01.558808261+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"        \tTest:       \tTestCameraMonitor_EdgeCases_Comprehensive\n"}
{"Time":"2025-10-04T21:54:01.558818006+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"        \tMessages:   \tMonitor must start successfully\n"}
{"Time":"2025-10-04T21:54:01.558834197+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/device_creation_edge_cases","Output":"    testing.go:1679: test executed panic(nil) or runtime.Goexit: subtest may have called FailNow on a parent test\n"}
{"Time":"2025-10-04T21:54:01.558852335+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/device_creation_edge_cases","Output":"--- FAIL: TestCameraMonitor_EdgeCases_Comprehensive/device_creation_edge_cases (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.55886372+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/device_creation_edge_cases","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:01.558874291+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/device_creation_edge_cases","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:01.55888473+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/device_creation_edge_cases","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:01.558898018+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/device_creation_edge_cases","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:01.559065567+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/device_creation_edge_cases","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:01.559094791+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/device_creation_edge_cases","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:01.559111403+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/device_creation_edge_cases","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:01.559122451+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/device_creation_edge_cases","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:01.55914174+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/device_creation_edge_cases","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:01.559753185+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionIsolation_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.559810977+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionIsolation_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.559836494+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionIsolation_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.559859283+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionIsolation_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.559879316+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionIsolation_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.559900164+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionIsolation_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_session_management_integration_test.go:121\n"}
{"Time":"2025-10-04T21:54:01.559921256+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionIsolation_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.559943366+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionIsolation_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.559976424+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionIsolation_Integration","Output":"        \tTest:       \tTestSessionManagement_SessionIsolation_Integration\n"}
{"Time":"2025-10-04T21:54:01.560007533+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionIsolation_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.560052378+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionIsolation_Integration","Output":"--- FAIL: TestSessionManagement_SessionIsolation_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.560085114+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionIsolation_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.560111558+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionTimeout_Integration"}
{"Time":"2025-10-04T21:54:01.56013847+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionTimeout_Integration","Output":"=== RUN   TestSessionManagement_SessionTimeout_Integration\n"}
{"Time":"2025-10-04T21:54:01.561764593+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionTimeout_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.568507234+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionTimeout_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.568572329+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionTimeout_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.568605021+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionTimeout_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.568632825+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionTimeout_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.568659078+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionTimeout_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.568685896+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionTimeout_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_session_management_integration_test.go:140\n"}
{"Time":"2025-10-04T21:54:01.5687354+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionTimeout_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.568766919+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionTimeout_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.568821284+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionTimeout_Integration","Output":"        \tTest:       \tTestSessionManagement_SessionTimeout_Integration\n"}
{"Time":"2025-10-04T21:54:01.568849927+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionTimeout_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.568918235+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionTimeout_Integration","Output":"--- FAIL: TestSessionManagement_SessionTimeout_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.56896071+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionTimeout_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.568994888+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_IdleTimeout_Integration"}
{"Time":"2025-10-04T21:54:01.569018894+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_IdleTimeout_Integration","Output":"=== RUN   TestSessionManagement_IdleTimeout_Integration\n"}
{"Time":"2025-10-04T21:54:01.570595225+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_IdleTimeout_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.577494823+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_IdleTimeout_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.577574889+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_IdleTimeout_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.577608866+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_IdleTimeout_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.577646183+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_IdleTimeout_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.577674364+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_IdleTimeout_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.57770141+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_IdleTimeout_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_session_management_integration_test.go:155\n"}
{"Time":"2025-10-04T21:54:01.577749531+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_IdleTimeout_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.577780024+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_IdleTimeout_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.577818034+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_IdleTimeout_Integration","Output":"        \tTest:       \tTestSessionManagement_IdleTimeout_Integration\n"}
{"Time":"2025-10-04T21:54:01.577850708+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_IdleTimeout_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.577886566+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_IdleTimeout_Integration","Output":"--- FAIL: TestSessionManagement_IdleTimeout_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.577924494+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_IdleTimeout_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.577958492+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionRecovery_Integration"}
{"Time":"2025-10-04T21:54:01.577980444+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionRecovery_Integration","Output":"=== RUN   TestSessionManagement_SessionRecovery_Integration\n"}
{"Time":"2025-10-04T21:54:01.579660574+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionRecovery_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.586384025+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionRecovery_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.586445415+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionRecovery_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.586473824+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionRecovery_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.586498047+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionRecovery_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.586543818+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionRecovery_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.586570922+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionRecovery_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_session_management_integration_test.go:174\n"}
{"Time":"2025-10-04T21:54:01.586592501+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionRecovery_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.58661627+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionRecovery_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.586641548+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionRecovery_Integration","Output":"        \tTest:       \tTestSessionManagement_SessionRecovery_Integration\n"}
{"Time":"2025-10-04T21:54:01.586673272+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionRecovery_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.586706303+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionRecovery_Integration","Output":"--- FAIL: TestSessionManagement_SessionRecovery_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.586753696+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionRecovery_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.586784908+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_Reconnection_Integration"}
{"Time":"2025-10-04T21:54:01.586806557+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_Reconnection_Integration","Output":"=== RUN   TestSessionManagement_Reconnection_Integration\n"}
{"Time":"2025-10-04T21:54:01.588186682+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_Reconnection_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.595552334+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_Reconnection_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.595624873+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_Reconnection_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.595677757+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_Reconnection_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.595704807+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_Reconnection_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.595730425+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_Reconnection_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.595752338+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_Reconnection_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_session_management_integration_test.go:189\n"}
{"Time":"2025-10-04T21:54:01.595773349+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_Reconnection_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.59579826+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_Reconnection_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.59582383+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_Reconnection_Integration","Output":"        \tTest:       \tTestSessionManagement_Reconnection_Integration\n"}
{"Time":"2025-10-04T21:54:01.595854092+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_Reconnection_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.595900724+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_Reconnection_Integration","Output":"--- FAIL: TestSessionManagement_Reconnection_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.595937124+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_Reconnection_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.595968011+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionSecurity_Integration"}
{"Time":"2025-10-04T21:54:01.595990057+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionSecurity_Integration","Output":"=== RUN   TestSessionManagement_SessionSecurity_Integration\n"}
{"Time":"2025-10-04T21:54:01.597472592+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionSecurity_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.603406283+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionSecurity_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.603481622+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionSecurity_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.603512467+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionSecurity_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.603537815+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionSecurity_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.603561665+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionSecurity_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.60358595+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionSecurity_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_session_management_integration_test.go:208\n"}
{"Time":"2025-10-04T21:54:01.603607102+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionSecurity_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.603630763+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionSecurity_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.6036559+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionSecurity_Integration","Output":"        \tTest:       \tTestSessionManagement_SessionSecurity_Integration\n"}
{"Time":"2025-10-04T21:54:01.603678655+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionSecurity_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.603709305+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionSecurity_Integration","Output":"--- FAIL: TestSessionManagement_SessionSecurity_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.603784568+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionSecurity_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.603818105+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_AuthenticationPersistence_Integration"}
{"Time":"2025-10-04T21:54:01.60384034+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_AuthenticationPersistence_Integration","Output":"=== RUN   TestSessionManagement_AuthenticationPersistence_Integration\n"}
{"Time":"2025-10-04T21:54:01.605235049+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_AuthenticationPersistence_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.611377236+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_AuthenticationPersistence_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.61145761+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_AuthenticationPersistence_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.611489138+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_AuthenticationPersistence_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.611526049+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_AuthenticationPersistence_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.611549559+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_AuthenticationPersistence_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.611574236+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_AuthenticationPersistence_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_session_management_integration_test.go:223\n"}
{"Time":"2025-10-04T21:54:01.611596335+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_AuthenticationPersistence_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.611620311+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_AuthenticationPersistence_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.611673626+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_AuthenticationPersistence_Integration","Output":"        \tTest:       \tTestSessionManagement_AuthenticationPersistence_Integration\n"}
{"Time":"2025-10-04T21:54:01.611697903+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_AuthenticationPersistence_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.611727792+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_AuthenticationPersistence_Integration","Output":"--- FAIL: TestSessionManagement_AuthenticationPersistence_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.61175095+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_AuthenticationPersistence_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.611796451+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ComprehensiveSession_Integration"}
{"Time":"2025-10-04T21:54:01.611818325+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ComprehensiveSession_Integration","Output":"=== RUN   TestSessionManagement_ComprehensiveSession_Integration\n"}
{"Time":"2025-10-04T21:54:01.613085588+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ComprehensiveSession_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.618650444+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ComprehensiveSession_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.6186989+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ComprehensiveSession_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.618729071+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ComprehensiveSession_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.618757251+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ComprehensiveSession_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.618778472+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ComprehensiveSession_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.618796861+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ComprehensiveSession_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_session_management_integration_test.go:242\n"}
{"Time":"2025-10-04T21:54:01.618833861+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ComprehensiveSession_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.618855573+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ComprehensiveSession_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.61887531+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ComprehensiveSession_Integration","Output":"        \tTest:       \tTestSessionManagement_ComprehensiveSession_Integration\n"}
{"Time":"2025-10-04T21:54:01.618892042+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ComprehensiveSession_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.618916551+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ComprehensiveSession_Integration","Output":"--- FAIL: TestSessionManagement_ComprehensiveSession_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.618943952+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_ComprehensiveSession_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.618966608+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionLifecycle_Integration"}
{"Time":"2025-10-04T21:54:01.61898311+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionLifecycle_Integration","Output":"=== RUN   TestSessionManagement_SessionLifecycle_Integration\n"}
{"Time":"2025-10-04T21:54:01.620062998+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionLifecycle_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.625176591+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionLifecycle_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.625253269+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionLifecycle_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.625281066+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionLifecycle_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.625299109+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionLifecycle_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.625330781+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionLifecycle_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.625351623+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionLifecycle_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_session_management_integration_test.go:257\n"}
{"Time":"2025-10-04T21:54:01.625364393+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionLifecycle_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.62537659+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionLifecycle_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.625388779+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionLifecycle_Integration","Output":"        \tTest:       \tTestSessionManagement_SessionLifecycle_Integration\n"}
{"Time":"2025-10-04T21:54:01.625399396+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionLifecycle_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.625420731+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionLifecycle_Integration","Output":"--- FAIL: TestSessionManagement_SessionLifecycle_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.625440674+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSessionManagement_SessionLifecycle_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.625456507+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileLifecycle_Complete_Integration"}
{"Time":"2025-10-04T21:54:01.625471875+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileLifecycle_Complete_Integration","Output":"=== RUN   TestSnapshot_FileLifecycle_Complete_Integration\n"}
{"Time":"2025-10-04T21:54:01.627687356+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileLifecycle_Complete_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.633187274+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileLifecycle_Complete_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.633263317+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileLifecycle_Complete_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.633280444+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileLifecycle_Complete_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.633291909+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileLifecycle_Complete_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.633302821+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileLifecycle_Complete_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.633313304+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileLifecycle_Complete_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_snapshot_integration_test.go:43\n"}
{"Time":"2025-10-04T21:54:01.633323503+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileLifecycle_Complete_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.633333914+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileLifecycle_Complete_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.633345118+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileLifecycle_Complete_Integration","Output":"        \tTest:       \tTestSnapshot_FileLifecycle_Complete_Integration\n"}
{"Time":"2025-10-04T21:54:01.633355572+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileLifecycle_Complete_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.633379704+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileLifecycle_Complete_Integration","Output":"--- FAIL: TestSnapshot_FileLifecycle_Complete_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.63339897+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileLifecycle_Complete_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.633416807+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileValidation_Comprehensive_Integration"}
{"Time":"2025-10-04T21:54:01.633427845+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileValidation_Comprehensive_Integration","Output":"=== RUN   TestSnapshot_FileValidation_Comprehensive_Integration\n"}
{"Time":"2025-10-04T21:54:01.634194508+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileValidation_Comprehensive_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.637068495+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileValidation_Comprehensive_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.637107938+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileValidation_Comprehensive_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.637123559+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileValidation_Comprehensive_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.637135324+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileValidation_Comprehensive_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.637146171+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileValidation_Comprehensive_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.637156973+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileValidation_Comprehensive_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_snapshot_integration_test.go:58\n"}
{"Time":"2025-10-04T21:54:01.637167285+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileValidation_Comprehensive_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.637177973+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileValidation_Comprehensive_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.637195668+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileValidation_Comprehensive_Integration","Output":"        \tTest:       \tTestSnapshot_FileValidation_Comprehensive_Integration\n"}
{"Time":"2025-10-04T21:54:01.637222996+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileValidation_Comprehensive_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.637266874+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileValidation_Comprehensive_Integration","Output":"--- FAIL: TestSnapshot_FileValidation_Comprehensive_Integration (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.637283827+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileValidation_Comprehensive_Integration","Elapsed":0}
{"Time":"2025-10-04T21:54:01.637297075+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_MultiTierPerformance_Integration"}
{"Time":"2025-10-04T21:54:01.63731097+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_MultiTierPerformance_Integration","Output":"=== RUN   TestSnapshot_MultiTierPerformance_Integration\n"}
{"Time":"2025-10-04T21:54:01.637993687+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_MultiTierPerformance_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.641434819+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_MultiTierPerformance_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.641498724+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_MultiTierPerformance_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.641513968+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_MultiTierPerformance_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.641525317+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_MultiTierPerformance_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.641535587+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_MultiTierPerformance_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.641545078+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_MultiTierPerformance_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_snapshot_integration_test.go:72\n"}
{"Time":"2025-10-04T21:54:01.641553844+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_MultiTierPerformance_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.641564743+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_MultiTierPerformance_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.641597684+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_MultiTierPerformance_Integration","Output":"        \tTest:       \tTestSnapshot_MultiTierPerformance_Integration\n"}
{"Time":"2025-10-04T21:54:01.641611001+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_MultiTierPerformance_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.641636868+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_MultiTierPerformance_Integration","Output":"--- FAIL: TestSnapshot_MultiTierPerformance_Integration (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.641661067+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_MultiTierPerformance_Integration","Elapsed":0}
{"Time":"2025-10-04T21:54:01.641677728+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier0DirectV4L2_Integration"}
{"Time":"2025-10-04T21:54:01.641692202+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier0DirectV4L2_Integration","Output":"=== RUN   TestSnapshot_Tier0DirectV4L2_Integration\n"}
{"Time":"2025-10-04T21:54:01.642359058+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier0DirectV4L2_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.645422212+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier0DirectV4L2_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.645467492+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier0DirectV4L2_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.645482405+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier0DirectV4L2_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.645494089+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier0DirectV4L2_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.645504857+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier0DirectV4L2_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.645515483+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier0DirectV4L2_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_snapshot_integration_test.go:89\n"}
{"Time":"2025-10-04T21:54:01.645527191+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier0DirectV4L2_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.645554913+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier0DirectV4L2_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.645568038+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier0DirectV4L2_Integration","Output":"        \tTest:       \tTestSnapshot_Tier0DirectV4L2_Integration\n"}
{"Time":"2025-10-04T21:54:01.645582684+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier0DirectV4L2_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.645600992+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier0DirectV4L2_Integration","Output":"--- FAIL: TestSnapshot_Tier0DirectV4L2_Integration (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.645618499+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier0DirectV4L2_Integration","Elapsed":0}
{"Time":"2025-10-04T21:54:01.645634476+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier1FFmpegDirect_Integration"}
{"Time":"2025-10-04T21:54:01.645645069+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier1FFmpegDirect_Integration","Output":"=== RUN   TestSnapshot_Tier1FFmpegDirect_Integration\n"}
{"Time":"2025-10-04T21:54:01.646309694+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier1FFmpegDirect_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.649128014+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier1FFmpegDirect_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.649164949+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier1FFmpegDirect_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.649179849+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier1FFmpegDirect_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.649191487+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier1FFmpegDirect_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.649202839+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier1FFmpegDirect_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.649245435+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier1FFmpegDirect_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_snapshot_integration_test.go:106\n"}
{"Time":"2025-10-04T21:54:01.649259978+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier1FFmpegDirect_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.649270578+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier1FFmpegDirect_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.649286746+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier1FFmpegDirect_Integration","Output":"        \tTest:       \tTestSnapshot_Tier1FFmpegDirect_Integration\n"}
{"Time":"2025-10-04T21:54:01.649298586+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier1FFmpegDirect_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.64931516+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier1FFmpegDirect_Integration","Output":"--- FAIL: TestSnapshot_Tier1FFmpegDirect_Integration (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.649333707+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier1FFmpegDirect_Integration","Elapsed":0}
{"Time":"2025-10-04T21:54:01.649349047+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier2RTSPReuse_Integration"}
{"Time":"2025-10-04T21:54:01.649363798+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier2RTSPReuse_Integration","Output":"=== RUN   TestSnapshot_Tier2RTSPReuse_Integration\n"}
{"Time":"2025-10-04T21:54:01.65084044+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier2RTSPReuse_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.657185558+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier2RTSPReuse_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.657267721+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier2RTSPReuse_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.657310837+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier2RTSPReuse_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.6573574+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier2RTSPReuse_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.657374928+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier2RTSPReuse_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.657396973+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier2RTSPReuse_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_snapshot_integration_test.go:123\n"}
{"Time":"2025-10-04T21:54:01.65742519+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier2RTSPReuse_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.657442985+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier2RTSPReuse_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.657458763+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier2RTSPReuse_Integration","Output":"        \tTest:       \tTestSnapshot_Tier2RTSPReuse_Integration\n"}
{"Time":"2025-10-04T21:54:01.657473828+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier2RTSPReuse_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.657507296+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier2RTSPReuse_Integration","Output":"--- FAIL: TestSnapshot_Tier2RTSPReuse_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.657538069+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier2RTSPReuse_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.657559043+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier3StreamActivation_Integration"}
{"Time":"2025-10-04T21:54:01.657582589+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier3StreamActivation_Integration","Output":"=== RUN   TestSnapshot_Tier3StreamActivation_Integration\n"}
{"Time":"2025-10-04T21:54:01.658535084+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier3StreamActivation_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.659413419+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive/device_creation_edge_cases","Elapsed":0}
{"Time":"2025-10-04T21:54:01.659449044+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Output":"--- FAIL: TestCameraMonitor_EdgeCases_Comprehensive (0.83s)\n"}
{"Time":"2025-10-04T21:54:01.659467946+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_EdgeCases_Comprehensive","Elapsed":0.83}
{"Time":"2025-10-04T21:54:01.659483935+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive"}
{"Time":"2025-10-04T21:54:01.659495577+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive","Output":"=== RUN   TestCameraMonitor_Performance_Comprehensive\n"}
{"Time":"2025-10-04T21:54:01.659628122+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:01.659651156+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:01.659667144+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:01.659697185+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive/performance_under_load"}
{"Time":"2025-10-04T21:54:01.659715394+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive/performance_under_load","Output":"=== RUN   TestCameraMonitor_Performance_Comprehensive/performance_under_load\n"}
{"Time":"2025-10-04T21:54:01.659759481+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive/performance_under_load","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:01.659779541+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive/performance_under_load","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:01.659828342+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive/performance_under_load","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:01.65992161+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive/performance_under_load","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:01.659961267+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive/performance_under_load","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:01.659984459+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive/performance_under_load","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:01.659996815+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive/performance_under_load","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:01.660011582+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive/performance_under_load","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:01.660026585+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive/performance_under_load","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:01.660044228+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:01.660060844+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:01.660075303+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:01.660219041+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:01.662698205+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier3StreamActivation_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.662779127+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier3StreamActivation_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.662795554+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier3StreamActivation_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.662806252+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier3StreamActivation_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.662816256+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier3StreamActivation_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.662846807+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier3StreamActivation_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_snapshot_integration_test.go:140\n"}
{"Time":"2025-10-04T21:54:01.662859364+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier3StreamActivation_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.662871441+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier3StreamActivation_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.662882996+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier3StreamActivation_Integration","Output":"        \tTest:       \tTestSnapshot_Tier3StreamActivation_Integration\n"}
{"Time":"2025-10-04T21:54:01.662894607+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier3StreamActivation_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.662916242+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier3StreamActivation_Integration","Output":"--- FAIL: TestSnapshot_Tier3StreamActivation_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.662928783+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_Tier3StreamActivation_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.662950888+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_BasicWorkflow_Integration"}
{"Time":"2025-10-04T21:54:01.662961636+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_BasicWorkflow_Integration","Output":"=== RUN   TestSnapshot_BasicWorkflow_Integration\n"}
{"Time":"2025-10-04T21:54:01.663762607+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_BasicWorkflow_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.668180159+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_BasicWorkflow_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.668262747+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_BasicWorkflow_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.668279233+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_BasicWorkflow_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.668311529+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_BasicWorkflow_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.668324282+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_BasicWorkflow_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.668333378+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_BasicWorkflow_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_snapshot_integration_test.go:160\n"}
{"Time":"2025-10-04T21:54:01.668343968+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_BasicWorkflow_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.668354855+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_BasicWorkflow_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.668366246+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_BasicWorkflow_Integration","Output":"        \tTest:       \tTestSnapshot_BasicWorkflow_Integration\n"}
{"Time":"2025-10-04T21:54:01.668387916+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_BasicWorkflow_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.668409842+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_BasicWorkflow_Integration","Output":"--- FAIL: TestSnapshot_BasicWorkflow_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.66842819+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_BasicWorkflow_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.668452067+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_CustomFilename_Integration"}
{"Time":"2025-10-04T21:54:01.668463304+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_CustomFilename_Integration","Output":"=== RUN   TestSnapshot_CustomFilename_Integration\n"}
{"Time":"2025-10-04T21:54:01.669185989+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_CustomFilename_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.672057382+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:01.672153887+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:01.672246936+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:01.672267922+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:01.672279228+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:01.672289382+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:01.672299583+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:01.674528276+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_CustomFilename_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.674580799+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_CustomFilename_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.674608502+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_CustomFilename_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.674631404+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_CustomFilename_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.674654237+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_CustomFilename_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.674677284+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_CustomFilename_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_snapshot_integration_test.go:176\n"}
{"Time":"2025-10-04T21:54:01.674699507+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_CustomFilename_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.674725032+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_CustomFilename_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.674789691+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_CustomFilename_Integration","Output":"        \tTest:       \tTestSnapshot_CustomFilename_Integration\n"}
{"Time":"2025-10-04T21:54:01.674824326+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_CustomFilename_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.674845573+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_CustomFilename_Integration","Output":"--- FAIL: TestSnapshot_CustomFilename_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.674863148+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_CustomFilename_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.674890013+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_ConcurrentCaptures_Integration"}
{"Time":"2025-10-04T21:54:01.674901481+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_ConcurrentCaptures_Integration","Output":"=== RUN   TestSnapshot_ConcurrentCaptures_Integration\n"}
{"Time":"2025-10-04T21:54:01.6756429+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_ConcurrentCaptures_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.6813777+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_ConcurrentCaptures_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.681453059+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_ConcurrentCaptures_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.68147733+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_ConcurrentCaptures_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.681497456+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_ConcurrentCaptures_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.68150882+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_ConcurrentCaptures_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.681518223+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_ConcurrentCaptures_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_snapshot_integration_test.go:192\n"}
{"Time":"2025-10-04T21:54:01.681546316+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_ConcurrentCaptures_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.681559282+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_ConcurrentCaptures_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.681570473+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_ConcurrentCaptures_Integration","Output":"        \tTest:       \tTestSnapshot_ConcurrentCaptures_Integration\n"}
{"Time":"2025-10-04T21:54:01.681579779+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_ConcurrentCaptures_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.681610865+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_ConcurrentCaptures_Integration","Output":"--- FAIL: TestSnapshot_ConcurrentCaptures_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.681622453+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_ConcurrentCaptures_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.681643016+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileManagement_Integration"}
{"Time":"2025-10-04T21:54:01.681652422+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileManagement_Integration","Output":"=== RUN   TestSnapshot_FileManagement_Integration\n"}
{"Time":"2025-10-04T21:54:01.683022828+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileManagement_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.688313429+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileManagement_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.688378389+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileManagement_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.688410432+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileManagement_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.688436558+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileManagement_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.688494288+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileManagement_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.688521058+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileManagement_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_snapshot_integration_test.go:212\n"}
{"Time":"2025-10-04T21:54:01.688544228+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileManagement_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.688570309+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileManagement_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.688596267+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileManagement_Integration","Output":"        \tTest:       \tTestSnapshot_FileManagement_Integration\n"}
{"Time":"2025-10-04T21:54:01.688623633+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileManagement_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.688658147+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileManagement_Integration","Output":"--- FAIL: TestSnapshot_FileManagement_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.688694782+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileManagement_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.68873302+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileCleanup_Integration"}
{"Time":"2025-10-04T21:54:01.688755658+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileCleanup_Integration","Output":"=== RUN   TestSnapshot_FileCleanup_Integration\n"}
{"Time":"2025-10-04T21:54:01.690198797+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileCleanup_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.697009808+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileCleanup_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.697076921+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileCleanup_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.697136079+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileCleanup_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.697166386+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileCleanup_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.697190961+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileCleanup_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.697232456+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileCleanup_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_snapshot_integration_test.go:228\n"}
{"Time":"2025-10-04T21:54:01.697266982+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileCleanup_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.697294919+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileCleanup_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.697321374+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileCleanup_Integration","Output":"        \tTest:       \tTestSnapshot_FileCleanup_Integration\n"}
{"Time":"2025-10-04T21:54:01.697343828+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileCleanup_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.697376039+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileCleanup_Integration","Output":"--- FAIL: TestSnapshot_FileCleanup_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.697410899+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_FileCleanup_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.697439681+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_StorageInfo_Integration"}
{"Time":"2025-10-04T21:54:01.697460965+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_StorageInfo_Integration","Output":"=== RUN   TestSnapshot_StorageInfo_Integration\n"}
{"Time":"2025-10-04T21:54:01.698892165+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_StorageInfo_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.705574444+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_StorageInfo_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.705641888+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_StorageInfo_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.705677756+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_StorageInfo_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.705705422+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_StorageInfo_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.705730039+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_StorageInfo_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.705753678+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_StorageInfo_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_snapshot_integration_test.go:244\n"}
{"Time":"2025-10-04T21:54:01.70577726+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_StorageInfo_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.705803537+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_StorageInfo_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.70584721+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_StorageInfo_Integration","Output":"        \tTest:       \tTestSnapshot_StorageInfo_Integration\n"}
{"Time":"2025-10-04T21:54:01.705870413+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_StorageInfo_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.705900879+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_StorageInfo_Integration","Output":"--- FAIL: TestSnapshot_StorageInfo_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.705940735+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_StorageInfo_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.705971255+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_InvalidDevice_Integration"}
{"Time":"2025-10-04T21:54:01.706013779+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_InvalidDevice_Integration","Output":"=== RUN   TestSnapshot_InvalidDevice_Integration\n"}
{"Time":"2025-10-04T21:54:01.707443069+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_InvalidDevice_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.714085486+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_InvalidDevice_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.714149661+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_InvalidDevice_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.714185008+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_InvalidDevice_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.714239637+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_InvalidDevice_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.71426897+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_InvalidDevice_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.714292537+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_InvalidDevice_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_snapshot_integration_test.go:264\n"}
{"Time":"2025-10-04T21:54:01.71431565+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_InvalidDevice_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.714342119+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_InvalidDevice_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.714368345+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_InvalidDevice_Integration","Output":"        \tTest:       \tTestSnapshot_InvalidDevice_Integration\n"}
{"Time":"2025-10-04T21:54:01.714390568+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_InvalidDevice_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.71444326+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_InvalidDevice_Integration","Output":"--- FAIL: TestSnapshot_InvalidDevice_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.714480421+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_InvalidDevice_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.714511317+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_UnauthorizedAccess_Integration"}
{"Time":"2025-10-04T21:54:01.714531841+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_UnauthorizedAccess_Integration","Output":"=== RUN   TestSnapshot_UnauthorizedAccess_Integration\n"}
{"Time":"2025-10-04T21:54:01.716077632+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_UnauthorizedAccess_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.723869068+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_UnauthorizedAccess_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.723940506+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_UnauthorizedAccess_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.723974437+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_UnauthorizedAccess_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.723997968+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_UnauthorizedAccess_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.724020383+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_UnauthorizedAccess_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.724042245+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_UnauthorizedAccess_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_snapshot_integration_test.go:280\n"}
{"Time":"2025-10-04T21:54:01.724063318+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_UnauthorizedAccess_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.724087728+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_UnauthorizedAccess_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.724135499+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_UnauthorizedAccess_Integration","Output":"        \tTest:       \tTestSnapshot_UnauthorizedAccess_Integration\n"}
{"Time":"2025-10-04T21:54:01.724157936+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_UnauthorizedAccess_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.72418845+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_UnauthorizedAccess_Integration","Output":"--- FAIL: TestSnapshot_UnauthorizedAccess_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.724245109+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_UnauthorizedAccess_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.724284866+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_NetworkErrorRecovery_Integration"}
{"Time":"2025-10-04T21:54:01.724305888+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_NetworkErrorRecovery_Integration","Output":"=== RUN   TestSnapshot_NetworkErrorRecovery_Integration\n"}
{"Time":"2025-10-04T21:54:01.725626786+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_NetworkErrorRecovery_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.731922653+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_NetworkErrorRecovery_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.731984744+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_NetworkErrorRecovery_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.732018199+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_NetworkErrorRecovery_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.732045709+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_NetworkErrorRecovery_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.732068001+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_NetworkErrorRecovery_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.732089048+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_NetworkErrorRecovery_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_snapshot_integration_test.go:296\n"}
{"Time":"2025-10-04T21:54:01.732110296+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_NetworkErrorRecovery_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.732154763+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_NetworkErrorRecovery_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.732180561+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_NetworkErrorRecovery_Integration","Output":"        \tTest:       \tTestSnapshot_NetworkErrorRecovery_Integration\n"}
{"Time":"2025-10-04T21:54:01.73220103+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_NetworkErrorRecovery_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.732263951+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_NetworkErrorRecovery_Integration","Output":"--- FAIL: TestSnapshot_NetworkErrorRecovery_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.732298592+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_NetworkErrorRecovery_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.732334376+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_PerformanceBenchmarks_Integration"}
{"Time":"2025-10-04T21:54:01.732355564+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_PerformanceBenchmarks_Integration","Output":"=== RUN   TestSnapshot_PerformanceBenchmarks_Integration\n"}
{"Time":"2025-10-04T21:54:01.733684692+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_PerformanceBenchmarks_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.737324532+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_PerformanceBenchmarks_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.737361549+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_PerformanceBenchmarks_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.737382105+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_PerformanceBenchmarks_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.737401181+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_PerformanceBenchmarks_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.737419741+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_PerformanceBenchmarks_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.737454495+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_PerformanceBenchmarks_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_snapshot_integration_test.go:316\n"}
{"Time":"2025-10-04T21:54:01.737468225+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_PerformanceBenchmarks_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.737478581+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_PerformanceBenchmarks_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.737493647+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_PerformanceBenchmarks_Integration","Output":"        \tTest:       \tTestSnapshot_PerformanceBenchmarks_Integration\n"}
{"Time":"2025-10-04T21:54:01.737505851+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_PerformanceBenchmarks_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.737521242+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_PerformanceBenchmarks_Integration","Output":"--- FAIL: TestSnapshot_PerformanceBenchmarks_Integration (0.01s)\n"}
{"Time":"2025-10-04T21:54:01.737531907+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_PerformanceBenchmarks_Integration","Elapsed":0.01}
{"Time":"2025-10-04T21:54:01.737544852+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_LoadTesting_Integration"}
{"Time":"2025-10-04T21:54:01.737553591+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_LoadTesting_Integration","Output":"=== RUN   TestSnapshot_LoadTesting_Integration\n"}
{"Time":"2025-10-04T21:54:01.738097313+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_LoadTesting_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.740914144+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_LoadTesting_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.74095119+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_LoadTesting_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.740970916+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_LoadTesting_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.741005466+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_LoadTesting_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.741033489+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_LoadTesting_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.741047721+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_LoadTesting_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_snapshot_integration_test.go:332\n"}
{"Time":"2025-10-04T21:54:01.741057456+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_LoadTesting_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.741068068+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_LoadTesting_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.741083389+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_LoadTesting_Integration","Output":"        \tTest:       \tTestSnapshot_LoadTesting_Integration\n"}
{"Time":"2025-10-04T21:54:01.741093878+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_LoadTesting_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.741108771+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_LoadTesting_Integration","Output":"--- FAIL: TestSnapshot_LoadTesting_Integration (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.741119256+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestSnapshot_LoadTesting_Integration","Elapsed":0}
{"Time":"2025-10-04T21:54:01.741461617+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_DeleteRecording_Integration"}
{"Time":"2025-10-04T21:54:01.741484657+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_DeleteRecording_Integration","Output":"=== RUN   TestUntestedAPI_DeleteRecording_Integration\n"}
{"Time":"2025-10-04T21:54:01.741914855+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_DeleteRecording_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.744838168+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_DeleteRecording_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.744895071+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_DeleteRecording_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.744915366+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_DeleteRecording_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.744934987+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_DeleteRecording_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.744952216+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_DeleteRecording_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.744973458+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_DeleteRecording_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_untested_methods_integration_test.go:43\n"}
{"Time":"2025-10-04T21:54:01.744983261+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_DeleteRecording_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.744994173+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_DeleteRecording_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.745005461+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_DeleteRecording_Integration","Output":"        \tTest:       \tTestUntestedAPI_DeleteRecording_Integration\n"}
{"Time":"2025-10-04T21:54:01.745017895+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_DeleteRecording_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.745038755+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_DeleteRecording_Integration","Output":"--- FAIL: TestUntestedAPI_DeleteRecording_Integration (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.745055597+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_DeleteRecording_Integration","Elapsed":0}
{"Time":"2025-10-04T21:54:01.745069084+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_StartStreaming_Integration"}
{"Time":"2025-10-04T21:54:01.745077669+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_StartStreaming_Integration","Output":"=== RUN   TestUntestedAPI_StartStreaming_Integration\n"}
{"Time":"2025-10-04T21:54:01.745742746+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_StartStreaming_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.748658648+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_StartStreaming_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.748703681+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_StartStreaming_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.748724364+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_StartStreaming_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.748743703+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_StartStreaming_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.748762077+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_StartStreaming_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.748779655+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_StartStreaming_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_untested_methods_integration_test.go:74\n"}
{"Time":"2025-10-04T21:54:01.748791714+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_StartStreaming_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.748802515+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_StartStreaming_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.748816623+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_StartStreaming_Integration","Output":"        \tTest:       \tTestUntestedAPI_StartStreaming_Integration\n"}
{"Time":"2025-10-04T21:54:01.748831451+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_StartStreaming_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.748848425+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_StartStreaming_Integration","Output":"--- FAIL: TestUntestedAPI_StartStreaming_Integration (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.748875399+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_StartStreaming_Integration","Elapsed":0}
{"Time":"2025-10-04T21:54:01.748888786+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_StopStreaming_Integration"}
{"Time":"2025-10-04T21:54:01.748897402+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_StopStreaming_Integration","Output":"=== RUN   TestUntestedAPI_StopStreaming_Integration\n"}
{"Time":"2025-10-04T21:54:01.750358757+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_StopStreaming_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.753259884+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_StopStreaming_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.753297552+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_StopStreaming_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.753317359+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_StopStreaming_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.753336612+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_StopStreaming_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.753355254+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_StopStreaming_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.753374595+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_StopStreaming_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_untested_methods_integration_test.go:99\n"}
{"Time":"2025-10-04T21:54:01.753389502+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_StopStreaming_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.753400615+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_StopStreaming_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.75342897+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_StopStreaming_Integration","Output":"        \tTest:       \tTestUntestedAPI_StopStreaming_Integration\n"}
{"Time":"2025-10-04T21:54:01.753445677+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_StopStreaming_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.753463286+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_StopStreaming_Integration","Output":"--- FAIL: TestUntestedAPI_StopStreaming_Integration (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.753478443+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_StopStreaming_Integration","Elapsed":0}
{"Time":"2025-10-04T21:54:01.753491854+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_AddExternalStream_Integration"}
{"Time":"2025-10-04T21:54:01.753500495+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_AddExternalStream_Integration","Output":"=== RUN   TestUntestedAPI_AddExternalStream_Integration\n"}
{"Time":"2025-10-04T21:54:01.754075691+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_AddExternalStream_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.756942902+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_AddExternalStream_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.756992504+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_AddExternalStream_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.757013355+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_AddExternalStream_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.757032165+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_AddExternalStream_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.757051383+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_AddExternalStream_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.757066257+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_AddExternalStream_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_untested_methods_integration_test.go:128\n"}
{"Time":"2025-10-04T21:54:01.75707608+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_AddExternalStream_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.757101273+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_AddExternalStream_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.757118529+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_AddExternalStream_Integration","Output":"        \tTest:       \tTestUntestedAPI_AddExternalStream_Integration\n"}
{"Time":"2025-10-04T21:54:01.75712907+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_AddExternalStream_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.757144828+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_AddExternalStream_Integration","Output":"--- FAIL: TestUntestedAPI_AddExternalStream_Integration (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.757155201+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_AddExternalStream_Integration","Elapsed":0}
{"Time":"2025-10-04T21:54:01.75716731+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_RemoveExternalStream_Integration"}
{"Time":"2025-10-04T21:54:01.757175953+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_RemoveExternalStream_Integration","Output":"=== RUN   TestUntestedAPI_RemoveExternalStream_Integration\n"}
{"Time":"2025-10-04T21:54:01.757770967+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_RemoveExternalStream_Integration","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.761178357+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:01.761580405+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive","Output":"    camera_error_handling_test.go:352: ✅ Performance under load validated (duration: 362.89µs)\n"}
{"Time":"2025-10-04T21:54:01.761639324+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive/performance_under_load","Output":"--- PASS: TestCameraMonitor_Performance_Comprehensive/performance_under_load (0.10s)\n"}
{"Time":"2025-10-04T21:54:01.761663918+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive/performance_under_load","Elapsed":0.1}
{"Time":"2025-10-04T21:54:01.761690103+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive/memory_usage_patterns"}
{"Time":"2025-10-04T21:54:01.761706996+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive/memory_usage_patterns","Output":"=== RUN   TestCameraMonitor_Performance_Comprehensive/memory_usage_patterns\n"}
{"Time":"2025-10-04T21:54:01.761738075+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive/memory_usage_patterns","Output":"time=\"2025-10-04 21:54:01\" level=error msg=\"monitor_start_return_err - monitor is already running\"\n"}
{"Time":"2025-10-04T21:54:01.761753744+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive","Output":"    progressive_readiness.go:61: ⏳ Monitor Start needs readiness - waiting for event (not polling)\n"}
{"Time":"2025-10-04T21:54:01.761768766+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive","Output":"    progressive_readiness.go:67: 🔔 Readiness event received for Monitor Start - retrying operation\n"}
{"Time":"2025-10-04T21:54:01.761779894+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=error msg=\"monitor_start_return_err - monitor is already running\"\n"}
{"Time":"2025-10-04T21:54:01.761800123+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_RemoveExternalStream_Integration","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.76181242+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_RemoveExternalStream_Integration","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.761823021+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_RemoveExternalStream_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.761833236+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_RemoveExternalStream_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.761843102+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_RemoveExternalStream_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.761853722+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_RemoveExternalStream_Integration","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_untested_methods_integration_test.go:157\n"}
{"Time":"2025-10-04T21:54:01.76186424+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_RemoveExternalStream_Integration","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.761876594+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_RemoveExternalStream_Integration","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.761896956+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_RemoveExternalStream_Integration","Output":"        \tTest:       \tTestUntestedAPI_RemoveExternalStream_Integration\n"}
{"Time":"2025-10-04T21:54:01.761908966+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_RemoveExternalStream_Integration","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.761922528+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_RemoveExternalStream_Integration","Output":"--- FAIL: TestUntestedAPI_RemoveExternalStream_Integration (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.761934009+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestUntestedAPI_RemoveExternalStream_Integration","Elapsed":0}
{"Time":"2025-10-04T21:54:01.761945172+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestCoveragePatterns_AsserterUsage"}
{"Time":"2025-10-04T21:54:01.761955352+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestCoveragePatterns_AsserterUsage","Output":"=== RUN   TestCoveragePatterns_AsserterUsage\n"}
{"Time":"2025-10-04T21:54:01.761975619+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive","Output":"    camera_asserters_test.go:127: \n"}
{"Time":"2025-10-04T21:54:01.76198839+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/camera/camera_asserters_test.go:127\n"}
{"Time":"2025-10-04T21:54:01.761998574+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/camera/camera_error_handling_test.go:357\n"}
{"Time":"2025-10-04T21:54:01.762008339+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.7620187+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive","Output":"        \t            \tmonitor is already running\n"}
{"Time":"2025-10-04T21:54:01.762028521+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive","Output":"        \tTest:       \tTestCameraMonitor_Performance_Comprehensive\n"}
{"Time":"2025-10-04T21:54:01.762039098+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive","Output":"        \tMessages:   \tMonitor must start successfully\n"}
{"Time":"2025-10-04T21:54:01.762051284+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive/memory_usage_patterns","Output":"    testing.go:1679: test executed panic(nil) or runtime.Goexit: subtest may have called FailNow on a parent test\n"}
{"Time":"2025-10-04T21:54:01.762074076+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive/memory_usage_patterns","Output":"--- FAIL: TestCameraMonitor_Performance_Comprehensive/memory_usage_patterns (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.76208945+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive/memory_usage_patterns","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:01.762106007+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive/memory_usage_patterns","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:01.762117043+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive/memory_usage_patterns","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:01.762127404+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive/memory_usage_patterns","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:01.762200218+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive/memory_usage_patterns","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:01.762290687+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive/memory_usage_patterns","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:01.762303646+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive/memory_usage_patterns","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:01.76231037+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive/memory_usage_patterns","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:01.762329086+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive/memory_usage_patterns","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:01.76288718+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestCoveragePatterns_AsserterUsage","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Loading configuration\"\n"}
{"Time":"2025-10-04T21:54:01.766131535+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestCoveragePatterns_AsserterUsage","Output":"    fixture_loader.go:38: \n"}
{"Time":"2025-10-04T21:54:01.766168922+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestCoveragePatterns_AsserterUsage","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/fixture_loader.go:38\n"}
{"Time":"2025-10-04T21:54:01.766195772+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestCoveragePatterns_AsserterUsage","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/testutils/setup.go:41\n"}
{"Time":"2025-10-04T21:54:01.766253167+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestCoveragePatterns_AsserterUsage","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_helper_test.go:61\n"}
{"Time":"2025-10-04T21:54:01.766268268+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestCoveragePatterns_AsserterUsage","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_asserters_test.go:47\n"}
{"Time":"2025-10-04T21:54:01.766280687+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestCoveragePatterns_AsserterUsage","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/websocket/test_untested_methods_integration_test.go:199\n"}
{"Time":"2025-10-04T21:54:01.766290496+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestCoveragePatterns_AsserterUsage","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:01.76630293+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestCoveragePatterns_AsserterUsage","Output":"        \t            \tconfiguration validation failed: validation error for field 'config': configuration validation failed: [validation error for field 'server.websocket_path': websocket path cannot be empty failed to validate codec configuration: validation error for field 'mediamtx.codec.video_profile': video profile must be one of [baseline main high high422 high444], got  validation error for field 'security.jwt_secret_key': JWT secret key cannot be empty]\n"}
{"Time":"2025-10-04T21:54:01.766319457+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestCoveragePatterns_AsserterUsage","Output":"        \tTest:       \tTestCoveragePatterns_AsserterUsage\n"}
{"Time":"2025-10-04T21:54:01.766333589+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestCoveragePatterns_AsserterUsage","Output":"        \tMessages:   \tFailed to load config from fixture config_valid_complete.yaml\n"}
{"Time":"2025-10-04T21:54:01.766349283+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestCoveragePatterns_AsserterUsage","Output":"--- FAIL: TestCoveragePatterns_AsserterUsage (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.766360739+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Test":"TestCoveragePatterns_AsserterUsage","Elapsed":0}
{"Time":"2025-10-04T21:54:01.766369814+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Output":"FAIL\n"}
{"Time":"2025-10-04T21:54:01.773797496+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Output":"coverage: 5.3% of statements in ./...\n"}
{"Time":"2025-10-04T21:54:01.802977568+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Output":"FAIL\tgithub.com/camerarecorder/mediamtx-camera-service-go/internal/websocket\t0.954s\n"}
{"Time":"2025-10-04T21:54:01.803027008+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/websocket","Elapsed":0.956}
{"Time":"2025-10-04T21:54:01.862725836+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive/memory_usage_patterns","Elapsed":0}
{"Time":"2025-10-04T21:54:01.862813075+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive","Output":"--- FAIL: TestCameraMonitor_Performance_Comprehensive (0.20s)\n"}
{"Time":"2025-10-04T21:54:01.862860625+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_Comprehensive","Elapsed":0.2}
{"Time":"2025-10-04T21:54:01.862901975+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_DeviceDetection_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:01.862926439+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_DeviceDetection_ReqCAM001_Success","Output":"=== RUN   TestRealHardware_DeviceDetection_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:01.862951711+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_DeviceDetection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:01.862977344+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_DeviceDetection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:01.863007871+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_DeviceDetection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:01.863121661+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_DeviceDetection_ReqCAM001_Success","Output":"    camera_hardware_comprehensive_test.go:21: Found 0 V4L2 devices\n"}
{"Time":"2025-10-04T21:54:01.863165038+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_DeviceDetection_ReqCAM001_Success","Output":"    camera_hardware_comprehensive_test.go:39: ✅ Real device detection validated\n"}
{"Time":"2025-10-04T21:54:01.863234152+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_DeviceDetection_ReqCAM001_Success","Output":"--- PASS: TestRealHardware_DeviceDetection_ReqCAM001_Success (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.863270561+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_DeviceDetection_ReqCAM001_Success","Elapsed":0}
{"Time":"2025-10-04T21:54:01.863299178+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_V4L2Commands_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:01.863323803+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_V4L2Commands_ReqCAM001_Success","Output":"=== RUN   TestRealHardware_V4L2Commands_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:01.863357767+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_V4L2Commands_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:01.863420468+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_V4L2Commands_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:01.863460604+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_V4L2Commands_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:01.863494177+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_V4L2Commands_ReqCAM001_Success","Output":"    camera_hardware_comprehensive_test.go:52: No V4L2 devices available for testing\n"}
{"Time":"2025-10-04T21:54:01.863532851+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_V4L2Commands_ReqCAM001_Success","Output":"--- SKIP: TestRealHardware_V4L2Commands_ReqCAM001_Success (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.863578659+04:00","Action":"skip","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_V4L2Commands_ReqCAM001_Success","Elapsed":0}
{"Time":"2025-10-04T21:54:01.863610942+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_DeviceInfoParsing_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:01.863635059+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_DeviceInfoParsing_ReqCAM001_Success","Output":"=== RUN   TestRealHardware_DeviceInfoParsing_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:01.863696515+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_DeviceInfoParsing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:01.863735475+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_DeviceInfoParsing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:01.863780203+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_DeviceInfoParsing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:01.863868315+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_DeviceInfoParsing_ReqCAM001_Success","Output":"    camera_hardware_comprehensive_test.go:85: No V4L2 devices available for testing\n"}
{"Time":"2025-10-04T21:54:01.863923512+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_DeviceInfoParsing_ReqCAM001_Success","Output":"--- SKIP: TestRealHardware_DeviceInfoParsing_ReqCAM001_Success (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.863956607+04:00","Action":"skip","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_DeviceInfoParsing_ReqCAM001_Success","Elapsed":0}
{"Time":"2025-10-04T21:54:01.863994081+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_Integration_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:01.864020547+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_Integration_ReqCAM001_Success","Output":"=== RUN   TestRealHardware_Integration_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:01.864070899+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_Integration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:01.864116999+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_Integration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:01.864152088+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_Integration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:01.864203817+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_Integration_ReqCAM001_Success","Output":"    camera_hardware_comprehensive_test.go:128: Integration test discovered 0 devices\n"}
{"Time":"2025-10-04T21:54:01.864284825+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_Integration_ReqCAM001_Success","Output":"    camera_hardware_comprehensive_test.go:151: ✅ Complete integration validated\n"}
{"Time":"2025-10-04T21:54:01.864337385+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_Integration_ReqCAM001_Success","Output":"--- PASS: TestRealHardware_Integration_ReqCAM001_Success (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.864368754+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_Integration_ReqCAM001_Success","Elapsed":0}
{"Time":"2025-10-04T21:54:01.864403503+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_ErrorScenarios_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:01.864430375+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_ErrorScenarios_ReqCAM001_Success","Output":"=== RUN   TestRealHardware_ErrorScenarios_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:01.864542222+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_ErrorScenarios_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:01.864588033+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_ErrorScenarios_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:01.864625035+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_ErrorScenarios_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:01.864659423+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_ErrorScenarios_ReqCAM001_Success","Output":"    camera_hardware_comprehensive_test.go:164: Testing error scenarios with device: /dev/video999\n"}
{"Time":"2025-10-04T21:54:01.864701219+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_ErrorScenarios_ReqCAM001_Success","Output":"    camera_hardware_comprehensive_test.go:166: ✅ Error scenarios validated\n"}
{"Time":"2025-10-04T21:54:01.86475389+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_ErrorScenarios_ReqCAM001_Success","Output":"--- PASS: TestRealHardware_ErrorScenarios_ReqCAM001_Success (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.864791701+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_ErrorScenarios_ReqCAM001_Success","Elapsed":0}
{"Time":"2025-10-04T21:54:01.864822741+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_FileSystemOperations_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:01.864847572+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_FileSystemOperations_ReqCAM001_Success","Output":"=== RUN   TestRealHardware_FileSystemOperations_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:01.864973711+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_FileSystemOperations_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:01.865010797+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_FileSystemOperations_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:01.865054995+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_FileSystemOperations_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:01.865557437+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_FileSystemOperations_ReqCAM001_Success","Output":"    camera_hardware_comprehensive_test.go:191: Found 2 V4L2 devices in /dev\n"}
{"Time":"2025-10-04T21:54:01.865605946+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_FileSystemOperations_ReqCAM001_Success","Output":"    camera_hardware_comprehensive_test.go:195: Testing device: /dev/video0\n"}
{"Time":"2025-10-04T21:54:01.865715438+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_FileSystemOperations_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:01.865752891+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_FileSystemOperations_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:01.86578847+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_FileSystemOperations_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:01.865929079+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_FileSystemOperations_ReqCAM001_Success","Output":"    camera_hardware_comprehensive_test.go:210: Device /dev/video0 not discovered by monitor (expected for non-camera devices)\n"}
{"Time":"2025-10-04T21:54:01.865967253+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_FileSystemOperations_ReqCAM001_Success","Output":"    camera_hardware_comprehensive_test.go:195: Testing device: /dev/video1\n"}
{"Time":"2025-10-04T21:54:01.866045997+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_FileSystemOperations_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:01.86610332+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_FileSystemOperations_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:01.866141775+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_FileSystemOperations_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:01.866255315+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_FileSystemOperations_ReqCAM001_Success","Output":"    camera_hardware_comprehensive_test.go:210: Device /dev/video1 not discovered by monitor (expected for non-camera devices)\n"}
{"Time":"2025-10-04T21:54:01.866296161+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_FileSystemOperations_ReqCAM001_Success","Output":"    camera_hardware_comprehensive_test.go:221: ✅ File system operations validated\n"}
{"Time":"2025-10-04T21:54:01.866341138+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_FileSystemOperations_ReqCAM001_Success","Output":"--- PASS: TestRealHardware_FileSystemOperations_ReqCAM001_Success (0.00s)\n"}
{"Time":"2025-10-04T21:54:01.866378741+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealHardware_FileSystemOperations_ReqCAM001_Success","Elapsed":0}
{"Time":"2025-10-04T21:54:01.866419485+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive"}
{"Time":"2025-10-04T21:54:01.866444955+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"=== RUN   TestCameraMonitor_Integration_Comprehensive\n"}
{"Time":"2025-10-04T21:54:01.866479524+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:01.866586307+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:01.866719263+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:01.866747384+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/full_lifecycle_multiple_cycles"}
{"Time":"2025-10-04T21:54:01.866760684+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/full_lifecycle_multiple_cycles","Output":"=== RUN   TestCameraMonitor_Integration_Comprehensive/full_lifecycle_multiple_cycles\n"}
{"Time":"2025-10-04T21:54:01.86678938+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/full_lifecycle_multiple_cycles","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:01.866807973+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/full_lifecycle_multiple_cycles","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:01.866852124+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/full_lifecycle_multiple_cycles","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:01.866940115+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/full_lifecycle_multiple_cycles","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:01.866967411+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/full_lifecycle_multiple_cycles","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:01.866981725+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/full_lifecycle_multiple_cycles","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:01.866996495+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/full_lifecycle_multiple_cycles","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:01.867039084+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/full_lifecycle_multiple_cycles","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:01.867052877+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/full_lifecycle_multiple_cycles","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:01.867088048+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:01.867112325+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:01.867125476+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:01.86714935+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:01.880142793+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:01.880262536+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:01.880294817+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:01.880312864+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:01.880330002+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:01.880337359+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:01.880343627+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:01.96835053+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:01.968437869+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:01.968479725+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:01.968509334+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:01.968535845+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:01.96869104+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:01.968757082+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:01.968789326+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:01.968815832+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:01.968848632+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:01.968876418+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"    camera_asserters_test.go:147: ✅ Monitor stopped successfully\n"}
{"Time":"2025-10-04T21:54:01.968910449+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:01.968932702+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:01.968953057+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:01.969249729+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:01.969300063+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:01.969328761+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:01.969363324+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:01.969392127+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:01.969417483+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:01.969461264+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:01.969519743+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:01.969551749+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:01.969585132+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:01.969618733+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:01.969652008+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:01.96970633+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:01.96975421+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:01.969789296+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:01.969838752+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:01\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:02.069969224+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:02.070085483+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"    camera_integration_test.go:38: ✅ Full lifecycle with multiple cycles validated\n"}
{"Time":"2025-10-04T21:54:02.070140187+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/full_lifecycle_multiple_cycles","Output":"--- PASS: TestCameraMonitor_Integration_Comprehensive/full_lifecycle_multiple_cycles (0.20s)\n"}
{"Time":"2025-10-04T21:54:02.070174966+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/full_lifecycle_multiple_cycles","Elapsed":0.2}
{"Time":"2025-10-04T21:54:02.070264913+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/error_handling_recovery"}
{"Time":"2025-10-04T21:54:02.070303424+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/error_handling_recovery","Output":"=== RUN   TestCameraMonitor_Integration_Comprehensive/error_handling_recovery\n"}
{"Time":"2025-10-04T21:54:02.070332158+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/error_handling_recovery","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:02.070367247+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/error_handling_recovery","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:02.070389452+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/error_handling_recovery","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:02.070410456+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/error_handling_recovery","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:02.070544325+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/error_handling_recovery","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:02.070581808+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/error_handling_recovery","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:02.070617005+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/error_handling_recovery","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:02.070652801+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/error_handling_recovery","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:02.070687405+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/error_handling_recovery","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:02.070714368+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/error_handling_recovery","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:02.070743782+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/error_handling_recovery","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:02.070798714+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/error_handling_recovery","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:02.071718678+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/error_handling_recovery","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:02.072342898+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/error_handling_recovery","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:02.072400221+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/error_handling_recovery","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:02.072441175+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/error_handling_recovery","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:02.072472493+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/error_handling_recovery","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:02.072505142+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/error_handling_recovery","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:02.072557708+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:02.072596093+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:02.072762843+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:02.072974757+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:02.073029055+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:02\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:02.073065678+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:02.073097732+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:02.073161185+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:02.073206536+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:02.073270269+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:02.172984425+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:02.173082991+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:02\" level=error msg=\"monitor_start_return_err - monitor is already running\"\n"}
{"Time":"2025-10-04T21:54:02.173126224+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"    camera_integration_test.go:55: ✅ Error handling and recovery validated\n"}
{"Time":"2025-10-04T21:54:02.173172498+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/error_handling_recovery","Output":"--- PASS: TestCameraMonitor_Integration_Comprehensive/error_handling_recovery (0.10s)\n"}
{"Time":"2025-10-04T21:54:02.173238228+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/error_handling_recovery","Elapsed":0.1}
{"Time":"2025-10-04T21:54:02.173287013+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/configuration_event_notifier_integration"}
{"Time":"2025-10-04T21:54:02.173313404+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/configuration_event_notifier_integration","Output":"=== RUN   TestCameraMonitor_Integration_Comprehensive/configuration_event_notifier_integration\n"}
{"Time":"2025-10-04T21:54:02.173351395+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"    camera_integration_test.go:72: ✅ Configuration and event notifier integration validated\n"}
{"Time":"2025-10-04T21:54:02.173384731+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/configuration_event_notifier_integration","Output":"--- PASS: TestCameraMonitor_Integration_Comprehensive/configuration_event_notifier_integration (0.00s)\n"}
{"Time":"2025-10-04T21:54:02.17342102+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/configuration_event_notifier_integration","Elapsed":0}
{"Time":"2025-10-04T21:54:02.173448903+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/resource_management_cleanup"}
{"Time":"2025-10-04T21:54:02.173501748+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/resource_management_cleanup","Output":"=== RUN   TestCameraMonitor_Integration_Comprehensive/resource_management_cleanup\n"}
{"Time":"2025-10-04T21:54:02.173543917+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"    camera_integration_test.go:88: ✅ Resource management and cleanup validated\n"}
{"Time":"2025-10-04T21:54:02.173578555+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/resource_management_cleanup","Output":"--- PASS: TestCameraMonitor_Integration_Comprehensive/resource_management_cleanup (0.00s)\n"}
{"Time":"2025-10-04T21:54:02.173615225+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/resource_management_cleanup","Elapsed":0}
{"Time":"2025-10-04T21:54:02.173643722+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/multiple_rapid_configuration_changes"}
{"Time":"2025-10-04T21:54:02.173668185+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/multiple_rapid_configuration_changes","Output":"=== RUN   TestCameraMonitor_Integration_Comprehensive/multiple_rapid_configuration_changes\n"}
{"Time":"2025-10-04T21:54:02.173705746+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"    camera_integration_test.go:103: ✅ Multiple rapid configuration changes validated\n"}
{"Time":"2025-10-04T21:54:02.173739747+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/multiple_rapid_configuration_changes","Output":"--- PASS: TestCameraMonitor_Integration_Comprehensive/multiple_rapid_configuration_changes (0.00s)\n"}
{"Time":"2025-10-04T21:54:02.173765786+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/multiple_rapid_configuration_changes","Elapsed":0}
{"Time":"2025-10-04T21:54:02.17379141+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/stats_consistency_under_load"}
{"Time":"2025-10-04T21:54:02.173822054+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/stats_consistency_under_load","Output":"=== RUN   TestCameraMonitor_Integration_Comprehensive/stats_consistency_under_load\n"}
{"Time":"2025-10-04T21:54:02.173969973+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"    camera_integration_test.go:115: ✅ Stats consistency under load validated\n"}
{"Time":"2025-10-04T21:54:02.174021126+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/stats_consistency_under_load","Output":"--- PASS: TestCameraMonitor_Integration_Comprehensive/stats_consistency_under_load (0.00s)\n"}
{"Time":"2025-10-04T21:54:02.174050338+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive/stats_consistency_under_load","Elapsed":0}
{"Time":"2025-10-04T21:54:02.17410097+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:02.174136305+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:02.17424178+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:02.174293602+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:02.174864281+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:02.174918669+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:02.174956814+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:02.174986664+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:02.175012267+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:02.275430434+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Output":"--- PASS: TestCameraMonitor_Integration_Comprehensive (0.41s)\n"}
{"Time":"2025-10-04T21:54:02.275518032+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Comprehensive","Elapsed":0.41}
{"Time":"2025-10-04T21:54:02.275556742+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases"}
{"Time":"2025-10-04T21:54:02.275582026+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"=== RUN   TestCameraMonitor_Integration_EdgeCases\n"}
{"Time":"2025-10-04T21:54:02.27560768+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:02.275632712+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:02.275704355+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:02.275816416+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/rapid_start_stop_cycles"}
{"Time":"2025-10-04T21:54:02.27584899+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/rapid_start_stop_cycles","Output":"=== RUN   TestCameraMonitor_Integration_EdgeCases/rapid_start_stop_cycles\n"}
{"Time":"2025-10-04T21:54:02.275894482+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:02.275924356+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:02.276012741+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:02.27637656+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:02.276427475+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:02.276458759+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:02.276485451+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:02.27651199+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:02.276537963+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/rapid_start_stop_cycles","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:02.276576615+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:02.276625181+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:02.276672123+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:02.276799101+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:02.290361835+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:02.290443345+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:02.290465208+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:02.2904803+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:02.290493697+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:02.290525268+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:02.290541035+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:02.377483025+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:02.387813599+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:02.387884956+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:02.387917988+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:02.387950075+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:02.3885441+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:02.388589041+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:02.38861219+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:02.38863801+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:02.388657105+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:02.388672924+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"    camera_asserters_test.go:147: ✅ Monitor stopped successfully\n"}
{"Time":"2025-10-04T21:54:02.398771134+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:02.398823958+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:02.398865967+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:02.398957402+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:02.398997863+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:02.399024335+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:02.399056952+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:02.399078705+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:02.399130297+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:02.399166525+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:02.399200426+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:02.39936948+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:02.399549201+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:02.399599346+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:02.399634937+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:02.399668622+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:02.399701407+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:02.399844256+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:02.399887245+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:02.499962878+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:02.510347426+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:02.51042813+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:02.510492239+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:02.510528994+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:02.510719738+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:02.510763423+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:02.510796665+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:02.510821227+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:02.510843949+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:02.510871014+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"    camera_asserters_test.go:147: ✅ Monitor stopped successfully\n"}
{"Time":"2025-10-04T21:54:02.521280461+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:02.521338368+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:02.52137559+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:02.521413202+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:02.521448507+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:02.521476089+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:02.52153221+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:02.52155553+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:02.521579979+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:02.521613016+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:02.521651747+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:02.521704518+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:02.521991749+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:02.522050914+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:02.522090192+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:02.522136725+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:02.522166722+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:02.522198984+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:02.522379511+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:02.622254389+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:02.632566658+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:02.632830028+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:02.632867195+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:02.632905282+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:02.633433923+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:02.633491166+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:02.633533088+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:02.633560577+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:02.633583028+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:02.633605247+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"    camera_asserters_test.go:147: ✅ Monitor stopped successfully\n"}
{"Time":"2025-10-04T21:54:02.643963592+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"    camera_integration_test.go:140: ✅ Rapid start/stop cycles validated\n"}
{"Time":"2025-10-04T21:54:02.644040306+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/rapid_start_stop_cycles","Output":"--- PASS: TestCameraMonitor_Integration_EdgeCases/rapid_start_stop_cycles (0.37s)\n"}
{"Time":"2025-10-04T21:54:02.64407694+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/rapid_start_stop_cycles","Elapsed":0.37}
{"Time":"2025-10-04T21:54:02.644112264+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/concurrent_operations"}
{"Time":"2025-10-04T21:54:02.644132354+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/concurrent_operations","Output":"=== RUN   TestCameraMonitor_Integration_EdgeCases/concurrent_operations\n"}
{"Time":"2025-10-04T21:54:02.644176048+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/concurrent_operations","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:02.644204944+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/concurrent_operations","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:02.644267477+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/concurrent_operations","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:02.64432376+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/concurrent_operations","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:02.644367056+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/concurrent_operations","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:02.6444025+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/concurrent_operations","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:02.644428597+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/concurrent_operations","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:02.644457481+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/concurrent_operations","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:02.644483887+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/concurrent_operations","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:02.644519629+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:02.644554919+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:02.644693127+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:02.644889965+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:02.644961905+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:02.644999707+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:02.645035496+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:02.645072889+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:02.645124393+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:02.645238105+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:02.745296812+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:02.74541056+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"    camera_integration_test.go:177: ✅ Concurrent operations validated\n"}
{"Time":"2025-10-04T21:54:02.74544853+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/concurrent_operations","Output":"--- PASS: TestCameraMonitor_Integration_EdgeCases/concurrent_operations (0.10s)\n"}
{"Time":"2025-10-04T21:54:02.745468909+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/concurrent_operations","Elapsed":0.1}
{"Time":"2025-10-04T21:54:02.745502025+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/device_creation_various_sources"}
{"Time":"2025-10-04T21:54:02.745525342+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/device_creation_various_sources","Output":"=== RUN   TestCameraMonitor_Integration_EdgeCases/device_creation_various_sources\n"}
{"Time":"2025-10-04T21:54:02.745552954+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/device_creation_various_sources","Output":"time=\"2025-10-04 21:54:02\" level=error msg=\"monitor_start_return_err - monitor is already running\"\n"}
{"Time":"2025-10-04T21:54:02.745579436+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"    progressive_readiness.go:61: ⏳ Monitor Start needs readiness - waiting for event (not polling)\n"}
{"Time":"2025-10-04T21:54:02.745613271+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"    progressive_readiness.go:67: 🔔 Readiness event received for Monitor Start - retrying operation\n"}
{"Time":"2025-10-04T21:54:02.745657457+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"time=\"2025-10-04 21:54:02\" level=error msg=\"monitor_start_return_err - monitor is already running\"\n"}
{"Time":"2025-10-04T21:54:02.745883095+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"    camera_asserters_test.go:127: \n"}
{"Time":"2025-10-04T21:54:02.745928608+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/camera/camera_asserters_test.go:127\n"}
{"Time":"2025-10-04T21:54:02.7459504+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/camera/camera_integration_test.go:182\n"}
{"Time":"2025-10-04T21:54:02.745968241+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:02.74599182+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"        \t            \tmonitor is already running\n"}
{"Time":"2025-10-04T21:54:02.746015742+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"        \tTest:       \tTestCameraMonitor_Integration_EdgeCases\n"}
{"Time":"2025-10-04T21:54:02.74603976+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"        \tMessages:   \tMonitor must start successfully\n"}
{"Time":"2025-10-04T21:54:02.746077451+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/device_creation_various_sources","Output":"    testing.go:1679: test executed panic(nil) or runtime.Goexit: subtest may have called FailNow on a parent test\n"}
{"Time":"2025-10-04T21:54:02.746120398+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/device_creation_various_sources","Output":"--- FAIL: TestCameraMonitor_Integration_EdgeCases/device_creation_various_sources (0.00s)\n"}
{"Time":"2025-10-04T21:54:02.746150648+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/device_creation_various_sources","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:02.746175969+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/device_creation_various_sources","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:02.746228913+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/device_creation_various_sources","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:02.746278634+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/device_creation_various_sources","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:02.746645307+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/device_creation_various_sources","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:02.746696029+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/device_creation_various_sources","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:02.746731845+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/device_creation_various_sources","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:02.746762104+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/device_creation_various_sources","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:02.746780577+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/device_creation_various_sources","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:02.847835784+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases/device_creation_various_sources","Elapsed":0}
{"Time":"2025-10-04T21:54:02.847948296+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Output":"--- FAIL: TestCameraMonitor_Integration_EdgeCases (0.57s)\n"}
{"Time":"2025-10-04T21:54:02.847986362+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_EdgeCases","Elapsed":0.57}
{"Time":"2025-10-04T21:54:02.848026167+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths"}
{"Time":"2025-10-04T21:54:02.848051701+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths","Output":"=== RUN   TestCameraMonitor_Integration_ErrorPaths\n"}
{"Time":"2025-10-04T21:54:02.84808224+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:02.848110432+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:02.848142363+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:02.848247585+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths/invalid_device_paths"}
{"Time":"2025-10-04T21:54:02.848289266+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths/invalid_device_paths","Output":"=== RUN   TestCameraMonitor_Integration_ErrorPaths/invalid_device_paths\n"}
{"Time":"2025-10-04T21:54:02.848394226+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths/invalid_device_paths","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:02.848429484+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths/invalid_device_paths","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:02.848478558+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths/invalid_device_paths","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:02.848661512+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths/invalid_device_paths","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:02.8487068+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths/invalid_device_paths","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:02.848743798+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths/invalid_device_paths","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:02.848772138+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths/invalid_device_paths","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:02.848805507+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths/invalid_device_paths","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:02.848838473+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths/invalid_device_paths","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:02.848869712+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:02.848903423+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:02.8490874+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:02.849163563+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:02.863199034+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths","Output":"time=\"2025-10-04 21:54:02\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:02.863283652+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:02.863331013+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:02.863346219+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:02.863353099+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:02.863359927+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:02.86336629+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:02.949271545+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:02.949375547+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths","Output":"    camera_integration_test.go:279: ✅ Invalid device paths handled gracefully\n"}
{"Time":"2025-10-04T21:54:02.94941937+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths/invalid_device_paths","Output":"--- PASS: TestCameraMonitor_Integration_ErrorPaths/invalid_device_paths (0.10s)\n"}
{"Time":"2025-10-04T21:54:02.949440425+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths/invalid_device_paths","Elapsed":0.1}
{"Time":"2025-10-04T21:54:02.949464891+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths/context_cancellation"}
{"Time":"2025-10-04T21:54:02.949481183+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths/context_cancellation","Output":"=== RUN   TestCameraMonitor_Integration_ErrorPaths/context_cancellation\n"}
{"Time":"2025-10-04T21:54:02.949526764+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths/context_cancellation","Output":"time=\"2025-10-04 21:54:02\" level=error msg=\"monitor_start_return_err - monitor is already running\"\n"}
{"Time":"2025-10-04T21:54:02.949548886+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths","Output":"    progressive_readiness.go:61: ⏳ Monitor Start needs readiness - waiting for event (not polling)\n"}
{"Time":"2025-10-04T21:54:02.949565875+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths","Output":"    progressive_readiness.go:67: 🔔 Readiness event received for Monitor Start - retrying operation\n"}
{"Time":"2025-10-04T21:54:02.949580777+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths","Output":"time=\"2025-10-04 21:54:02\" level=error msg=\"monitor_start_return_err - monitor is already running\"\n"}
{"Time":"2025-10-04T21:54:02.949776575+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths","Output":"    camera_asserters_test.go:127: \n"}
{"Time":"2025-10-04T21:54:02.949824215+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/camera/camera_asserters_test.go:127\n"}
{"Time":"2025-10-04T21:54:02.949857982+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/camera/camera_integration_test.go:285\n"}
{"Time":"2025-10-04T21:54:02.949876435+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:02.949898471+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths","Output":"        \t            \tmonitor is already running\n"}
{"Time":"2025-10-04T21:54:02.949915721+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths","Output":"        \tTest:       \tTestCameraMonitor_Integration_ErrorPaths\n"}
{"Time":"2025-10-04T21:54:02.949932182+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths","Output":"        \tMessages:   \tMonitor must start successfully\n"}
{"Time":"2025-10-04T21:54:02.949957122+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths/context_cancellation","Output":"    testing.go:1679: test executed panic(nil) or runtime.Goexit: subtest may have called FailNow on a parent test\n"}
{"Time":"2025-10-04T21:54:02.949990163+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths/context_cancellation","Output":"--- FAIL: TestCameraMonitor_Integration_ErrorPaths/context_cancellation (0.00s)\n"}
{"Time":"2025-10-04T21:54:02.950009084+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths/context_cancellation","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:02.950045876+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths/context_cancellation","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:02.950070246+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths/context_cancellation","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:02.950088389+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths/context_cancellation","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:02.950403462+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths/context_cancellation","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:02.950446515+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths/context_cancellation","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:02.950477008+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths/context_cancellation","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:02.950503083+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths/context_cancellation","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:02.95051908+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths/context_cancellation","Output":"time=\"2025-10-04 21:54:02\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:03.051602647+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths/context_cancellation","Elapsed":0}
{"Time":"2025-10-04T21:54:03.0516968+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths","Output":"--- FAIL: TestCameraMonitor_Integration_ErrorPaths (0.20s)\n"}
{"Time":"2025-10-04T21:54:03.051721614+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_ErrorPaths","Elapsed":0.2}
{"Time":"2025-10-04T21:54:03.051745975+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance"}
{"Time":"2025-10-04T21:54:03.051759295+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance","Output":"=== RUN   TestCameraMonitor_Integration_Performance\n"}
{"Time":"2025-10-04T21:54:03.051775524+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:03.051817962+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:03.051836915+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:03.051906745+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance/performance_under_load"}
{"Time":"2025-10-04T21:54:03.051927115+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance/performance_under_load","Output":"=== RUN   TestCameraMonitor_Integration_Performance/performance_under_load\n"}
{"Time":"2025-10-04T21:54:03.051989535+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance/performance_under_load","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:03.052009713+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance/performance_under_load","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:03.05205949+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance/performance_under_load","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:03.052149735+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance/performance_under_load","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:03.052191664+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance/performance_under_load","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:03.052225278+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance/performance_under_load","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:03.052243498+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance/performance_under_load","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:03.052268055+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance/performance_under_load","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:03.05228494+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance/performance_under_load","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:03.052304803+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:03.052334369+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:03.05284544+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:03.052884641+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:03.065270655+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance","Output":"time=\"2025-10-04 21:54:03\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:03.065365015+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:03.065392827+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:03.065409372+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:03.065422325+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:03.06543637+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:03.065455094+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:03.153559124+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:03.153664234+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance","Output":"    camera_integration_test.go:366: ✅ Performance under load validated (duration: 109.432µs)\n"}
{"Time":"2025-10-04T21:54:03.153717284+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance/performance_under_load","Output":"--- PASS: TestCameraMonitor_Integration_Performance/performance_under_load (0.10s)\n"}
{"Time":"2025-10-04T21:54:03.153755901+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance/performance_under_load","Elapsed":0.1}
{"Time":"2025-10-04T21:54:03.153821525+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance/memory_usage_patterns"}
{"Time":"2025-10-04T21:54:03.153847011+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance/memory_usage_patterns","Output":"=== RUN   TestCameraMonitor_Integration_Performance/memory_usage_patterns\n"}
{"Time":"2025-10-04T21:54:03.153891159+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance/memory_usage_patterns","Output":"time=\"2025-10-04 21:54:03\" level=error msg=\"monitor_start_return_err - monitor is already running\"\n"}
{"Time":"2025-10-04T21:54:03.153921096+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance","Output":"    progressive_readiness.go:61: ⏳ Monitor Start needs readiness - waiting for event (not polling)\n"}
{"Time":"2025-10-04T21:54:03.153944964+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance","Output":"    progressive_readiness.go:67: 🔔 Readiness event received for Monitor Start - retrying operation\n"}
{"Time":"2025-10-04T21:54:03.153976654+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance","Output":"time=\"2025-10-04 21:54:03\" level=error msg=\"monitor_start_return_err - monitor is already running\"\n"}
{"Time":"2025-10-04T21:54:03.154197747+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance","Output":"    camera_asserters_test.go:127: \n"}
{"Time":"2025-10-04T21:54:03.154265155+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/camera/camera_asserters_test.go:127\n"}
{"Time":"2025-10-04T21:54:03.154290752+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance","Output":"        \t            \t\t\t\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/camera/camera_integration_test.go:371\n"}
{"Time":"2025-10-04T21:54:03.154325366+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance","Output":"        \tError:      \tReceived unexpected error:\n"}
{"Time":"2025-10-04T21:54:03.154350713+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance","Output":"        \t            \tmonitor is already running\n"}
{"Time":"2025-10-04T21:54:03.154375156+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance","Output":"        \tTest:       \tTestCameraMonitor_Integration_Performance\n"}
{"Time":"2025-10-04T21:54:03.154398906+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance","Output":"        \tMessages:   \tMonitor must start successfully\n"}
{"Time":"2025-10-04T21:54:03.154436876+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance/memory_usage_patterns","Output":"    testing.go:1679: test executed panic(nil) or runtime.Goexit: subtest may have called FailNow on a parent test\n"}
{"Time":"2025-10-04T21:54:03.154489962+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance/memory_usage_patterns","Output":"--- FAIL: TestCameraMonitor_Integration_Performance/memory_usage_patterns (0.00s)\n"}
{"Time":"2025-10-04T21:54:03.154531731+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance/memory_usage_patterns","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:03.154562254+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance/memory_usage_patterns","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:03.154588429+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance/memory_usage_patterns","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:03.154621325+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance/memory_usage_patterns","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:03.154752722+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance/memory_usage_patterns","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:03.154808909+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance/memory_usage_patterns","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:03.154853128+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance/memory_usage_patterns","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:03.154890786+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance/memory_usage_patterns","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:03.154924834+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance/memory_usage_patterns","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:03.256028915+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance/memory_usage_patterns","Elapsed":0}
{"Time":"2025-10-04T21:54:03.256123087+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance","Output":"--- FAIL: TestCameraMonitor_Integration_Performance (0.20s)\n"}
{"Time":"2025-10-04T21:54:03.256159015+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Integration_Performance","Elapsed":0.2}
{"Time":"2025-10-04T21:54:03.256198158+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:03.256289647+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"=== RUN   TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:03.256328465+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:03.256355798+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:03.256385717+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:03.256443257+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:03.256490262+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:03.256596295+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:03.256749713+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:03.256824612+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:03.256880607+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:03.256909401+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:03.25693538+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:03.256961176+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:03.257013122+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:03.257044475+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:03.257180184+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:03.257465314+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:03.271265257+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:03.271372198+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:03.271395367+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:03.271412215+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:03.271428315+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:03.271449849+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:03.271467593+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:03.357332976+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:03.357430667+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"    camera_lifecycle_test.go:30: Lifecycle test discovered 1 devices\n"}
{"Time":"2025-10-04T21:54:03.357471801+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:03.357527178+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:03.357577254+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:03.357700322+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:03.357803168+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:03.357847397+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:03.35788478+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:03.357912591+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:03.357943773+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:03.357975238+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"    camera_asserters_test.go:147: ✅ Monitor stopped successfully\n"}
{"Time":"2025-10-04T21:54:03.358016204+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"    camera_lifecycle_test.go:37: ✅ Complete device lifecycle validated\n"}
{"Time":"2025-10-04T21:54:03.358062327+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Output":"--- PASS: TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success (0.10s)\n"}
{"Time":"2025-10-04T21:54:03.358091531+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConnectDisconnect_ReqCAM001_Success","Elapsed":0.1}
{"Time":"2025-10-04T21:54:03.358132222+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:03.358157101+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"=== RUN   TestCameraLifecycle_StateTransitions_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:03.358335418+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:03.358379553+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:03.358417277+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:03.358469891+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:03.358504946+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:03.358620084+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:03.358830712+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:03.358891122+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:03.358918887+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:03.358944018+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:03.358975264+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:03.359009041+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:03.359033998+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:03.359076506+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:03.35910817+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:03.359319903+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:03.373149868+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:03.373304722+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:03.37333684+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:03.373355266+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:03.373377948+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:03.37338644+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:03.373402281+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:03.460304053+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:03.460421587+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:03.460462529+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:03.460521868+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:03.46056+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:03.460908796+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:03.460964766+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:03.461009088+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:03.46103892+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:03.461073976+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:03.461099775+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"    camera_asserters_test.go:147: ✅ Monitor stopped successfully\n"}
{"Time":"2025-10-04T21:54:03.46112456+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"    camera_lifecycle_test.go:67: ✅ State transition behavior validated\n"}
{"Time":"2025-10-04T21:54:03.461163074+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Output":"--- PASS: TestCameraLifecycle_StateTransitions_ReqCAM001_Success (0.10s)\n"}
{"Time":"2025-10-04T21:54:03.461201102+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_StateTransitions_ReqCAM001_Success","Elapsed":0.1}
{"Time":"2025-10-04T21:54:03.461268666+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:03.461295334+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"=== RUN   TestCameraLifecycle_EventGeneration_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:03.461385409+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:03.461418971+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:03.461469461+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:03.461503546+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:03.46153095+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:03.461638043+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:03.461854808+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:03.461893184+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:03.46194338+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:03.461973332+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:03.462006592+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:03.462032012+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:03.462056256+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:03.462080857+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:03.462111874+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:03.462479487+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:03.475235797+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:03.475339619+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:03.475356581+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:03.475365679+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:03.475374055+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:03.475388047+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:03.475397837+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:03.562239727+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:03.562317422+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"    camera_lifecycle_test.go:82: Event generation test discovered 1 devices\n"}
{"Time":"2025-10-04T21:54:03.562333817+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"    camera_lifecycle_test.go:86: Testing device lifecycle for: /dev/video0\n"}
{"Time":"2025-10-04T21:54:03.562350357+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:03.562362038+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:03.562394972+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:03.5624119+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:03.562426624+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:03.562440793+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:03.562542885+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:03.562577917+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:03.562595887+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:03.562608231+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:03.562618321+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:03.562627876+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:03.562640218+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:03.562650276+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:03.562851128+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:03.562876884+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:03.576315239+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:03.576416314+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:03.576457961+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:03.576470809+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:03.576486532+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:03.576497172+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:03.576507066+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:03.663343342+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:03.663429806+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"    progressive_readiness.go:52: ✅ ProbeDeviceCapabilities succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:03.663469521+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"    camera_asserters_test.go:250: ✅ PROGRESSIVE READINESS: Capability probing succeeded immediately\n"}
{"Time":"2025-10-04T21:54:03.663507397+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"    camera_asserters_test.go:259: ✅ Device capabilities validated: 9 capabilities, card: USB 2.0 Camera: USB 2.0 Camera\n"}
{"Time":"2025-10-04T21:54:03.663556817+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"    camera_lifecycle_test.go:96: Device /dev/video0 has capabilities: \u0026{DriverName:uvcvideo CardName:USB 2.0 Camera: USB 2.0 Camera BusInfo:usb-0000:00:1a.0-1.2 Version:6.14.11 Capabilities:[0x84a00001 Video Capture Metadata Capture Streaming Extended Pix Format Device Capabilities Video Capture Streaming Extended Pix Format] DeviceCaps:[0x04200001 Video Capture Streaming Extended Pix Format]}\n"}
{"Time":"2025-10-04T21:54:03.663627031+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"    camera_lifecycle_test.go:100: Device /dev/video0 has capabilities: {DriverName:uvcvideo CardName:USB 2.0 Camera: USB 2.0 Camera BusInfo:usb-0000:00:1a.0-1.2 Version:6.14.11 Capabilities:[0x84a00001 Video Capture Metadata Capture Streaming Extended Pix Format Device Capabilities Video Capture Streaming Extended Pix Format] DeviceCaps:[0x04200001 Video Capture Streaming Extended Pix Format]}\n"}
{"Time":"2025-10-04T21:54:03.663664003+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"    camera_lifecycle_test.go:104: ✅ Event generation during lifecycle validated\n"}
{"Time":"2025-10-04T21:54:03.663704144+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:03.66376576+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:03.663801541+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:03.663832458+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:03.664346754+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:03.664396848+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:03.66443218+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:03.664460971+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:03.664487552+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:03.764843453+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Output":"--- PASS: TestCameraLifecycle_EventGeneration_ReqCAM001_Success (0.30s)\n"}
{"Time":"2025-10-04T21:54:03.764945517+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_EventGeneration_ReqCAM001_Success","Elapsed":0.3}
{"Time":"2025-10-04T21:54:03.765024073+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:03.765051262+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"=== RUN   TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:03.765074991+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:03.765104158+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:03.765128426+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:03.765155482+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"    camera_lifecycle_test.go:115: Testing lifecycle cycle 1\n"}
{"Time":"2025-10-04T21:54:03.765206096+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:03.765278718+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:03.765319741+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:03.765516231+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:03.765571034+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:03.765610478+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:03.765639218+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:03.765688367+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:03.765716644+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:03.76575961+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:03.765789941+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:03.765822955+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:03.766084213+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:03.780160159+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:03.780271191+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:03.78030272+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:03.780318369+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:03.780330645+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:03.780348588+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:03.780355432+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:03.866316583+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:03.866464599+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:03.866513489+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:03.866541826+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:03.866564332+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:03.866747767+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:03.866795683+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:03.866826002+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:03.866860384+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:03.866884998+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:03.866913952+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"    camera_asserters_test.go:147: ✅ Monitor stopped successfully\n"}
{"Time":"2025-10-04T21:54:03.866938141+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"    camera_lifecycle_test.go:115: Testing lifecycle cycle 2\n"}
{"Time":"2025-10-04T21:54:03.866959838+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:03.866982307+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:03.867055919+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:03.867089017+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:03.867123748+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:03.867148055+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:03.867176588+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:03.867200251+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:03.86724851+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:03.867278937+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:03.86730742+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:03.867368456+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:03.867489823+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:03.867519353+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:03.86753676+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:03.867552146+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:03.867578674+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:03.867596081+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:03.867646943+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:03.967873195+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:03.968012655+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:03.968049121+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:03.96807852+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:03.968124511+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:03.968648637+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:03.968701681+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:03.968739345+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:03.968766918+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:03.968796548+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:03.968857171+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"    camera_asserters_test.go:147: ✅ Monitor stopped successfully\n"}
{"Time":"2025-10-04T21:54:03.968885478+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"    camera_lifecycle_test.go:115: Testing lifecycle cycle 3\n"}
{"Time":"2025-10-04T21:54:03.968915123+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:03.968939999+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:03.968980955+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:03.969262307+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:03.969319282+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:03.969347787+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:03.969372016+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:03.9694006+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:03.969425635+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:03.96945648+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:03.969490245+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:03.969550739+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:03.969861439+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:03.969949271+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:03.969984711+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:03.970067882+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:03.970091678+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:03.970121001+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:03.970146742+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:03\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:04.070422716+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:04.070522921+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:04.070569195+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:04.070597866+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:04.070630729+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:04.070924819+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:04.071010889+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:04.071047918+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:04.071084135+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:04.071105717+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:04.071129852+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"    camera_asserters_test.go:147: ✅ Monitor stopped successfully\n"}
{"Time":"2025-10-04T21:54:04.07116409+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"    camera_lifecycle_test.go:130: ✅ Multiple start/stop cycles validated\n"}
{"Time":"2025-10-04T21:54:04.071204457+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Output":"--- PASS: TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success (0.31s)\n"}
{"Time":"2025-10-04T21:54:04.071268334+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_MultipleStartStop_ReqCAM001_Success","Elapsed":0.31}
{"Time":"2025-10-04T21:54:04.071304858+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConcurrentLifecycle_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:04.071335192+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConcurrentLifecycle_ReqCAM001_Success","Output":"=== RUN   TestCameraLifecycle_ConcurrentLifecycle_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:04.071370633+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConcurrentLifecycle_ReqCAM001_Success","Output":"    camera_lifecycle_test.go:135: Skipping due to test infrastructure issue - monitor already running\n"}
{"Time":"2025-10-04T21:54:04.071404675+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConcurrentLifecycle_ReqCAM001_Success","Output":"--- SKIP: TestCameraLifecycle_ConcurrentLifecycle_ReqCAM001_Success (0.00s)\n"}
{"Time":"2025-10-04T21:54:04.071446152+04:00","Action":"skip","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ConcurrentLifecycle_ReqCAM001_Success","Elapsed":0}
{"Time":"2025-10-04T21:54:04.071481966+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:04.071505569+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"=== RUN   TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:04.071569542+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:04.071605395+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:04.071642282+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:04.071739239+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"    camera_lifecycle_test.go:198: Testing error recovery attempt 1\n"}
{"Time":"2025-10-04T21:54:04.07177363+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:04.071801823+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:04.071889285+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:04.072136222+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:04.072195846+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:04.072312247+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:04.072362846+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:04.072394001+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:04.072427297+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:04.072470955+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:04.072516429+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:04.072604571+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:04.072838028+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:04.086363636+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:04.086467862+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:04.086489279+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:04.086503909+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:04.086519084+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:04.086540685+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:04.086555334+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:04.173463357+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:04.173568223+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:04.173611538+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:04.173669707+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:04.173708251+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:04.174053109+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:04.174109004+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:04.17415357+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:04.17418363+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:04.174246644+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:04.174287823+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"    camera_asserters_test.go:147: ✅ Monitor stopped successfully\n"}
{"Time":"2025-10-04T21:54:04.174317255+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"    camera_lifecycle_test.go:198: Testing error recovery attempt 2\n"}
{"Time":"2025-10-04T21:54:04.17435946+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:04.174386979+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:04.174411646+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:04.174747814+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:04.174794473+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:04.174852858+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:04.174880184+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:04.174902287+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:04.174926064+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:04.174950862+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:04.174993569+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:04.175621438+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:04.175784441+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:04.175839211+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:04.176196248+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:04.176674408+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:04.17672901+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:04.176767726+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:04.17682754+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:04.27615183+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:04.276310857+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:04.276350358+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:04.276411038+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:04.276439576+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:04.276485068+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:04.276515408+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:04.276546091+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:04.276572807+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:04.276606082+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:04.276642606+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"    camera_asserters_test.go:147: ✅ Monitor stopped successfully\n"}
{"Time":"2025-10-04T21:54:04.276668714+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"    camera_lifecycle_test.go:198: Testing error recovery attempt 3\n"}
{"Time":"2025-10-04T21:54:04.276691081+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:04.2767515+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:04.276791166+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:04.276999619+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:04.277045339+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:04.27707496+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:04.277118612+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:04.277155186+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:04.277182585+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:04.277226811+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:04.277266104+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:04.277299443+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:04.277536055+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:04.277598254+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:04.277656819+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:04.277696345+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:04.277726429+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:04.277759232+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:04.277787819+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:04.377404443+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:04.377528931+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:04.377562317+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:04.377593668+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:04.377626252+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:04.377808926+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:04.377862737+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:04.377912981+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:04.377950816+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:04.378006937+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:04.37804177+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"    camera_asserters_test.go:147: ✅ Monitor stopped successfully\n"}
{"Time":"2025-10-04T21:54:04.378068369+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"    camera_lifecycle_test.go:211: ✅ Error recovery during lifecycle validated\n"}
{"Time":"2025-10-04T21:54:04.378105632+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Output":"--- PASS: TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success (0.31s)\n"}
{"Time":"2025-10-04T21:54:04.378142486+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraLifecycle_ErrorRecovery_ReqCAM001_Success","Elapsed":0.31}
{"Time":"2025-10-04T21:54:04.378185885+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Basic_ReqCAM001_Success_Refactored"}
{"Time":"2025-10-04T21:54:04.378235296+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Basic_ReqCAM001_Success_Refactored","Output":"=== RUN   TestCameraMonitor_Basic_ReqCAM001_Success_Refactored\n"}
{"Time":"2025-10-04T21:54:04.378281224+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Basic_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:04.378310289+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Basic_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:04.378342857+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Basic_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:04.378384921+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Basic_ReqCAM001_Success_Refactored","Output":"    camera_monitor_basic_test.go:42: ✅ Basic monitor functionality validated\n"}
{"Time":"2025-10-04T21:54:04.378425504+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Basic_ReqCAM001_Success_Refactored","Output":"--- PASS: TestCameraMonitor_Basic_ReqCAM001_Success_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:54:04.378461249+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Basic_ReqCAM001_Success_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:54:04.378495586+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored"}
{"Time":"2025-10-04T21:54:04.378521625+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Output":"=== RUN   TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored\n"}
{"Time":"2025-10-04T21:54:04.378572071+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:04.378618366+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:04.378654318+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:04.378754487+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:04.378797898+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:04.378839089+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:04.379055319+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:04.379084819+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:04.379101451+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:04.379114117+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:04.379124854+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:04.379140082+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:04.379152718+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:04.379177867+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:04.379195801+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:04.379218356+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:04.379231585+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:04.379340013+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:04.379455598+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Failed to probe device capabilities\"\n"}
{"Time":"2025-10-04T21:54:04.379496691+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:04.379512689+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:04.379527267+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:04.379539856+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:04.379550374+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:04.379637076+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:04.379682332+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:04.379701254+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:04.379708678+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:04.379720189+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:04.379755181+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:04.379772031+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:04.379789656+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:04.379802513+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Output":"    camera_asserters_test.go:147: ✅ Monitor stopped successfully\n"}
{"Time":"2025-10-04T21:54:04.379813196+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Output":"    camera_monitor_basic_test.go:66: ✅ Start/stop lifecycle validated\n"}
{"Time":"2025-10-04T21:54:04.379834307+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Output":"--- PASS: TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored (0.00s)\n"}
{"Time":"2025-10-04T21:54:04.379848494+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StartStop_ReqCAM001_Success_Refactored","Elapsed":0}
{"Time":"2025-10-04T21:54:04.379862848+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored"}
{"Time":"2025-10-04T21:54:04.379876342+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Output":"=== RUN   TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored\n"}
{"Time":"2025-10-04T21:54:04.379883292+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:04.379889768+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:04.379909154+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:04.379922175+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:04.379999917+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:04.380048476+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:04.380184064+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:04.380248613+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:04.380265668+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:04.380274782+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:04.380293808+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:04.380329824+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:04.380342574+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:04.380353595+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:04.380368814+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:04.380401454+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:04.393070305+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:04.39315368+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:04.393178578+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:04.3931887+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:04.393195524+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:04.393206711+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:04.393237731+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:04.48128723+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:04.481395988+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Output":"    camera_monitor_basic_test.go:88: ✅ Readiness functionality validated\n"}
{"Time":"2025-10-04T21:54:04.481441468+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:04.481471255+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:04.481494663+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:04.481516795+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:04.481773795+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:04.481819476+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:04.481866547+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:04.481891447+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:04.481914677+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:04.582924731+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Output":"--- PASS: TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored (0.20s)\n"}
{"Time":"2025-10-04T21:54:04.583033134+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Readiness_ReqCAM001_Success_Refactored","Elapsed":0.2}
{"Time":"2025-10-04T21:54:04.583081703+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored"}
{"Time":"2025-10-04T21:54:04.583106699+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"=== RUN   TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored\n"}
{"Time":"2025-10-04T21:54:04.583138338+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:04.583171291+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:04.583203809+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:04.583363864+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:04.583415561+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:04.583473185+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:04.583573074+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:04.583613923+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:04.583642777+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:04.58367607+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:04.583711866+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:04.583745301+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:04.583777689+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:04.583812348+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:04.58384454+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:04.584073492+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:04.597127297+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:04.597222756+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:04.597271288+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:04.597285796+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:04.597302281+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:04.597318426+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:04.59733554+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:04.684182083+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:04.684293064+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"    camera_asserters_test.go:194: ✅ Device discovery completed: 1 devices found\n"}
{"Time":"2025-10-04T21:54:04.684320992+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"    camera_monitor_basic_test.go:104: ✅ Device discovery completed: 1 devices found\n"}
{"Time":"2025-10-04T21:54:04.684365849+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:04.684391623+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:04.684415038+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:04.684432283+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:04.684607214+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:04.684676327+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:04.684705784+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:04.684727919+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:04.684755683+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:04.785724674+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Output":"--- PASS: TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored (0.20s)\n"}
{"Time":"2025-10-04T21:54:04.78582161+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceDiscovery_ReqCAM001_Success_Refactored","Elapsed":0.2}
{"Time":"2025-10-04T21:54:04.785868684+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored"}
{"Time":"2025-10-04T21:54:04.785896708+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"=== RUN   TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored\n"}
{"Time":"2025-10-04T21:54:04.785923935+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:04.785956312+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:04.78598254+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:04.786105645+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:04.786150174+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:04.786241525+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:04.786291733+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:04.786321306+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:04.786363532+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:04.786537936+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:04.786583924+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:04.786621795+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:04.786648743+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:04.786680902+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:04.786713925+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:04.78674053+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:04.786772626+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:04.786804798+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:04.787047536+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:04.800273022+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:04.800364447+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:04.800385015+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:04.800402177+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:04.80041272+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:04.800422645+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:04.800440318+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:04.88732038+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:04.887419259+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"    camera_asserters_test.go:194: ✅ Device discovery completed: 1 devices found\n"}
{"Time":"2025-10-04T21:54:04.887462107+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:04.88748633+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:04.887509969+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:04.887566968+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:04.887597506+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:04.887625744+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:04.887653555+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:04.887680791+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:04.88770871+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:04.887748376+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:04.887792374+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:04.887844585+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:04.888050881+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:04.902183714+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:04.902300393+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:04.902322921+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:04.902355707+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:04.902366209+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:04.902373558+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:04.902382617+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:04.988499984+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:04.988617476+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"    progressive_readiness.go:52: ✅ ProbeDeviceCapabilities succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:04.988647221+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"    camera_asserters_test.go:250: ✅ PROGRESSIVE READINESS: Capability probing succeeded immediately\n"}
{"Time":"2025-10-04T21:54:04.988678259+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"    camera_asserters_test.go:259: ✅ Device capabilities validated: 9 capabilities, card: USB 2.0 Camera: USB 2.0 Camera\n"}
{"Time":"2025-10-04T21:54:04.988702511+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"    camera_monitor_basic_test.go:137: ✅ Device capabilities validated: 9 capabilities\n"}
{"Time":"2025-10-04T21:54:04.988723022+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:04.988744509+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:04.988765529+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:04.988786856+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:04.988851572+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:04.988887171+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:04.9889154+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:04.988930277+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:04.988943152+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:04\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:05.089994087+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:05.090106081+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:05.090148566+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:05.090177989+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:05.09039273+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:05.090444141+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:05.090496351+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:05.090529894+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:05.090595687+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:05.191063186+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Output":"--- PASS: TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored (0.41s)\n"}
{"Time":"2025-10-04T21:54:05.191159454+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCapabilities_ReqCAM002_Success_Refactored","Elapsed":0.41}
{"Time":"2025-10-04T21:54:05.191205803+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored"}
{"Time":"2025-10-04T21:54:05.191268672+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"=== RUN   TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored\n"}
{"Time":"2025-10-04T21:54:05.191304534+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:05.191334104+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:05.191364811+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:05.191465299+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:05.191508662+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:05.191541805+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:05.191684852+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:05.191731274+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:05.191800555+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:05.191830549+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:05.191863801+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:05.19189113+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:05.191923296+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:05.191950809+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:05.1919768+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:05.192231219+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:05.205263335+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:05.205373218+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:05.205417856+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:05.205447375+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:05.205473375+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:05.205525917+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:05.205552031+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:05.292206078+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:05.292351698+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:05.292390788+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:05.292412964+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:05.292443335+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:05.29252629+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:05.292552276+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:05.292577025+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:05.292596593+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:05.292618904+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:05.292651503+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"    camera_asserters_test.go:147: ✅ Monitor stopped successfully\n"}
{"Time":"2025-10-04T21:54:05.292704671+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"    camera_asserters_test.go:310: ✅ Complete lifecycle validated successfully\n"}
{"Time":"2025-10-04T21:54:05.292725912+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"    camera_monitor_basic_test.go:151: ✅ Complete lifecycle validated\n"}
{"Time":"2025-10-04T21:54:05.292755619+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Output":"--- PASS: TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored (0.10s)\n"}
{"Time":"2025-10-04T21:54:05.292780364+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_CompleteLifecycle_ReqCAM001_Success_Refactored","Elapsed":0.1}
{"Time":"2025-10-04T21:54:05.292811101+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored"}
{"Time":"2025-10-04T21:54:05.292837776+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"=== RUN   TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored\n"}
{"Time":"2025-10-04T21:54:05.292907086+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:05.292933024+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:05.292957074+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:05.293018485+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:05.293055972+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:05.293077564+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:05.29318997+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:05.293244026+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:05.293288873+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:05.293309924+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:05.293328625+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:05.29335172+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:05.293371488+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:05.29339445+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:05.293421243+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:05.293531929+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:05.307367269+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:05.307457061+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:05.307488348+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:05.307512111+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:05.307558301+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:05.307611317+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:05.307640302+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:05.394400162+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:05.394514635+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"    camera_asserters_test.go:341: ✅ Invalid device correctly not found: /dev/nonexistent\n"}
{"Time":"2025-10-04T21:54:05.394557565+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"    camera_monitor_basic_test.go:165: ✅ Error handling validated\n"}
{"Time":"2025-10-04T21:54:05.394584515+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:05.394609685+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:05.394635872+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:05.394668383+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:05.394816354+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:05.394849536+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:05.394887145+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:05.394915064+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:05.394987113+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:05.49586796+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Output":"--- PASS: TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored (0.20s)\n"}
{"Time":"2025-10-04T21:54:05.495963426+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ErrorHandling_ReqCAM005_Success_Refactored","Elapsed":0.2}
{"Time":"2025-10-04T21:54:05.496001642+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored"}
{"Time":"2025-10-04T21:54:05.496024449+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"=== RUN   TestCameraMonitor_Performance_ReqCAM006_Success_Refactored\n"}
{"Time":"2025-10-04T21:54:05.496057029+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:05.49608093+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:05.496104392+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:05.496133403+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:05.496160579+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:05.496188263+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:05.496504077+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:05.49655959+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:05.496588556+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:05.496657121+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:05.496689353+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:05.496724433+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:05.496752196+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:05.496776866+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:05.496802737+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:05.496834503+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:05.511169971+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:05.511271413+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:05.511293453+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:05.511315239+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:05.51133093+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:05.511345951+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:05.511382517+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:05.597383199+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:05.597504845+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"    camera_asserters_test.go:375: ✅ Startup performance validated: 101.223295ms (max: 3s)\n"}
{"Time":"2025-10-04T21:54:05.597549955+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:05.597580003+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:05.597610939+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:05.597636325+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:05.59789608+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:05.597946619+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:05.597980808+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:05.598004454+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:05.598027323+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:05.598055161+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"    camera_asserters_test.go:147: ✅ Monitor stopped successfully\n"}
{"Time":"2025-10-04T21:54:05.598129862+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"    camera_asserters_test.go:388: ✅ Stop performance validated: 649.2µs (max: 2s)\n"}
{"Time":"2025-10-04T21:54:05.598159005+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"    camera_monitor_basic_test.go:182: ✅ Performance validation completed\n"}
{"Time":"2025-10-04T21:54:05.59819472+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Output":"--- PASS: TestCameraMonitor_Performance_ReqCAM006_Success_Refactored (0.10s)\n"}
{"Time":"2025-10-04T21:54:05.598245986+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_Performance_ReqCAM006_Success_Refactored","Elapsed":0.1}
{"Time":"2025-10-04T21:54:05.598280025+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored"}
{"Time":"2025-10-04T21:54:05.59830195+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"=== RUN   TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored\n"}
{"Time":"2025-10-04T21:54:05.598331905+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:05.598372303+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:05.598421247+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:05.598538502+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:05.598581272+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:05.598614815+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:05.59874149+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:05.59878026+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:05.598838453+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:05.598865782+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:05.598888961+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:05.598916967+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:05.598940694+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:05.598976099+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:05.599003711+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:05.599233844+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:05.613121811+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:05.613236567+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:05.61326681+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:05.6132869+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:05.613298163+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:05.613333626+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:05.613349932+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:05.699326048+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:05.699458728+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:05.699500338+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:05.699527547+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:05.699550166+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:05.699798285+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:05.699843988+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:05.699876698+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:05.699901841+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:05.69992446+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:05.699952124+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"    camera_asserters_test.go:147: ✅ Monitor stopped successfully\n"}
{"Time":"2025-10-04T21:54:05.700014957+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"    camera_monitor_basic_test.go:212: ✅ State transitions validated\n"}
{"Time":"2025-10-04T21:54:05.700062308+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Output":"--- PASS: TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored (0.10s)\n"}
{"Time":"2025-10-04T21:54:05.700088344+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_StateTransitions_ReqCAM001_Success_Refactored","Elapsed":0.1}
{"Time":"2025-10-04T21:54:05.700118203+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored"}
{"Time":"2025-10-04T21:54:05.700139216+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Output":"=== RUN   TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored\n"}
{"Time":"2025-10-04T21:54:05.700166732+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:05.700206098+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:05.700285939+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:05.700328015+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:05.700357759+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:05.700399248+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:05.700555496+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:05.700609619+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:05.700661247+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:05.700696705+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:05.700721689+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:05.70074497+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:05.700774781+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:05.700799296+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:05.700827293+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:05.701012632+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:05.714541094+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:05.714644411+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:05.714663634+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:05.714674249+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:05.714686272+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:05.714715429+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:05.714722753+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:05.801375698+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:05.801488564+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Output":"    camera_monitor_basic_test.go:234: ✅ Concurrent operations validated\n"}
{"Time":"2025-10-04T21:54:05.801532643+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:05.801562724+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:05.801588941+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:05.801606204+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:05.801852945+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:05.801901809+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:05.80193928+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:05.801986934+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:05.802009133+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:05.902721999+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Output":"--- PASS: TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored (0.20s)\n"}
{"Time":"2025-10-04T21:54:05.902820345+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_ConcurrentOperations_ReqCAM001_Success_Refactored","Elapsed":0.2}
{"Time":"2025-10-04T21:54:05.902868258+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:05.902896707+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Output":"=== RUN   TestMinUtilityFunction_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:05.902920442+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:05.902952244+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:05.902986304+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:05.903125553+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:05.903170344+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:05.903204173+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:05.903423146+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:05.903482187+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:05.903518091+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:05.903552467+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:05.903579643+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:05.903632178+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:05.903662798+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:05.90369666+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:05.903722708+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:05.903765533+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:05.918200681+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:05\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:05.918333009+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:05.918355953+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:05.918389827+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:05.918413857+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:05.918430398+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:05.918452687+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:05\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:06.004402596+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:06.104607671+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Output":"    camera_monitor_basic_test.go:264: ✅ Min utility function exercised through polling interval calculations\n"}
{"Time":"2025-10-04T21:54:06.104747161+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:06.104782349+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:06.104806743+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:06.104829925+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:06.104965511+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:06.104999767+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:06.105029776+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:06.10505328+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:06.105092417+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:06.2056716+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Output":"--- PASS: TestMinUtilityFunction_ReqCAM001_Success (0.30s)\n"}
{"Time":"2025-10-04T21:54:06.205779212+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMinUtilityFunction_ReqCAM001_Success","Elapsed":0.3}
{"Time":"2025-10-04T21:54:06.205818067+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:06.205839288+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Output":"=== RUN   TestProcessEventFunction_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:06.205870533+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:06.205925388+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:06.205950903+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:06.205979283+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:06.206002417+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:06.206024636+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:06.206156878+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:06.206201768+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:06.206263341+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:06.206289519+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:06.206312918+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:06.206341122+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:06.206375556+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:06.206408446+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:06.206431965+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:06.206532125+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:06.22011373+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:06.220201439+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:06.220250351+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:06.220275282+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:06.220287087+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:06.220297344+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:06.22030729+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:06.307318781+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:06.307426451+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Output":"    camera_monitor_basic_test.go:290: ✅ ProcessEvent function exercised through event system operations\n"}
{"Time":"2025-10-04T21:54:06.307465886+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:06.307491522+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:06.307515275+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:06.307540478+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:06.307850907+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:06.307895888+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:06.307928574+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:06.307953401+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:06.307986385+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:06.408796+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Output":"--- PASS: TestProcessEventFunction_ReqCAM001_Success (0.20s)\n"}
{"Time":"2025-10-04T21:54:06.408893468+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestProcessEventFunction_ReqCAM001_Success","Elapsed":0.2}
{"Time":"2025-10-04T21:54:06.408939514+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:06.408977415+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Output":"=== RUN   TestSetEventNotifierFunction_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:06.409011833+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:06.409039773+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:06.409071972+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:06.409243822+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:06.409293203+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:06.409328908+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:06.409467357+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:06.409503676+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:06.409537048+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:06.409564967+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:06.409605367+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:06.409631572+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:06.409663762+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:06.40969609+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:06.409722983+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:06.409876839+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:06.423286625+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:06.423367865+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:06.423390237+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:06.423431666+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:06.423443933+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:06.423453844+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:06.423463382+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:06.510149437+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:06.510280268+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Output":"    camera_monitor_basic_test.go:317: ✅ SetEventNotifier function validated\n"}
{"Time":"2025-10-04T21:54:06.510333321+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:06.510361871+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:06.510403228+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:06.510435902+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:06.510596742+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:06.510635479+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:06.510669798+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:06.510754213+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:06.510814951+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:06.611277157+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Output":"--- PASS: TestSetEventNotifierFunction_ReqCAM001_Success (0.20s)\n"}
{"Time":"2025-10-04T21:54:06.611375203+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSetEventNotifierFunction_ReqCAM001_Success","Elapsed":0.2}
{"Time":"2025-10-04T21:54:06.611421709+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:06.611447492+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Output":"=== RUN   TestAddIPCameraSourcesFunction_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:06.611493664+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:06.611523544+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:06.611555373+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:06.61166676+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:06.611710399+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:06.611744204+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:06.611894939+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:06.611940861+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:06.611977384+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:06.612033977+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:06.612071508+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:06.612106531+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:06.612135563+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:06.612168245+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:06.612191773+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:06.612361741+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:06.625255831+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:06.625390504+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:06.625407618+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:06.62542541+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:06.625436102+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:06.625446281+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:06.625454861+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:06.713454763+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:06.713526207+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Output":"    camera_monitor_basic_test.go:340: ✅ AddIPCameraSources function exercised during monitor initialization\n"}
{"Time":"2025-10-04T21:54:06.71354907+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:06.713563457+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:06.713574689+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:06.713583818+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:06.713691762+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:06.713711253+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:06.713811082+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:06.713838537+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:06.713852303+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:06.814984162+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Output":"--- PASS: TestAddIPCameraSourcesFunction_ReqCAM001_Success (0.20s)\n"}
{"Time":"2025-10-04T21:54:06.815087179+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestAddIPCameraSourcesFunction_ReqCAM001_Success","Elapsed":0.2}
{"Time":"2025-10-04T21:54:06.81513277+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:06.815157423+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Output":"=== RUN   TestStartPollOnlyMonitoringFunction_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:06.815240678+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:06.815287875+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:06.815313574+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:06.815343+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:06.815365316+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:06.815400137+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:06.815515666+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:06.815553353+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:06.815577988+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:06.815606145+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:06.815628836+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:06.815666626+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:06.815697129+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:06.815743811+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:06.815797734+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:06.816035705+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:06.830323101+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:06.83041256+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:06.83043594+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:06.830451641+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:06.830464714+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:06.830484045+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:06.830498254+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:06.916295159+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:06.916417807+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Output":"    camera_monitor_basic_test.go:363: ✅ StartPollOnlyMonitoring function exercised during monitor operation\n"}
{"Time":"2025-10-04T21:54:06.916452935+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:06.916512622+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:06.916543362+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:06.916579537+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:06.916721812+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:06.916758892+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:06.916804008+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:06.91683386+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:06.916879154+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:06\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:07.017358987+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Output":"--- PASS: TestStartPollOnlyMonitoringFunction_ReqCAM001_Success (0.20s)\n"}
{"Time":"2025-10-04T21:54:07.017458479+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestStartPollOnlyMonitoringFunction_ReqCAM001_Success","Elapsed":0.2}
{"Time":"2025-10-04T21:54:07.017501352+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:07.017518419+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Output":"=== RUN   TestDeviceCreationMethods_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:07.017538955+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:07.017572059+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:07.017619388+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:07.017651452+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:07.017680005+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:07.017700808+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:07.017871516+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:07.017915176+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:07.017950647+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:07.017976488+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:07.018009502+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:07.018044239+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:07.01807134+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:07.01810411+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:07.018135476+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:07.018345221+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:07.032138814+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:07.032265988+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:07.0323064+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:07.032323958+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:07.032333523+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:07.032342876+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:07.032352274+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:07.119363125+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:07.119474879+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success/createNetworkCameraDeviceInfo"}
{"Time":"2025-10-04T21:54:07.119505496+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success/createNetworkCameraDeviceInfo","Output":"=== RUN   TestDeviceCreationMethods_ReqCAM001_Success/createNetworkCameraDeviceInfo\n"}
{"Time":"2025-10-04T21:54:07.119551562+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success/createNetworkCameraDeviceInfo","Output":"--- PASS: TestDeviceCreationMethods_ReqCAM001_Success/createNetworkCameraDeviceInfo (0.00s)\n"}
{"Time":"2025-10-04T21:54:07.119584693+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success/createNetworkCameraDeviceInfo","Elapsed":0}
{"Time":"2025-10-04T21:54:07.119601338+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success/createFileCameraDeviceInfo"}
{"Time":"2025-10-04T21:54:07.119631525+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success/createFileCameraDeviceInfo","Output":"=== RUN   TestDeviceCreationMethods_ReqCAM001_Success/createFileCameraDeviceInfo\n"}
{"Time":"2025-10-04T21:54:07.119663868+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success/createFileCameraDeviceInfo","Output":"--- PASS: TestDeviceCreationMethods_ReqCAM001_Success/createFileCameraDeviceInfo (0.00s)\n"}
{"Time":"2025-10-04T21:54:07.11973053+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success/createFileCameraDeviceInfo","Elapsed":0}
{"Time":"2025-10-04T21:54:07.119761147+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success/createGenericCameraDeviceInfo"}
{"Time":"2025-10-04T21:54:07.119784061+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success/createGenericCameraDeviceInfo","Output":"=== RUN   TestDeviceCreationMethods_ReqCAM001_Success/createGenericCameraDeviceInfo\n"}
{"Time":"2025-10-04T21:54:07.119828272+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success/createGenericCameraDeviceInfo","Output":"--- PASS: TestDeviceCreationMethods_ReqCAM001_Success/createGenericCameraDeviceInfo (0.00s)\n"}
{"Time":"2025-10-04T21:54:07.119866964+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success/createGenericCameraDeviceInfo","Elapsed":0}
{"Time":"2025-10-04T21:54:07.119893608+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Output":"    camera_monitor_basic_test.go:421: ✅ Device creation methods validated\n"}
{"Time":"2025-10-04T21:54:07.119927825+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:07.119954261+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:07.119979729+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:07.120005416+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:07.120158206+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:07.120228093+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:07.120267687+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:07.120292102+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:07.120336529+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:07.220785331+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Output":"--- PASS: TestDeviceCreationMethods_ReqCAM001_Success (0.20s)\n"}
{"Time":"2025-10-04T21:54:07.2208844+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCreationMethods_ReqCAM001_Success","Elapsed":0.2}
{"Time":"2025-10-04T21:54:07.220932009+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored"}
{"Time":"2025-10-04T21:54:07.220957134+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"=== RUN   TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored\n"}
{"Time":"2025-10-04T21:54:07.220981384+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:07.221014485+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:07.221040091+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:07.221146699+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:07.221189373+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:07.221247869+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:07.22154647+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:07.221640203+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:07.22170438+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:07.221734188+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:07.221759875+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:07.221791094+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:07.22182654+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:07.221852712+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:07.221878688+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:07.221923503+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:07.235053055+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:07\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:07.235139923+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:07.235160843+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:07.235171226+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:07.23518708+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:07.235246886+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:07.235267689+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:07.322444295+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:07.32261555+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"    camera_monitor_basic_test.go:462: Default formats: [{YUYV 640 480 [30.000 fps 25.000 fps]} {MJPG 1280 720 [30.000 fps 25.000 fps 15.000 fps]}]\n"}
{"Time":"2025-10-04T21:54:07.322657+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"    camera_monitor_basic_test.go:480: ✅ Advanced monitor functionality validated\n"}
{"Time":"2025-10-04T21:54:07.322745978+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:07.322787707+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:07.322815006+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:07.32287156+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:07.323104304+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:07.323153111+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:07.323191288+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:07.323331482+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:07.323358339+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:07.423890498+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Output":"--- PASS: TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored (0.20s)\n"}
{"Time":"2025-10-04T21:54:07.423997795+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_Refactored","Elapsed":0.2}
{"Time":"2025-10-04T21:54:07.424033386+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:07.424049263+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"=== RUN   TestHybridCameraMonitor_Basic_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:07.424081362+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:07.424107849+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:07.424124463+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:07.424173462+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:07.42420502+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:07.424279944+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:07.424432014+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:07.424477202+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:07.424546715+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:07.424576971+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:07.424611964+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:07.424639095+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:07.424672181+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:07.424700178+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:07.424723751+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:07.424924587+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:07.438119295+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:07.438191274+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:07.438220773+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:07.438241362+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:07.438251768+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:07.438275468+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:07.438305089+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:07.525386927+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:07.525466442+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:07.525484475+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:07.525494931+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:07.525504487+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:07.525518838+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:07.525530051+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:07.525701999+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:07.525734079+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:07.52575075+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:07.525765693+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"    camera_asserters_test.go:147: ✅ Monitor stopped successfully\n"}
{"Time":"2025-10-04T21:54:07.525781237+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"    camera_monitor_comprehensive_test.go:23: ✅ Basic monitor functionality validated\n"}
{"Time":"2025-10-04T21:54:07.525812707+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Output":"--- PASS: TestHybridCameraMonitor_Basic_ReqCAM001_Success (0.10s)\n"}
{"Time":"2025-10-04T21:54:07.525847378+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Basic_ReqCAM001_Success","Elapsed":0.1}
{"Time":"2025-10-04T21:54:07.525875766+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:07.525887911+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"=== RUN   TestHybridCameraMonitor_StartStop_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:07.525910872+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:07.5259235+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:07.52593435+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:07.525944818+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:07.525958822+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:07.525969496+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:07.525982146+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:07.525993374+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:07.526012242+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:07.526024017+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:07.526037033+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:07.526057537+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:07.526071755+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:07.526085661+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:07.526291184+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:07.526326316+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:07.538092844+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:07.538180006+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:07.538232742+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:07.53825693+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:07.538272235+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:07.53828544+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:07.538297063+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:07.627256894+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:07.627379375+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:07.627397389+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:07.627414517+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:07.627430708+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:07.628375771+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:07.628410434+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:07.628431985+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:07.628446481+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:07.628459618+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:07.628476636+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"    camera_asserters_test.go:147: ✅ Monitor stopped successfully\n"}
{"Time":"2025-10-04T21:54:07.628493496+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"    camera_monitor_comprehensive_test.go:43: ✅ Start/stop behavior validated\n"}
{"Time":"2025-10-04T21:54:07.62852145+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Output":"--- PASS: TestHybridCameraMonitor_StartStop_ReqCAM001_Success (0.10s)\n"}
{"Time":"2025-10-04T21:54:07.628543474+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_StartStop_ReqCAM001_Success","Elapsed":0.1}
{"Time":"2025-10-04T21:54:07.628567065+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceDiscovery_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:07.628586411+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceDiscovery_ReqCAM001_Success","Output":"=== RUN   TestHybridCameraMonitor_DeviceDiscovery_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:07.628670061+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceDiscovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:07.628692085+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceDiscovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:07.62871006+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceDiscovery_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:07.628727365+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceDiscovery_ReqCAM001_Success","Output":"    camera_monitor_comprehensive_test.go:56: Discovered 0 devices\n"}
{"Time":"2025-10-04T21:54:07.628749531+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceDiscovery_ReqCAM001_Success","Output":"    camera_monitor_comprehensive_test.go:63: ✅ Device discovery functionality validated\n"}
{"Time":"2025-10-04T21:54:07.62877443+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceDiscovery_ReqCAM001_Success","Output":"--- PASS: TestHybridCameraMonitor_DeviceDiscovery_ReqCAM001_Success (0.00s)\n"}
{"Time":"2025-10-04T21:54:07.628795272+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceDiscovery_ReqCAM001_Success","Elapsed":0}
{"Time":"2025-10-04T21:54:07.628812486+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:07.6288261+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"=== RUN   TestHybridCameraMonitor_Stats_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:07.628844366+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:07.628861889+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:07.628891939+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:07.628984013+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:07.629016555+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:07.629098913+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:07.629142022+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:07.629157956+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:07.629255586+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:07.629280307+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:07.629294481+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:07.629307325+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:07.629331194+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:07.629615627+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:07.629656748+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:07.629673394+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:07.64212197+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:07.642226059+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:07.642270022+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:07.642285429+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:07.642300171+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:07.642310652+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:07.642319745+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:07.730355802+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:07.73047574+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"    camera_monitor_comprehensive_test.go:84: Final stats: \u0026{Running:true ActiveTasks:0 PollingCycles:1 DeviceStateChanges:1 CapabilityProbesAttempted:1 CapabilityProbesSuccessful:1 CapabilityTimeouts:0 CapabilityParseErrors:0 PollingFailureCount:0 CurrentPollInterval:0.1 KnownDevicesCount:1 UdevEventsProcessed:0 UdevEventsFiltered:0 UdevEventsSkipped:0 DeviceEventsProcessed:0 DeviceEventsDropped:0 DevicesConnected:0}\n"}
{"Time":"2025-10-04T21:54:07.730523984+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"    camera_monitor_comprehensive_test.go:88: ✅ Monitor statistics validated\n"}
{"Time":"2025-10-04T21:54:07.730552227+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:07.730579659+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:07.73060624+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:07.730638135+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:07.730829185+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:07.730907508+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:07.730948804+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:07.730967568+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:07.73099355+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:07.831715153+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Output":"--- PASS: TestHybridCameraMonitor_Stats_ReqCAM001_Success (0.20s)\n"}
{"Time":"2025-10-04T21:54:07.831824673+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Stats_ReqCAM001_Success","Elapsed":0.2}
{"Time":"2025-10-04T21:54:07.831866703+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ConcurrentStartStop_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:07.831891991+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ConcurrentStartStop_ReqCAM001_Success","Output":"=== RUN   TestHybridCameraMonitor_ConcurrentStartStop_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:07.831928072+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ConcurrentStartStop_ReqCAM001_Success","Output":"    camera_monitor_comprehensive_test.go:93: Skipping due to test infrastructure issue - monitor already running\n"}
{"Time":"2025-10-04T21:54:07.831951374+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ConcurrentStartStop_ReqCAM001_Success","Output":"--- SKIP: TestHybridCameraMonitor_ConcurrentStartStop_ReqCAM001_Success (0.00s)\n"}
{"Time":"2025-10-04T21:54:07.831967663+04:00","Action":"skip","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ConcurrentStartStop_ReqCAM001_Success","Elapsed":0}
{"Time":"2025-10-04T21:54:07.831984614+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:07.831998951+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"=== RUN   TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:07.832017525+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:07.832033267+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:07.83210758+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:07.832125048+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:07.832144837+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"    camera_monitor_comprehensive_test.go:161: Stop on non-running monitor result: \u003cnil\u003e\n"}
{"Time":"2025-10-04T21:54:07.8321838+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:07.83220389+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:07.832267451+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:07.832448893+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:07.832503976+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:07.832547294+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:07.832577393+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:07.832610662+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:07.832637363+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:07.832671252+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=error msg=\"monitor_start_return_err - monitor is already running\"\n"}
{"Time":"2025-10-04T21:54:07.832726464+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"    camera_monitor_comprehensive_test.go:170: Second start result: monitor is already running\n"}
{"Time":"2025-10-04T21:54:07.832756275+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:07.832782471+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:07.832813731+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:07.83295086+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:07.833082987+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Failed to probe device capabilities\"\n"}
{"Time":"2025-10-04T21:54:07.83317586+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:07.833239968+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:07.833286744+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:07.833315725+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:07.833340158+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:07.833371503+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:07.833399936+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:07.833433861+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:07.833462466+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:07.833718293+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:07.833769174+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:07.83380648+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:07.833833875+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:07.833865566+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:07.833892649+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"    camera_monitor_comprehensive_test.go:174: ✅ Error handling scenarios validated\n"}
{"Time":"2025-10-04T21:54:07.833932099+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Output":"--- PASS: TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success (0.00s)\n"}
{"Time":"2025-10-04T21:54:07.833962418+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandling_ReqCAM001_Success","Elapsed":0}
{"Time":"2025-10-04T21:54:07.833998595+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:07.834031922+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"=== RUN   TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:07.834066626+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:07.834107862+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:07.834162169+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:07.834237063+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:07.83427823+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:07.834311514+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:07.834473657+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:07.834519961+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:07.834558845+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:07.834587976+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:07.834614268+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:07.834655552+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:07.834686001+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:07.834729399+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:07.834759565+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:07.834812871+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:07.849111073+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:07.849203338+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:07.849257457+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:07.849275068+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:07.849290062+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:07.849304544+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:07.849318818+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:07.935373292+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:07.93558646+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"    camera_snapshot_test.go:31: \n"}
{"Time":"2025-10-04T21:54:07.935622337+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/camera/camera_snapshot_test.go:31\n"}
{"Time":"2025-10-04T21:54:07.935649426+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"        \tError:      \t\"--stream-mmap --stream-to /tmp/test_snapshot.jpg --stream-count 1 --set-fmt-video width=640,height=480\" does not contain \"/dev/video0\"\n"}
{"Time":"2025-10-04T21:54:07.935674803+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"        \tTest:       \tTestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:07.935725865+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"        \tMessages:   \tArgs should contain device path\n"}
{"Time":"2025-10-04T21:54:07.935756738+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"    camera_snapshot_test.go:33: \n"}
{"Time":"2025-10-04T21:54:07.935790879+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/camera/camera_snapshot_test.go:33\n"}
{"Time":"2025-10-04T21:54:07.935833842+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"        \tError:      \t\"--stream-mmap --stream-to /tmp/test_snapshot.jpg --stream-count 1 --set-fmt-video width=640,height=480\" does not contain \"mjpeg\"\n"}
{"Time":"2025-10-04T21:54:07.935859788+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"        \tTest:       \tTestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:07.935882678+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"        \tMessages:   \tArgs should contain format\n"}
{"Time":"2025-10-04T21:54:07.935905159+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"    camera_snapshot_test.go:35: ✅ Snapshot functionality validated\n"}
{"Time":"2025-10-04T21:54:07.935928657+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:07.935958615+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:07.935982309+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:07.936006962+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:07.936045738+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:07.936075897+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:07.936120595+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:07.936150265+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:07.936773441+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:07\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:08.036736038+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Output":"--- FAIL: TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success (0.20s)\n"}
{"Time":"2025-10-04T21:54:08.036860331+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_SnapshotFunctionality_ReqCAM001_Success","Elapsed":0.2}
{"Time":"2025-10-04T21:54:08.036918572+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:08.036953682+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"=== RUN   TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:08.036987507+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:08.037012527+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:08.037041321+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:08.037074154+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:08.037101803+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:08.03712709+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:08.037193797+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:08.0373532+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:08.037388812+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:08.03742114+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:08.037444358+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:08.037466509+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:08.037493646+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:08.03752198+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:08.037617514+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:08.037873437+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:08.050355974+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:08.050446264+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:08.050469049+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:08.050504998+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:08.050513795+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:08.050520682+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:08.050527494+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:08.138335706+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:08.138447749+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Selecting optimal pixel format for camera\"\n"}
{"Time":"2025-10-04T21:54:08.13850817+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Selected optimal pixel format\"\n"}
{"Time":"2025-10-04T21:54:08.138540718+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"    camera_snapshot_test.go:73: ✅ Pixel format selection validated\n"}
{"Time":"2025-10-04T21:54:08.138566511+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:08.138589792+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:08.13862046+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:08.138651248+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:08.138809853+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:08.138884792+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:08.138920573+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:08.138945559+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:08.138967839+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:08.239839515+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Output":"--- PASS: TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success (0.20s)\n"}
{"Time":"2025-10-04T21:54:08.239940105+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PixelFormatSelection_ReqCAM001_Success","Elapsed":0.2}
{"Time":"2025-10-04T21:54:08.239987495+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:08.240021826+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"=== RUN   TestHybridCameraMonitor_EventSystem_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:08.240046993+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:08.240079793+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:08.240112852+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:08.240286492+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:08.240331046+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:08.240362664+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:08.240447855+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:08.240486854+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:08.240520105+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:08.240553655+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:08.240586001+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:08.240626518+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:08.24065967+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:08.240711427+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:08.240806618+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:08.241499274+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:08.256273038+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:08.256365127+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:08.256401291+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:08.256416522+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:08.256453469+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:08.256468976+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:08.256482799+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:08.341538172+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:08.341642497+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Added camera event callback\"\n"}
{"Time":"2025-10-04T21:54:08.341685259+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Added camera event handler\"\n"}
{"Time":"2025-10-04T21:54:08.341714134+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"    camera_snapshot_test.go:102: ✅ Event system functionality validated\n"}
{"Time":"2025-10-04T21:54:08.341740245+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:08.341773298+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:08.341801731+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:08.341835184+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:08.342031826+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:08.342084656+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:08.342156314+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:08.342185204+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:08.342239884+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:08.44304327+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Output":"--- PASS: TestHybridCameraMonitor_EventSystem_ReqCAM001_Success (0.20s)\n"}
{"Time":"2025-10-04T21:54:08.443132995+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventSystem_ReqCAM001_Success","Elapsed":0.2}
{"Time":"2025-10-04T21:54:08.443160213+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:08.44317033+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"=== RUN   TestHybridCameraMonitor_Configuration_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:08.443182081+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:08.443195567+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:08.443230123+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:08.443295763+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:08.443322823+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:08.443337492+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:08.443520839+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:08.44357576+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:08.443608716+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:08.443633438+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:08.443651844+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:08.443668056+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:08.443683009+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:08.443703671+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:08.44372794+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:08.443749919+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:08.456010369+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:08.456089781+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:08.456109493+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:08.456145031+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:08.456161655+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:08.456192607+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:08.456239515+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:08.544370537+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:08.544485957+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"    camera_snapshot_test.go:122: Configuration update test skipped - requires proper config structure\n"}
{"Time":"2025-10-04T21:54:08.544521422+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"    camera_snapshot_test.go:125: ✅ Configuration functionality validated\n"}
{"Time":"2025-10-04T21:54:08.544559269+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:08.544587399+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:08.544612355+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:08.544637588+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:08.544778326+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:08.544814155+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:08.544846955+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:08.54487097+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:08.544933563+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:08.645805684+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Output":"--- PASS: TestHybridCameraMonitor_Configuration_ReqCAM001_Success (0.20s)\n"}
{"Time":"2025-10-04T21:54:08.645905844+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Configuration_ReqCAM001_Success","Elapsed":0.2}
{"Time":"2025-10-04T21:54:08.645954855+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:08.645982392+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"=== RUN   TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:08.646242478+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:08.646290758+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:08.646327167+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:08.646465523+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:08.646511998+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:08.646550678+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:08.646595301+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:08.64663005+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:08.646750673+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:08.647095704+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:08.647154859+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:08.647185912+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:08.647231687+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:08.647261503+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:08.6472884+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:08.64732178+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:08.64735034+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:08.647375224+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:08.647420235+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:08.659018376+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:08.659115708+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:08.659148702+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:08.65918814+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:08.659199703+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:08.6592182+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:08.65924337+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:08.748275862+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:08.748377622+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"    camera_asserters_test.go:194: ✅ Device discovery completed: 1 devices found\n"}
{"Time":"2025-10-04T21:54:08.748418828+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"    camera_asserters_test.go:206: ✅ Device /dev/video0 validated successfully\n"}
{"Time":"2025-10-04T21:54:08.748445192+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"    camera_snapshot_test.go:156: ✅ Asserter helper methods validated\n"}
{"Time":"2025-10-04T21:54:08.748470497+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:08.748500991+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:08.748528221+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:08.748552402+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:08.748709636+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:08.748797014+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:08.748839642+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:08.748866394+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:08.748883264+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:08.849784579+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Output":"--- PASS: TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success (0.20s)\n"}
{"Time":"2025-10-04T21:54:08.849888093+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AsserterHelpers_ReqCAM001_Success","Elapsed":0.2}
{"Time":"2025-10-04T21:54:08.849948577+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive"}
{"Time":"2025-10-04T21:54:08.849974006+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive","Output":"=== RUN   TestCameraMonitor_SpecificFunctions_Comprehensive\n"}
{"Time":"2025-10-04T21:54:08.849997822+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:08.850026247+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:08.850051149+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:08.850083444+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive/handleConfigurationUpdate_function"}
{"Time":"2025-10-04T21:54:08.850106157+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive/handleConfigurationUpdate_function","Output":"=== RUN   TestCameraMonitor_SpecificFunctions_Comprehensive/handleConfigurationUpdate_function\n"}
{"Time":"2025-10-04T21:54:08.850166458+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive/handleConfigurationUpdate_function","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:08.850258248+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive/handleConfigurationUpdate_function","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:08.850302543+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive/handleConfigurationUpdate_function","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:08.850535059+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive/handleConfigurationUpdate_function","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:08.850590566+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive/handleConfigurationUpdate_function","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:08.850621417+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive/handleConfigurationUpdate_function","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:08.850656175+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive/handleConfigurationUpdate_function","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:08.850683105+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive/handleConfigurationUpdate_function","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:08.850708678+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive/handleConfigurationUpdate_function","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:08.850755698+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:08.850787247+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:08.850813391+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:08.850857262+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:08.864278721+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive","Output":"time=\"2025-10-04 21:54:08\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:08.864383614+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:08.864400154+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:08.864426348+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:08.864437958+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:08.864447093+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:08.864456034+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive","Output":"time=\"2025-10-04 21:54:08\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:08.951376207+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:09.051711695+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive","Output":"    camera_specific_functions_test.go:37: ✅ handleConfigurationUpdate function exercised\n"}
{"Time":"2025-10-04T21:54:09.051825431+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive/handleConfigurationUpdate_function","Output":"--- PASS: TestCameraMonitor_SpecificFunctions_Comprehensive/handleConfigurationUpdate_function (0.20s)\n"}
{"Time":"2025-10-04T21:54:09.051862987+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive/handleConfigurationUpdate_function","Elapsed":0.2}
{"Time":"2025-10-04T21:54:09.051901528+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive/processEvent_function_various_events"}
{"Time":"2025-10-04T21:54:09.051928719+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive/processEvent_function_various_events","Output":"=== RUN   TestCameraMonitor_SpecificFunctions_Comprehensive/processEvent_function_various_events\n"}
{"Time":"2025-10-04T21:54:09.051988058+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive","Output":"    camera_specific_functions_test.go:44: ✅ Monitor already running - processEvent function exercised through event system\n"}
{"Time":"2025-10-04T21:54:09.052061216+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive/processEvent_function_various_events","Output":"--- PASS: TestCameraMonitor_SpecificFunctions_Comprehensive/processEvent_function_various_events (0.00s)\n"}
{"Time":"2025-10-04T21:54:09.052095192+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive/processEvent_function_various_events","Elapsed":0}
{"Time":"2025-10-04T21:54:09.052126504+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive/min_function_various_inputs"}
{"Time":"2025-10-04T21:54:09.052150973+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive/min_function_various_inputs","Output":"=== RUN   TestCameraMonitor_SpecificFunctions_Comprehensive/min_function_various_inputs\n"}
{"Time":"2025-10-04T21:54:09.052181632+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive","Output":"    camera_specific_functions_test.go:73: ✅ Monitor already running - min function exercised through polling interval calculations\n"}
{"Time":"2025-10-04T21:54:09.052250655+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive/min_function_various_inputs","Output":"--- PASS: TestCameraMonitor_SpecificFunctions_Comprehensive/min_function_various_inputs (0.00s)\n"}
{"Time":"2025-10-04T21:54:09.052293988+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive/min_function_various_inputs","Elapsed":0}
{"Time":"2025-10-04T21:54:09.052332704+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive/addIPCameraSources_function"}
{"Time":"2025-10-04T21:54:09.052356388+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive/addIPCameraSources_function","Output":"=== RUN   TestCameraMonitor_SpecificFunctions_Comprehensive/addIPCameraSources_function\n"}
{"Time":"2025-10-04T21:54:09.052384487+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive","Output":"    camera_specific_functions_test.go:103: ✅ Monitor already running - addIPCameraSources function exercised during monitor initialization\n"}
{"Time":"2025-10-04T21:54:09.052406181+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive/addIPCameraSources_function","Output":"--- PASS: TestCameraMonitor_SpecificFunctions_Comprehensive/addIPCameraSources_function (0.00s)\n"}
{"Time":"2025-10-04T21:54:09.052430157+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive/addIPCameraSources_function","Elapsed":0}
{"Time":"2025-10-04T21:54:09.052448136+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive/startPollOnlyMonitoring_function"}
{"Time":"2025-10-04T21:54:09.052466343+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive/startPollOnlyMonitoring_function","Output":"=== RUN   TestCameraMonitor_SpecificFunctions_Comprehensive/startPollOnlyMonitoring_function\n"}
{"Time":"2025-10-04T21:54:09.052512969+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive","Output":"    camera_specific_functions_test.go:126: ✅ Monitor already running - startPollOnlyMonitoring function exercised during monitor operation\n"}
{"Time":"2025-10-04T21:54:09.052552085+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive/startPollOnlyMonitoring_function","Output":"--- PASS: TestCameraMonitor_SpecificFunctions_Comprehensive/startPollOnlyMonitoring_function (0.00s)\n"}
{"Time":"2025-10-04T21:54:09.052570741+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive/startPollOnlyMonitoring_function","Elapsed":0}
{"Time":"2025-10-04T21:54:09.05258694+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:09.052603313+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:09.052618407+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:09.05263389+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:09.053198865+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:09.053271461+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:09.05330932+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:09.0533364+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:09.053358812+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:09.153888748+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive","Output":"--- PASS: TestCameraMonitor_SpecificFunctions_Comprehensive (0.30s)\n"}
{"Time":"2025-10-04T21:54:09.15401397+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SpecificFunctions_Comprehensive","Elapsed":0.3}
{"Time":"2025-10-04T21:54:09.154051786+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive"}
{"Time":"2025-10-04T21:54:09.154075041+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"=== RUN   TestCameraMonitor_DeviceCreation_Comprehensive\n"}
{"Time":"2025-10-04T21:54:09.154108259+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:09.1541324+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:09.154156575+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:09.154184921+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:09.154232918+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:09.154277568+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:09.154445419+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:09.154488799+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:09.154521389+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:09.154552571+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:09.15457831+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:09.154607504+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:09.154647742+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:09.154679071+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:09.154702422+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:09.154845731+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:09.168334753+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:09.168417866+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:09.168440607+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:09.168458741+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:09.168469158+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:09.1684896+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:09.168499647+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:09.255372794+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:09.255474184+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createNetworkCameraDeviceInfo_various_inputs"}
{"Time":"2025-10-04T21:54:09.255501568+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createNetworkCameraDeviceInfo_various_inputs","Output":"=== RUN   TestCameraMonitor_DeviceCreation_Comprehensive/createNetworkCameraDeviceInfo_various_inputs\n"}
{"Time":"2025-10-04T21:54:09.255577252+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createNetworkCameraDeviceInfo_various_inputs/valid_rtsp_source"}
{"Time":"2025-10-04T21:54:09.255611286+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createNetworkCameraDeviceInfo_various_inputs/valid_rtsp_source","Output":"=== RUN   TestCameraMonitor_DeviceCreation_Comprehensive/createNetworkCameraDeviceInfo_various_inputs/valid_rtsp_source\n"}
{"Time":"2025-10-04T21:54:09.255661244+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createNetworkCameraDeviceInfo_various_inputs/valid_rtsp_source","Output":"--- PASS: TestCameraMonitor_DeviceCreation_Comprehensive/createNetworkCameraDeviceInfo_various_inputs/valid_rtsp_source (0.00s)\n"}
{"Time":"2025-10-04T21:54:09.255693244+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createNetworkCameraDeviceInfo_various_inputs/valid_rtsp_source","Elapsed":0}
{"Time":"2025-10-04T21:54:09.255724727+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createNetworkCameraDeviceInfo_various_inputs/valid_http_source"}
{"Time":"2025-10-04T21:54:09.255749199+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createNetworkCameraDeviceInfo_various_inputs/valid_http_source","Output":"=== RUN   TestCameraMonitor_DeviceCreation_Comprehensive/createNetworkCameraDeviceInfo_various_inputs/valid_http_source\n"}
{"Time":"2025-10-04T21:54:09.255792384+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createNetworkCameraDeviceInfo_various_inputs/valid_http_source","Output":"--- PASS: TestCameraMonitor_DeviceCreation_Comprehensive/createNetworkCameraDeviceInfo_various_inputs/valid_http_source (0.00s)\n"}
{"Time":"2025-10-04T21:54:09.255830598+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createNetworkCameraDeviceInfo_various_inputs/valid_http_source","Elapsed":0}
{"Time":"2025-10-04T21:54:09.255861967+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createNetworkCameraDeviceInfo_various_inputs/empty_source"}
{"Time":"2025-10-04T21:54:09.255886758+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createNetworkCameraDeviceInfo_various_inputs/empty_source","Output":"=== RUN   TestCameraMonitor_DeviceCreation_Comprehensive/createNetworkCameraDeviceInfo_various_inputs/empty_source\n"}
{"Time":"2025-10-04T21:54:09.255917793+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createNetworkCameraDeviceInfo_various_inputs/empty_source","Output":"--- PASS: TestCameraMonitor_DeviceCreation_Comprehensive/createNetworkCameraDeviceInfo_various_inputs/empty_source (0.00s)\n"}
{"Time":"2025-10-04T21:54:09.255947224+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createNetworkCameraDeviceInfo_various_inputs/empty_source","Elapsed":0}
{"Time":"2025-10-04T21:54:09.255994058+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createNetworkCameraDeviceInfo_various_inputs/long_source"}
{"Time":"2025-10-04T21:54:09.256029577+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createNetworkCameraDeviceInfo_various_inputs/long_source","Output":"=== RUN   TestCameraMonitor_DeviceCreation_Comprehensive/createNetworkCameraDeviceInfo_various_inputs/long_source\n"}
{"Time":"2025-10-04T21:54:09.256063875+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createNetworkCameraDeviceInfo_various_inputs/long_source","Output":"--- PASS: TestCameraMonitor_DeviceCreation_Comprehensive/createNetworkCameraDeviceInfo_various_inputs/long_source (0.00s)\n"}
{"Time":"2025-10-04T21:54:09.256085469+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createNetworkCameraDeviceInfo_various_inputs/long_source","Elapsed":0}
{"Time":"2025-10-04T21:54:09.256105108+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"    camera_specific_functions_test.go:215: ✅ createNetworkCameraDeviceInfo with various inputs validated\n"}
{"Time":"2025-10-04T21:54:09.256139298+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createNetworkCameraDeviceInfo_various_inputs","Output":"--- PASS: TestCameraMonitor_DeviceCreation_Comprehensive/createNetworkCameraDeviceInfo_various_inputs (0.00s)\n"}
{"Time":"2025-10-04T21:54:09.256168988+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createNetworkCameraDeviceInfo_various_inputs","Elapsed":0}
{"Time":"2025-10-04T21:54:09.25633493+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createFileCameraDeviceInfo_various_inputs"}
{"Time":"2025-10-04T21:54:09.256351564+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createFileCameraDeviceInfo_various_inputs","Output":"=== RUN   TestCameraMonitor_DeviceCreation_Comprehensive/createFileCameraDeviceInfo_various_inputs\n"}
{"Time":"2025-10-04T21:54:09.256363381+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createFileCameraDeviceInfo_various_inputs/valid_mp4_source"}
{"Time":"2025-10-04T21:54:09.256374415+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createFileCameraDeviceInfo_various_inputs/valid_mp4_source","Output":"=== RUN   TestCameraMonitor_DeviceCreation_Comprehensive/createFileCameraDeviceInfo_various_inputs/valid_mp4_source\n"}
{"Time":"2025-10-04T21:54:09.256387382+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createFileCameraDeviceInfo_various_inputs/valid_mp4_source","Output":"--- PASS: TestCameraMonitor_DeviceCreation_Comprehensive/createFileCameraDeviceInfo_various_inputs/valid_mp4_source (0.00s)\n"}
{"Time":"2025-10-04T21:54:09.256404807+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createFileCameraDeviceInfo_various_inputs/valid_mp4_source","Elapsed":0}
{"Time":"2025-10-04T21:54:09.25642785+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createFileCameraDeviceInfo_various_inputs/valid_avi_source"}
{"Time":"2025-10-04T21:54:09.256440985+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createFileCameraDeviceInfo_various_inputs/valid_avi_source","Output":"=== RUN   TestCameraMonitor_DeviceCreation_Comprehensive/createFileCameraDeviceInfo_various_inputs/valid_avi_source\n"}
{"Time":"2025-10-04T21:54:09.256455104+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createFileCameraDeviceInfo_various_inputs/valid_avi_source","Output":"--- PASS: TestCameraMonitor_DeviceCreation_Comprehensive/createFileCameraDeviceInfo_various_inputs/valid_avi_source (0.00s)\n"}
{"Time":"2025-10-04T21:54:09.256467878+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createFileCameraDeviceInfo_various_inputs/valid_avi_source","Elapsed":0}
{"Time":"2025-10-04T21:54:09.256481288+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createFileCameraDeviceInfo_various_inputs/empty_source"}
{"Time":"2025-10-04T21:54:09.256497452+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createFileCameraDeviceInfo_various_inputs/empty_source","Output":"=== RUN   TestCameraMonitor_DeviceCreation_Comprehensive/createFileCameraDeviceInfo_various_inputs/empty_source\n"}
{"Time":"2025-10-04T21:54:09.256512551+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createFileCameraDeviceInfo_various_inputs/empty_source","Output":"--- PASS: TestCameraMonitor_DeviceCreation_Comprehensive/createFileCameraDeviceInfo_various_inputs/empty_source (0.00s)\n"}
{"Time":"2025-10-04T21:54:09.256525378+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createFileCameraDeviceInfo_various_inputs/empty_source","Elapsed":0}
{"Time":"2025-10-04T21:54:09.256538357+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createFileCameraDeviceInfo_various_inputs/long_path_source"}
{"Time":"2025-10-04T21:54:09.25654945+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createFileCameraDeviceInfo_various_inputs/long_path_source","Output":"=== RUN   TestCameraMonitor_DeviceCreation_Comprehensive/createFileCameraDeviceInfo_various_inputs/long_path_source\n"}
{"Time":"2025-10-04T21:54:09.256567559+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createFileCameraDeviceInfo_various_inputs/long_path_source","Output":"--- PASS: TestCameraMonitor_DeviceCreation_Comprehensive/createFileCameraDeviceInfo_various_inputs/long_path_source (0.00s)\n"}
{"Time":"2025-10-04T21:54:09.256585972+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createFileCameraDeviceInfo_various_inputs/long_path_source","Elapsed":0}
{"Time":"2025-10-04T21:54:09.256615559+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"    camera_specific_functions_test.go:278: ✅ createFileCameraDeviceInfo with various inputs validated\n"}
{"Time":"2025-10-04T21:54:09.256633039+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createFileCameraDeviceInfo_various_inputs","Output":"--- PASS: TestCameraMonitor_DeviceCreation_Comprehensive/createFileCameraDeviceInfo_various_inputs (0.00s)\n"}
{"Time":"2025-10-04T21:54:09.25664501+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createFileCameraDeviceInfo_various_inputs","Elapsed":0}
{"Time":"2025-10-04T21:54:09.256656778+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createGenericCameraDeviceInfo_various_inputs"}
{"Time":"2025-10-04T21:54:09.25666755+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createGenericCameraDeviceInfo_various_inputs","Output":"=== RUN   TestCameraMonitor_DeviceCreation_Comprehensive/createGenericCameraDeviceInfo_various_inputs\n"}
{"Time":"2025-10-04T21:54:09.256684542+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createGenericCameraDeviceInfo_various_inputs/valid_video0_source"}
{"Time":"2025-10-04T21:54:09.256696272+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createGenericCameraDeviceInfo_various_inputs/valid_video0_source","Output":"=== RUN   TestCameraMonitor_DeviceCreation_Comprehensive/createGenericCameraDeviceInfo_various_inputs/valid_video0_source\n"}
{"Time":"2025-10-04T21:54:09.256709336+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createGenericCameraDeviceInfo_various_inputs/valid_video0_source","Output":"--- PASS: TestCameraMonitor_DeviceCreation_Comprehensive/createGenericCameraDeviceInfo_various_inputs/valid_video0_source (0.00s)\n"}
{"Time":"2025-10-04T21:54:09.256722033+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createGenericCameraDeviceInfo_various_inputs/valid_video0_source","Elapsed":0}
{"Time":"2025-10-04T21:54:09.256733711+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createGenericCameraDeviceInfo_various_inputs/valid_video1_source"}
{"Time":"2025-10-04T21:54:09.256743724+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createGenericCameraDeviceInfo_various_inputs/valid_video1_source","Output":"=== RUN   TestCameraMonitor_DeviceCreation_Comprehensive/createGenericCameraDeviceInfo_various_inputs/valid_video1_source\n"}
{"Time":"2025-10-04T21:54:09.256755403+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createGenericCameraDeviceInfo_various_inputs/valid_video1_source","Output":"--- PASS: TestCameraMonitor_DeviceCreation_Comprehensive/createGenericCameraDeviceInfo_various_inputs/valid_video1_source (0.00s)\n"}
{"Time":"2025-10-04T21:54:09.256772791+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createGenericCameraDeviceInfo_various_inputs/valid_video1_source","Elapsed":0}
{"Time":"2025-10-04T21:54:09.256791137+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createGenericCameraDeviceInfo_various_inputs/empty_source"}
{"Time":"2025-10-04T21:54:09.256798244+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createGenericCameraDeviceInfo_various_inputs/empty_source","Output":"=== RUN   TestCameraMonitor_DeviceCreation_Comprehensive/createGenericCameraDeviceInfo_various_inputs/empty_source\n"}
{"Time":"2025-10-04T21:54:09.256810451+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createGenericCameraDeviceInfo_various_inputs/empty_source","Output":"--- PASS: TestCameraMonitor_DeviceCreation_Comprehensive/createGenericCameraDeviceInfo_various_inputs/empty_source (0.00s)\n"}
{"Time":"2025-10-04T21:54:09.256817704+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createGenericCameraDeviceInfo_various_inputs/empty_source","Elapsed":0}
{"Time":"2025-10-04T21:54:09.256824716+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createGenericCameraDeviceInfo_various_inputs/special_chars_source"}
{"Time":"2025-10-04T21:54:09.256834651+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createGenericCameraDeviceInfo_various_inputs/special_chars_source","Output":"=== RUN   TestCameraMonitor_DeviceCreation_Comprehensive/createGenericCameraDeviceInfo_various_inputs/special_chars_source\n"}
{"Time":"2025-10-04T21:54:09.256852837+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createGenericCameraDeviceInfo_various_inputs/special_chars_source","Output":"--- PASS: TestCameraMonitor_DeviceCreation_Comprehensive/createGenericCameraDeviceInfo_various_inputs/special_chars_source (0.00s)\n"}
{"Time":"2025-10-04T21:54:09.256865349+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createGenericCameraDeviceInfo_various_inputs/special_chars_source","Elapsed":0}
{"Time":"2025-10-04T21:54:09.256873291+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"    camera_specific_functions_test.go:341: ✅ createGenericCameraDeviceInfo with various inputs validated\n"}
{"Time":"2025-10-04T21:54:09.256881197+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createGenericCameraDeviceInfo_various_inputs","Output":"--- PASS: TestCameraMonitor_DeviceCreation_Comprehensive/createGenericCameraDeviceInfo_various_inputs (0.00s)\n"}
{"Time":"2025-10-04T21:54:09.256891619+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive/createGenericCameraDeviceInfo_various_inputs","Elapsed":0}
{"Time":"2025-10-04T21:54:09.256898778+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:09.256911561+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:09.256919567+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:09.256929883+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:09.257349987+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:09.257399464+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:09.257436457+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:09.257463594+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:09.257486512+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:09.357880583+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Output":"--- PASS: TestCameraMonitor_DeviceCreation_Comprehensive (0.20s)\n"}
{"Time":"2025-10-04T21:54:09.357979215+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_DeviceCreation_Comprehensive","Elapsed":0.2}
{"Time":"2025-10-04T21:54:09.358024719+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive"}
{"Time":"2025-10-04T21:54:09.358051179+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"=== RUN   TestCameraMonitor_SnapshotFunctionality_Comprehensive\n"}
{"Time":"2025-10-04T21:54:09.358085209+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:09.358113763+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:09.358146569+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:09.358250332+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:09.358299283+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:09.358389752+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:09.358581579+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:09.358628545+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:09.358664933+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:09.358691405+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:09.358715616+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:09.358747042+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:09.358780028+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:09.358815328+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:09.358850278+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:09.3590115+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:09.373194691+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:09.373293442+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:09.373327286+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:09.37334973+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:09.37336045+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:09.373370455+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:09.373380282+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:09.459410373+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:09.459521576+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters"}
{"Time":"2025-10-04T21:54:09.459551237+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters","Output":"=== RUN   TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters\n"}
{"Time":"2025-10-04T21:54:09.459591772+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/default_params"}
{"Time":"2025-10-04T21:54:09.459617664+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/default_params","Output":"=== RUN   TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/default_params\n"}
{"Time":"2025-10-04T21:54:09.459663694+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/default_params","Output":"    camera_specific_functions_test.go:380: \n"}
{"Time":"2025-10-04T21:54:09.459723253+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/default_params","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/camera/camera_specific_functions_test.go:380\n"}
{"Time":"2025-10-04T21:54:09.459754576+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/default_params","Output":"        \tError:      \t\"--stream-mmap --stream-to /tmp/test1.jpg --stream-count 1 --set-fmt-video width=640,height=480\" does not contain \"/dev/video0\"\n"}
{"Time":"2025-10-04T21:54:09.459793445+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/default_params","Output":"        \tTest:       \tTestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/default_params\n"}
{"Time":"2025-10-04T21:54:09.459823022+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/default_params","Output":"        \tMessages:   \tArgs should contain device path for default_params\n"}
{"Time":"2025-10-04T21:54:09.459860483+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/default_params","Output":"    camera_specific_functions_test.go:383: \n"}
{"Time":"2025-10-04T21:54:09.459889738+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/default_params","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/camera/camera_specific_functions_test.go:383\n"}
{"Time":"2025-10-04T21:54:09.459917774+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/default_params","Output":"        \tError:      \t\"--stream-mmap --stream-to /tmp/test1.jpg --stream-count 1 --set-fmt-video width=640,height=480\" does not contain \"mjpeg\"\n"}
{"Time":"2025-10-04T21:54:09.459945374+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/default_params","Output":"        \tTest:       \tTestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/default_params\n"}
{"Time":"2025-10-04T21:54:09.459980036+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/default_params","Output":"        \tMessages:   \tArgs should contain format for default_params\n"}
{"Time":"2025-10-04T21:54:09.460019561+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/default_params","Output":"--- FAIL: TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/default_params (0.00s)\n"}
{"Time":"2025-10-04T21:54:09.460049465+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/default_params","Elapsed":0}
{"Time":"2025-10-04T21:54:09.46010561+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/high_res"}
{"Time":"2025-10-04T21:54:09.460141793+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/high_res","Output":"=== RUN   TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/high_res\n"}
{"Time":"2025-10-04T21:54:09.460170251+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/high_res","Output":"    camera_specific_functions_test.go:380: \n"}
{"Time":"2025-10-04T21:54:09.460195818+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/high_res","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/camera/camera_specific_functions_test.go:380\n"}
{"Time":"2025-10-04T21:54:09.460252167+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/high_res","Output":"        \tError:      \t\"--stream-mmap --stream-to /tmp/test2.jpg --stream-count 1 --set-fmt-video width=1920,height=1080\" does not contain \"/dev/video0\"\n"}
{"Time":"2025-10-04T21:54:09.460281854+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/high_res","Output":"        \tTest:       \tTestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/high_res\n"}
{"Time":"2025-10-04T21:54:09.460307782+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/high_res","Output":"        \tMessages:   \tArgs should contain device path for high_res\n"}
{"Time":"2025-10-04T21:54:09.46035211+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/high_res","Output":"    camera_specific_functions_test.go:383: \n"}
{"Time":"2025-10-04T21:54:09.460380053+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/high_res","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/camera/camera_specific_functions_test.go:383\n"}
{"Time":"2025-10-04T21:54:09.460406953+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/high_res","Output":"        \tError:      \t\"--stream-mmap --stream-to /tmp/test2.jpg --stream-count 1 --set-fmt-video width=1920,height=1080\" does not contain \"mjpeg\"\n"}
{"Time":"2025-10-04T21:54:09.460435732+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/high_res","Output":"        \tTest:       \tTestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/high_res\n"}
{"Time":"2025-10-04T21:54:09.460479612+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/high_res","Output":"        \tMessages:   \tArgs should contain format for high_res\n"}
{"Time":"2025-10-04T21:54:09.460523624+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/high_res","Output":"--- FAIL: TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/high_res (0.00s)\n"}
{"Time":"2025-10-04T21:54:09.460554451+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/high_res","Elapsed":0}
{"Time":"2025-10-04T21:54:09.460583152+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/low_res"}
{"Time":"2025-10-04T21:54:09.46060662+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/low_res","Output":"=== RUN   TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/low_res\n"}
{"Time":"2025-10-04T21:54:09.4606409+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/low_res","Output":"    camera_specific_functions_test.go:380: \n"}
{"Time":"2025-10-04T21:54:09.460668548+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/low_res","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/camera/camera_specific_functions_test.go:380\n"}
{"Time":"2025-10-04T21:54:09.460703661+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/low_res","Output":"        \tError:      \t\"--stream-mmap --stream-to /tmp/test3.jpg --stream-count 1 --set-fmt-video width=320,height=240\" does not contain \"/dev/video0\"\n"}
{"Time":"2025-10-04T21:54:09.460733622+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/low_res","Output":"        \tTest:       \tTestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/low_res\n"}
{"Time":"2025-10-04T21:54:09.460760579+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/low_res","Output":"        \tMessages:   \tArgs should contain device path for low_res\n"}
{"Time":"2025-10-04T21:54:09.460796576+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/low_res","Output":"    camera_specific_functions_test.go:383: \n"}
{"Time":"2025-10-04T21:54:09.460824913+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/low_res","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/camera/camera_specific_functions_test.go:383\n"}
{"Time":"2025-10-04T21:54:09.460870399+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/low_res","Output":"        \tError:      \t\"--stream-mmap --stream-to /tmp/test3.jpg --stream-count 1 --set-fmt-video width=320,height=240\" does not contain \"mjpeg\"\n"}
{"Time":"2025-10-04T21:54:09.460910444+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/low_res","Output":"        \tTest:       \tTestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/low_res\n"}
{"Time":"2025-10-04T21:54:09.46093775+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/low_res","Output":"        \tMessages:   \tArgs should contain format for low_res\n"}
{"Time":"2025-10-04T21:54:09.46097055+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/low_res","Output":"--- FAIL: TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/low_res (0.00s)\n"}
{"Time":"2025-10-04T21:54:09.461009401+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/low_res","Elapsed":0}
{"Time":"2025-10-04T21:54:09.461039032+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/different_format"}
{"Time":"2025-10-04T21:54:09.461072352+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/different_format","Output":"=== RUN   TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/different_format\n"}
{"Time":"2025-10-04T21:54:09.461107582+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/different_format","Output":"    camera_specific_functions_test.go:380: \n"}
{"Time":"2025-10-04T21:54:09.461135423+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/different_format","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/camera/camera_specific_functions_test.go:380\n"}
{"Time":"2025-10-04T21:54:09.46116201+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/different_format","Output":"        \tError:      \t\"--stream-mmap --stream-to /tmp/test4.jpg --stream-count 1 --set-fmt-video width=640,height=480\" does not contain \"/dev/video0\"\n"}
{"Time":"2025-10-04T21:54:09.461190067+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/different_format","Output":"        \tTest:       \tTestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/different_format\n"}
{"Time":"2025-10-04T21:54:09.461252395+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/different_format","Output":"        \tMessages:   \tArgs should contain device path for different_format\n"}
{"Time":"2025-10-04T21:54:09.461290856+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/different_format","Output":"    camera_specific_functions_test.go:383: \n"}
{"Time":"2025-10-04T21:54:09.46131925+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/different_format","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/camera/camera_specific_functions_test.go:383\n"}
{"Time":"2025-10-04T21:54:09.461344862+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/different_format","Output":"        \tError:      \t\"--stream-mmap --stream-to /tmp/test4.jpg --stream-count 1 --set-fmt-video width=640,height=480\" does not contain \"yuyv\"\n"}
{"Time":"2025-10-04T21:54:09.461373196+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/different_format","Output":"        \tTest:       \tTestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/different_format\n"}
{"Time":"2025-10-04T21:54:09.461400423+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/different_format","Output":"        \tMessages:   \tArgs should contain format for different_format\n"}
{"Time":"2025-10-04T21:54:09.461441969+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/different_format","Output":"--- FAIL: TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/different_format (0.00s)\n"}
{"Time":"2025-10-04T21:54:09.461482616+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/different_format","Elapsed":0}
{"Time":"2025-10-04T21:54:09.461513723+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/zero_dimensions"}
{"Time":"2025-10-04T21:54:09.461538764+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/zero_dimensions","Output":"=== RUN   TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/zero_dimensions\n"}
{"Time":"2025-10-04T21:54:09.461564373+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/zero_dimensions","Output":"    camera_specific_functions_test.go:380: \n"}
{"Time":"2025-10-04T21:54:09.461607772+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/zero_dimensions","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/camera/camera_specific_functions_test.go:380\n"}
{"Time":"2025-10-04T21:54:09.461646461+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/zero_dimensions","Output":"        \tError:      \t\"--stream-mmap --stream-to /tmp/test5.jpg --stream-count 1\" does not contain \"/dev/video0\"\n"}
{"Time":"2025-10-04T21:54:09.461676287+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/zero_dimensions","Output":"        \tTest:       \tTestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/zero_dimensions\n"}
{"Time":"2025-10-04T21:54:09.461702263+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/zero_dimensions","Output":"        \tMessages:   \tArgs should contain device path for zero_dimensions\n"}
{"Time":"2025-10-04T21:54:09.461728654+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/zero_dimensions","Output":"    camera_specific_functions_test.go:383: \n"}
{"Time":"2025-10-04T21:54:09.461762113+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/zero_dimensions","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/camera/camera_specific_functions_test.go:383\n"}
{"Time":"2025-10-04T21:54:09.461791996+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/zero_dimensions","Output":"        \tError:      \t\"--stream-mmap --stream-to /tmp/test5.jpg --stream-count 1\" does not contain \"mjpeg\"\n"}
{"Time":"2025-10-04T21:54:09.46182626+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/zero_dimensions","Output":"        \tTest:       \tTestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/zero_dimensions\n"}
{"Time":"2025-10-04T21:54:09.461854676+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/zero_dimensions","Output":"        \tMessages:   \tArgs should contain format for zero_dimensions\n"}
{"Time":"2025-10-04T21:54:09.461887343+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/zero_dimensions","Output":"--- FAIL: TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/zero_dimensions (0.00s)\n"}
{"Time":"2025-10-04T21:54:09.461925662+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/zero_dimensions","Elapsed":0}
{"Time":"2025-10-04T21:54:09.462010992+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/negative_dimensions"}
{"Time":"2025-10-04T21:54:09.462058159+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/negative_dimensions","Output":"=== RUN   TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/negative_dimensions\n"}
{"Time":"2025-10-04T21:54:09.462087351+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/negative_dimensions","Output":"    camera_specific_functions_test.go:380: \n"}
{"Time":"2025-10-04T21:54:09.46211314+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/negative_dimensions","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/camera/camera_specific_functions_test.go:380\n"}
{"Time":"2025-10-04T21:54:09.462139456+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/negative_dimensions","Output":"        \tError:      \t\"--stream-mmap --stream-to /tmp/test6.jpg --stream-count 1\" does not contain \"/dev/video0\"\n"}
{"Time":"2025-10-04T21:54:09.462175044+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/negative_dimensions","Output":"        \tTest:       \tTestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/negative_dimensions\n"}
{"Time":"2025-10-04T21:54:09.462203393+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/negative_dimensions","Output":"        \tMessages:   \tArgs should contain device path for negative_dimensions\n"}
{"Time":"2025-10-04T21:54:09.462250591+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/negative_dimensions","Output":"    camera_specific_functions_test.go:383: \n"}
{"Time":"2025-10-04T21:54:09.462277589+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/negative_dimensions","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/camera/camera_specific_functions_test.go:383\n"}
{"Time":"2025-10-04T21:54:09.462304802+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/negative_dimensions","Output":"        \tError:      \t\"--stream-mmap --stream-to /tmp/test6.jpg --stream-count 1\" does not contain \"mjpeg\"\n"}
{"Time":"2025-10-04T21:54:09.462332375+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/negative_dimensions","Output":"        \tTest:       \tTestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/negative_dimensions\n"}
{"Time":"2025-10-04T21:54:09.462397786+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/negative_dimensions","Output":"        \tMessages:   \tArgs should contain format for negative_dimensions\n"}
{"Time":"2025-10-04T21:54:09.462438267+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/negative_dimensions","Output":"--- FAIL: TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/negative_dimensions (0.00s)\n"}
{"Time":"2025-10-04T21:54:09.462472006+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/negative_dimensions","Elapsed":0}
{"Time":"2025-10-04T21:54:09.462500664+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/very_large_dimensions"}
{"Time":"2025-10-04T21:54:09.462533242+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/very_large_dimensions","Output":"=== RUN   TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/very_large_dimensions\n"}
{"Time":"2025-10-04T21:54:09.462570241+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/very_large_dimensions","Output":"    camera_specific_functions_test.go:380: \n"}
{"Time":"2025-10-04T21:54:09.462598728+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/very_large_dimensions","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/camera/camera_specific_functions_test.go:380\n"}
{"Time":"2025-10-04T21:54:09.462626608+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/very_large_dimensions","Output":"        \tError:      \t\"--stream-mmap --stream-to /tmp/test7.jpg --stream-count 1 --set-fmt-video width=10000,height=10000\" does not contain \"/dev/video0\"\n"}
{"Time":"2025-10-04T21:54:09.462653757+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/very_large_dimensions","Output":"        \tTest:       \tTestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/very_large_dimensions\n"}
{"Time":"2025-10-04T21:54:09.462679856+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/very_large_dimensions","Output":"        \tMessages:   \tArgs should contain device path for very_large_dimensions\n"}
{"Time":"2025-10-04T21:54:09.46270632+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/very_large_dimensions","Output":"    camera_specific_functions_test.go:383: \n"}
{"Time":"2025-10-04T21:54:09.4627586+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/very_large_dimensions","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/camera/camera_specific_functions_test.go:383\n"}
{"Time":"2025-10-04T21:54:09.462790591+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/very_large_dimensions","Output":"        \tError:      \t\"--stream-mmap --stream-to /tmp/test7.jpg --stream-count 1 --set-fmt-video width=10000,height=10000\" does not contain \"mjpeg\"\n"}
{"Time":"2025-10-04T21:54:09.462818149+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/very_large_dimensions","Output":"        \tTest:       \tTestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/very_large_dimensions\n"}
{"Time":"2025-10-04T21:54:09.462844528+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/very_large_dimensions","Output":"        \tMessages:   \tArgs should contain format for very_large_dimensions\n"}
{"Time":"2025-10-04T21:54:09.462876727+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/very_large_dimensions","Output":"--- FAIL: TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/very_large_dimensions (0.00s)\n"}
{"Time":"2025-10-04T21:54:09.462914068+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/very_large_dimensions","Elapsed":0}
{"Time":"2025-10-04T21:54:09.462944354+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_format"}
{"Time":"2025-10-04T21:54:09.46296996+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_format","Output":"=== RUN   TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_format\n"}
{"Time":"2025-10-04T21:54:09.462996622+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_format","Output":"    camera_specific_functions_test.go:380: \n"}
{"Time":"2025-10-04T21:54:09.463022776+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_format","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/camera/camera_specific_functions_test.go:380\n"}
{"Time":"2025-10-04T21:54:09.46304954+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_format","Output":"        \tError:      \t\"--stream-mmap --stream-to /tmp/test8.jpg --stream-count 1 --set-fmt-video width=640,height=480\" does not contain \"/dev/video0\"\n"}
{"Time":"2025-10-04T21:54:09.463094689+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_format","Output":"        \tTest:       \tTestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_format\n"}
{"Time":"2025-10-04T21:54:09.46313437+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_format","Output":"        \tMessages:   \tArgs should contain device path for empty_format\n"}
{"Time":"2025-10-04T21:54:09.46316761+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_format","Output":"--- FAIL: TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_format (0.00s)\n"}
{"Time":"2025-10-04T21:54:09.463197754+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_format","Elapsed":0}
{"Time":"2025-10-04T21:54:09.463256774+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_output"}
{"Time":"2025-10-04T21:54:09.46328395+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_output","Output":"=== RUN   TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_output\n"}
{"Time":"2025-10-04T21:54:09.463318958+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_output","Output":"    camera_specific_functions_test.go:380: \n"}
{"Time":"2025-10-04T21:54:09.463347553+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_output","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/camera/camera_specific_functions_test.go:380\n"}
{"Time":"2025-10-04T21:54:09.463375406+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_output","Output":"        \tError:      \t\"--stream-mmap --stream-to  --stream-count 1 --set-fmt-video width=640,height=480\" does not contain \"/dev/video0\"\n"}
{"Time":"2025-10-04T21:54:09.463402176+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_output","Output":"        \tTest:       \tTestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_output\n"}
{"Time":"2025-10-04T21:54:09.463435359+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_output","Output":"        \tMessages:   \tArgs should contain device path for empty_output\n"}
{"Time":"2025-10-04T21:54:09.463479266+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_output","Output":"    camera_specific_functions_test.go:383: \n"}
{"Time":"2025-10-04T21:54:09.463508318+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_output","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/camera/camera_specific_functions_test.go:383\n"}
{"Time":"2025-10-04T21:54:09.463544466+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_output","Output":"        \tError:      \t\"--stream-mmap --stream-to  --stream-count 1 --set-fmt-video width=640,height=480\" does not contain \"mjpeg\"\n"}
{"Time":"2025-10-04T21:54:09.463572674+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_output","Output":"        \tTest:       \tTestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_output\n"}
{"Time":"2025-10-04T21:54:09.463599311+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_output","Output":"        \tMessages:   \tArgs should contain format for empty_output\n"}
{"Time":"2025-10-04T21:54:09.463629799+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_output","Output":"--- FAIL: TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_output (0.00s)\n"}
{"Time":"2025-10-04T21:54:09.463658079+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_output","Elapsed":0}
{"Time":"2025-10-04T21:54:09.463685724+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_device"}
{"Time":"2025-10-04T21:54:09.463710368+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_device","Output":"=== RUN   TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_device\n"}
{"Time":"2025-10-04T21:54:09.463736822+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_device","Output":"    camera_specific_functions_test.go:383: \n"}
{"Time":"2025-10-04T21:54:09.463772888+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_device","Output":"        \tError Trace:\t/home/carlossprekelsen/CameraRecorder/mediamtx-camera-service-go/internal/camera/camera_specific_functions_test.go:383\n"}
{"Time":"2025-10-04T21:54:09.463817707+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_device","Output":"        \tError:      \t\"--stream-mmap --stream-to /tmp/test9.jpg --stream-count 1 --set-fmt-video width=640,height=480\" does not contain \"mjpeg\"\n"}
{"Time":"2025-10-04T21:54:09.463847713+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_device","Output":"        \tTest:       \tTestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_device\n"}
{"Time":"2025-10-04T21:54:09.463875704+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_device","Output":"        \tMessages:   \tArgs should contain format for empty_device\n"}
{"Time":"2025-10-04T21:54:09.463909046+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_device","Output":"--- FAIL: TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_device (0.00s)\n"}
{"Time":"2025-10-04T21:54:09.463939187+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters/empty_device","Elapsed":0}
{"Time":"2025-10-04T21:54:09.463967626+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"    camera_specific_functions_test.go:388: ✅ buildV4L2SnapshotArgs with various parameters validated\n"}
{"Time":"2025-10-04T21:54:09.463995434+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters","Output":"--- FAIL: TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters (0.00s)\n"}
{"Time":"2025-10-04T21:54:09.464013184+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/buildV4L2SnapshotArgs_various_parameters","Elapsed":0}
{"Time":"2025-10-04T21:54:09.464029813+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/snapshot_args_extreme_values"}
{"Time":"2025-10-04T21:54:09.464043804+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/snapshot_args_extreme_values","Output":"=== RUN   TestCameraMonitor_SnapshotFunctionality_Comprehensive/snapshot_args_extreme_values\n"}
{"Time":"2025-10-04T21:54:09.464060607+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"    camera_specific_functions_test.go:395: ✅ Monitor already running - snapshot args with extreme values validated\n"}
{"Time":"2025-10-04T21:54:09.464078505+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/snapshot_args_extreme_values","Output":"--- PASS: TestCameraMonitor_SnapshotFunctionality_Comprehensive/snapshot_args_extreme_values (0.00s)\n"}
{"Time":"2025-10-04T21:54:09.464108042+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/snapshot_args_extreme_values","Elapsed":0}
{"Time":"2025-10-04T21:54:09.464125735+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/device_creation_extreme_inputs"}
{"Time":"2025-10-04T21:54:09.464139715+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/device_creation_extreme_inputs","Output":"=== RUN   TestCameraMonitor_SnapshotFunctionality_Comprehensive/device_creation_extreme_inputs\n"}
{"Time":"2025-10-04T21:54:09.464162211+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"    camera_specific_functions_test.go:434: ✅ Monitor already running - device creation with extreme inputs validated\n"}
{"Time":"2025-10-04T21:54:09.464181426+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/device_creation_extreme_inputs","Output":"--- PASS: TestCameraMonitor_SnapshotFunctionality_Comprehensive/device_creation_extreme_inputs (0.00s)\n"}
{"Time":"2025-10-04T21:54:09.464204698+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive/device_creation_extreme_inputs","Elapsed":0}
{"Time":"2025-10-04T21:54:09.464247838+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:09.464276085+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:09.464302332+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:09.464323809+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:09.464441822+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:09.464477843+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:09.464521873+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:09.464569651+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:09.464593314+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:09.564809249+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Output":"--- FAIL: TestCameraMonitor_SnapshotFunctionality_Comprehensive (0.21s)\n"}
{"Time":"2025-10-04T21:54:09.56490878+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_SnapshotFunctionality_Comprehensive","Elapsed":0.21}
{"Time":"2025-10-04T21:54:09.56495586+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:09.564984642+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"=== RUN   TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:09.565018931+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:09.565046062+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:09.56507568+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:09.565260331+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:09.565313655+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:09.565340816+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:09.565568862+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:09.56561538+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:09.565674661+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:09.565705164+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:09.565731437+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:09.565766707+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:09.565794268+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:09.565829814+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:09.565857995+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:09.565890262+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:09.580309992+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:09.580410041+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:09.580448737+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:09.580465045+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:09.580475944+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:09.580508908+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:09.580528083+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:09.666409563+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:09.666500746+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Processing device event\"\n"}
{"Time":"2025-10-04T21:54:09.666544337+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Processing device event\"\n"}
{"Time":"2025-10-04T21:54:09.666572045+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"V4L2 device disconnected via event\"\n"}
{"Time":"2025-10-04T21:54:09.666598331+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Processing device event\"\n"}
{"Time":"2025-10-04T21:54:09.666623098+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"V4L2 device changed via event\"\n"}
{"Time":"2025-10-04T21:54:09.666648984+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"    device_event_processing_test.go:53: ✅ Device event processing functionality validated\n"}
{"Time":"2025-10-04T21:54:09.666681577+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:09.666708359+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:09.666738515+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:09.666764233+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:09.666977935+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:09.667032624+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:09.667076221+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:09.667102519+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:09.667131412+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:09.767819668+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Output":"--- PASS: TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success (0.20s)\n"}
{"Time":"2025-10-04T21:54:09.76791845+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventProcessing_ReqCAM001_Success","Elapsed":0.2}
{"Time":"2025-10-04T21:54:09.767955924+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:09.767980228+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"=== RUN   TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:09.768012192+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:09.768036195+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:09.76806055+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:09.768200608+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:09.768272702+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:09.76833703+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:09.768368366+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:09.768407761+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:09.768437773+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:09.768467488+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:09.768507711+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:09.768532237+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:09.768570162+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:09.768655642+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:09.768686879+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:09.76884297+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:09.783174686+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:09.783278012+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:09.783314474+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:09.783337277+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:09.783355168+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:09.783366251+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:09.783376149+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:09.869357475+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:09.869460775+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"V4L2 device disconnected via event\"\n"}
{"Time":"2025-10-04T21:54:09.869507085+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"V4L2 device changed via event\"\n"}
{"Time":"2025-10-04T21:54:09.86953584+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"    device_event_processing_test.go:96: ✅ Device event handlers validated\n"}
{"Time":"2025-10-04T21:54:09.869560264+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:09.869591449+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:09.869628698+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:09.869666998+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:09.869931334+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:09.869983094+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:09.870025569+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:09.870063575+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:09.870092186+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:09.970765046+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Output":"--- PASS: TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success (0.20s)\n"}
{"Time":"2025-10-04T21:54:09.970860635+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceEventHandlers_ReqCAM001_Success","Elapsed":0.2}
{"Time":"2025-10-04T21:54:09.970900172+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:09.970917285+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Output":"=== RUN   TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:09.970933658+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:09.970953273+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:09.970969481+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:09.971117614+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:09.971159229+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:09.971245542+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:09.971405291+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:09.971443125+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:09.971471309+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:09.971507742+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:09.971572383+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:09.971606642+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:09.971640543+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:09.9716675+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:09.971693996+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:09.971917552+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:09.9861861+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:09.986282424+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:09.986336847+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:09.986365485+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:09.986398327+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:09.986422303+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:09.986458204+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:09\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:10.072394634+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:10.072509988+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Output":"    device_event_processing_test.go:124: ✅ Device creation methods validated\n"}
{"Time":"2025-10-04T21:54:10.07254388+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:10.072577059+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:10.072603739+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:10.072633162+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:10.07286046+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:10.072912743+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:10.072953985+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:10.073010713+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:10.073031345+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:10.173865583+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Output":"--- PASS: TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success (0.20s)\n"}
{"Time":"2025-10-04T21:54:10.173969292+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreation_ReqCAM001_Success","Elapsed":0.2}
{"Time":"2025-10-04T21:54:10.174016763+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:10.174040609+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Output":"=== RUN   TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:10.174069734+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:10.174093001+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:10.174130195+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:10.174158998+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:10.174187341+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:10.174318936+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:10.174530823+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:10.174617921+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:10.174650866+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:10.174686469+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:10.174713221+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:10.174739041+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:10.174763739+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:10.174807988+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:10.174836124+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:10.175059106+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:10.188307009+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:10.188401957+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:10.188425322+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:10.188447422+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:10.1884837+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:10.188495022+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:10.188504899+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:10.275371341+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:10.275462403+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Output":"    device_event_processing_test.go:140: ✅ Polling functionality validated\n"}
{"Time":"2025-10-04T21:54:10.275485225+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:10.275498494+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:10.275509421+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:10.275523233+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:10.275680038+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:10.275709105+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:10.275723055+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:10.275733548+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:10.275765143+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:10.376128337+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Output":"--- PASS: TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success (0.20s)\n"}
{"Time":"2025-10-04T21:54:10.376247989+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingFunctionality_ReqCAM001_Success","Elapsed":0.2}
{"Time":"2025-10-04T21:54:10.376298043+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:10.376319625+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Output":"=== RUN   TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:10.376352435+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:10.376373124+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:10.376394627+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:10.376524171+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:10.376562177+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:10.376649645+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:10.376881508+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:10.376927241+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:10.376956832+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:10.377014051+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:10.377061979+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:10.37709095+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:10.377116972+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:10.377144575+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:10.377177363+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:10.377345111+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:10.391097846+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:10.391198649+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:10.391251571+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:10.391265759+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:10.391282636+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:10.391293418+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:10.391322731+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:10.478351999+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:10.478460662+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Output":"    device_event_processing_test.go:158: ✅ Utility functions validated\n"}
{"Time":"2025-10-04T21:54:10.478494283+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:10.47852868+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:10.478554455+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:10.478578316+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:10.478833512+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:10.478883217+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:10.478920568+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:10.478950355+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:10.478973651+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:10.579779506+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Output":"--- PASS: TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success (0.20s)\n"}
{"Time":"2025-10-04T21:54:10.579885128+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctions_ReqCAM001_Success","Elapsed":0.2}
{"Time":"2025-10-04T21:54:10.579963649+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:10.579990368+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"=== RUN   TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:10.580014187+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:10.580038377+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:10.580068218+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:10.580092001+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:10.580119433+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:10.580160053+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:10.580387197+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:10.580441281+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:10.580486743+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:10.580516323+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:10.580542515+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:10.580591538+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:10.580647686+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:10.580679355+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:10.580713948+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:10.580749301+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:10.594281012+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:10.59439725+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:10.594431915+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:10.594458367+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:10.594465389+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:10.594474676+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:10.594482745+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:10.68146155+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:10.681598167+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Performing device reconciliation\"\n"}
{"Time":"2025-10-04T21:54:10.681633072+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"    device_event_processing_test.go:174: ✅ Device reconciliation functionality validated\n"}
{"Time":"2025-10-04T21:54:10.681685199+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:10.681713226+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:10.681738029+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:10.681762992+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:10.681957435+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:10.682005568+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:10.682043126+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:10.682087544+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:10.682122892+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:10.782756122+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Output":"--- PASS: TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success (0.20s)\n"}
{"Time":"2025-10-04T21:54:10.782849828+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceReconciliation_ReqCAM001_Success","Elapsed":0.2}
{"Time":"2025-10-04T21:54:10.782889131+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_EventProcessing_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:10.782930978+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_EventProcessing_ReqCAM001_Success","Output":"=== RUN   TestFsnotifyDeviceEventSource_EventProcessing_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:10.782950469+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_EventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:10.783095135+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_EventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:10\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:11.884145699+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_EventProcessing_ReqCAM001_Success","Output":"    device_event_source_comprehensive_test.go:46: No events received within timeout (expected in test environment)\n"}
{"Time":"2025-10-04T21:54:11.884227988+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_EventProcessing_ReqCAM001_Success","Output":"    device_event_source_comprehensive_test.go:49: ✅ Event processing functionality validated\n"}
{"Time":"2025-10-04T21:54:11.884256052+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_EventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:11\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:11.884444747+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_EventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:11\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:11.884487568+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_EventProcessing_ReqCAM001_Success","Output":"--- PASS: TestFsnotifyDeviceEventSource_EventProcessing_ReqCAM001_Success (1.10s)\n"}
{"Time":"2025-10-04T21:54:11.884505463+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_EventProcessing_ReqCAM001_Success","Elapsed":1.1}
{"Time":"2025-10-04T21:54:11.884530587+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_EventProcessing_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:11.884543716+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_EventProcessing_ReqCAM001_Success","Output":"=== RUN   TestUdevDeviceEventSource_EventProcessing_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:11.884566595+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_EventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:11\" level=info msg=\"Started udev device event source\"\n"}
{"Time":"2025-10-04T21:54:11.884594403+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_EventProcessing_ReqCAM001_Success","Output":"    device_event_source_comprehensive_test.go:75: ✅ Udev event processing functionality validated\n"}
{"Time":"2025-10-04T21:54:11.884615951+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_EventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:11\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:11.884653708+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_EventProcessing_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:11\" level=info msg=\"Stopped udev device event source\"\n"}
{"Time":"2025-10-04T21:54:11.884675663+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_EventProcessing_ReqCAM001_Success","Output":"--- PASS: TestUdevDeviceEventSource_EventProcessing_ReqCAM001_Success (0.00s)\n"}
{"Time":"2025-10-04T21:54:11.884689932+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_EventProcessing_ReqCAM001_Success","Elapsed":0}
{"Time":"2025-10-04T21:54:11.884706911+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSourceFactory_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:11.884719105+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSourceFactory_ReqCAM001_Success","Output":"=== RUN   TestDeviceEventSourceFactory_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:11.884732431+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSourceFactory_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:11\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:11.884748942+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSourceFactory_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:11\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:11.884763915+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSourceFactory_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:11\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:11.884777944+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSourceFactory_ReqCAM001_Success","Output":"    device_event_source_comprehensive_test.go:91: ✅ Device event source factory validated\n"}
{"Time":"2025-10-04T21:54:11.884795463+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSourceFactory_ReqCAM001_Success","Output":"--- PASS: TestDeviceEventSourceFactory_ReqCAM001_Success (0.00s)\n"}
{"Time":"2025-10-04T21:54:11.88481643+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSourceFactory_ReqCAM001_Success","Elapsed":0}
{"Time":"2025-10-04T21:54:11.884830491+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_Comprehensive_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:11.884841071+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_Comprehensive_ReqCAM001_Success","Output":"=== RUN   TestBoundedWorkerPool_Comprehensive_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:11.884854367+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_Comprehensive_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:11\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:11.985350454+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_Comprehensive_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:11\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:11.985434704+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_Comprehensive_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:11\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:11.9854749+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_Comprehensive_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:11\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:11.985502524+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_Comprehensive_ReqCAM001_Success","Output":"    device_event_source_comprehensive_test.go:132: ✅ Bounded worker pool comprehensive functionality validated\n"}
{"Time":"2025-10-04T21:54:11.985540542+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_Comprehensive_ReqCAM001_Success","Output":"--- PASS: TestBoundedWorkerPool_Comprehensive_ReqCAM001_Success (0.10s)\n"}
{"Time":"2025-10-04T21:54:11.985567463+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestBoundedWorkerPool_Comprehensive_ReqCAM001_Success","Elapsed":0.1}
{"Time":"2025-10-04T21:54:11.985608666+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_DEPRECATED_2"}
{"Time":"2025-10-04T21:54:11.985635066+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_DEPRECATED_2","Output":"=== RUN   TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_DEPRECATED_2\n"}
{"Time":"2025-10-04T21:54:11.985660847+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_DEPRECATED_2","Output":"    device_event_source_comprehensive_test.go:138: DEPRECATED: This test uses old API. Use refactored version instead.\n"}
{"Time":"2025-10-04T21:54:11.985699406+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_DEPRECATED_2","Output":"--- SKIP: TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_DEPRECATED_2 (0.00s)\n"}
{"Time":"2025-10-04T21:54:11.985739376+04:00","Action":"skip","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_DEPRECATED_2","Elapsed":0}
{"Time":"2025-10-04T21:54:11.98576488+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandlingAdvanced_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:11.985788096+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandlingAdvanced_ReqCAM001_Success","Output":"=== RUN   TestHybridCameraMonitor_ErrorHandlingAdvanced_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:11.98581686+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandlingAdvanced_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:11\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:11.985859937+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandlingAdvanced_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:11\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:11.985895546+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandlingAdvanced_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:11\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:11.985919029+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandlingAdvanced_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:11\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:11.985950256+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandlingAdvanced_ReqCAM001_Success","Output":"    device_event_source_comprehensive_test.go:150: Stop result: \u003cnil\u003e\n"}
{"Time":"2025-10-04T21:54:11.985992322+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandlingAdvanced_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:11\" level=info msg=\"Selecting optimal pixel format for camera\"\n"}
{"Time":"2025-10-04T21:54:11.986017513+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandlingAdvanced_ReqCAM001_Success","Output":"    device_event_source_comprehensive_test.go:159: Pixel format selection failed (expected): device /dev/nonexistent not found in monitor\n"}
{"Time":"2025-10-04T21:54:11.98603745+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandlingAdvanced_ReqCAM001_Success","Output":"    device_event_source_comprehensive_test.go:164: ✅ Error handling scenarios validated\n"}
{"Time":"2025-10-04T21:54:11.986074067+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandlingAdvanced_ReqCAM001_Success","Output":"--- PASS: TestHybridCameraMonitor_ErrorHandlingAdvanced_ReqCAM001_Success (0.00s)\n"}
{"Time":"2025-10-04T21:54:11.986110335+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ErrorHandlingAdvanced_ReqCAM001_Success","Elapsed":0}
{"Time":"2025-10-04T21:54:11.986143535+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success"}
{"Time":"2025-10-04T21:54:11.986167662+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"=== RUN   TestHybridCameraMonitor_Performance_ReqCAM001_Success\n"}
{"Time":"2025-10-04T21:54:11.986281485+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:11\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:11.986328643+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:11\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:11.986349064+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:11\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:11.986393332+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:11\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:11.986422716+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:11\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:11.986538416+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:11\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:11.986776823+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:11\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:11.986829963+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:11\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:11.986861557+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:11\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:11.986888048+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:11\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:11.986921362+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:11\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:11.986963588+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:11\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:11.986992557+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"    progressive_readiness.go:52: ✅ Monitor Start succeeded immediately - Progressive Readiness working\n"}
{"Time":"2025-10-04T21:54:11.987018247+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"    camera_asserters_test.go:133: ✅ PROGRESSIVE READINESS: Monitor start succeeded immediately\n"}
{"Time":"2025-10-04T21:54:11.987042786+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:11\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:11.987077487+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"    device_event_source_comprehensive_test.go:179: Startup duration: 549.534µs\n"}
{"Time":"2025-10-04T21:54:11.987131267+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:11\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:12.001127158+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:12\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:12.001229895+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:12.001256177+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:12.001274756+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:12.001285249+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:12.001295057+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:12.001309551+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:12.088242972+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"    camera_asserters_test.go:159: ✅ Monitor is ready\n"}
{"Time":"2025-10-04T21:54:12.08835058+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"    device_event_source_comprehensive_test.go:187: Readiness duration: 101.20226ms\n"}
{"Time":"2025-10-04T21:54:12.088369764+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:12.088382606+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:12.088397791+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:12.088617125+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:12.088758553+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:12.088786052+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:12.088807213+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:12.088820752+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:12.088832141+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:12.088846719+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"    camera_asserters_test.go:147: ✅ Monitor stopped successfully\n"}
{"Time":"2025-10-04T21:54:12.088858316+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"    device_event_source_comprehensive_test.go:195: Stop duration: 576.131µs\n"}
{"Time":"2025-10-04T21:54:12.088871872+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"    device_event_source_comprehensive_test.go:197: ✅ Performance scenarios validated\n"}
{"Time":"2025-10-04T21:54:12.088895633+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Output":"--- PASS: TestHybridCameraMonitor_Performance_ReqCAM001_Success (0.10s)\n"}
{"Time":"2025-10-04T21:54:12.088908055+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_Performance_ReqCAM001_Success","Elapsed":0.1}
{"Time":"2025-10-04T21:54:12.088933314+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSmartDeviceEventSourceSelection"}
{"Time":"2025-10-04T21:54:12.088955284+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSmartDeviceEventSourceSelection","Output":"=== RUN   TestSmartDeviceEventSourceSelection\n"}
{"Time":"2025-10-04T21:54:12.088969196+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSmartDeviceEventSourceSelection","Output":"=== PAUSE TestSmartDeviceEventSourceSelection\n"}
{"Time":"2025-10-04T21:54:12.088983683+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSmartDeviceEventSourceSelection"}
{"Time":"2025-10-04T21:54:12.089011968+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEnvironmentDetectionAccuracy"}
{"Time":"2025-10-04T21:54:12.089025645+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEnvironmentDetectionAccuracy","Output":"=== RUN   TestEnvironmentDetectionAccuracy\n"}
{"Time":"2025-10-04T21:54:12.089043887+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEnvironmentDetectionAccuracy","Output":"=== PAUSE TestEnvironmentDetectionAccuracy\n"}
{"Time":"2025-10-04T21:54:12.089055784+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEnvironmentDetectionAccuracy"}
{"Time":"2025-10-04T21:54:12.089066301+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Basic"}
{"Time":"2025-10-04T21:54:12.089075604+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Basic","Output":"=== RUN   TestFsnotifyDeviceEventSource_Basic\n"}
{"Time":"2025-10-04T21:54:12.089086924+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Basic/creation"}
{"Time":"2025-10-04T21:54:12.089102462+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Basic/creation","Output":"=== RUN   TestFsnotifyDeviceEventSource_Basic/creation\n"}
{"Time":"2025-10-04T21:54:12.089118792+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Basic/creation","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:12.089131607+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Basic/creation","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:12.08914776+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Basic/creation","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:12.089162555+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Basic/creation","Output":"--- PASS: TestFsnotifyDeviceEventSource_Basic/creation (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.089175413+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Basic/creation","Elapsed":0}
{"Time":"2025-10-04T21:54:12.089187836+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Basic/creation_with_nil_logger"}
{"Time":"2025-10-04T21:54:12.089202445+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Basic/creation_with_nil_logger","Output":"=== RUN   TestFsnotifyDeviceEventSource_Basic/creation_with_nil_logger\n"}
{"Time":"2025-10-04T21:54:12.089232539+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Basic/creation_with_nil_logger","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:12.089251365+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Basic/creation_with_nil_logger","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:12.08927314+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Basic/creation_with_nil_logger","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:12.089290462+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Basic/creation_with_nil_logger","Output":"--- PASS: TestFsnotifyDeviceEventSource_Basic/creation_with_nil_logger (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.08930819+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Basic/creation_with_nil_logger","Elapsed":0}
{"Time":"2025-10-04T21:54:12.089324294+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Basic","Output":"--- PASS: TestFsnotifyDeviceEventSource_Basic (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.089337291+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Basic","Elapsed":0}
{"Time":"2025-10-04T21:54:12.089348797+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop"}
{"Time":"2025-10-04T21:54:12.089359397+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop","Output":"=== RUN   TestFsnotifyDeviceEventSource_StartStop\n"}
{"Time":"2025-10-04T21:54:12.089376767+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:12.089391911+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:12.089404189+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:12.089414644+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop/start_stop_cycle"}
{"Time":"2025-10-04T21:54:12.089424551+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop/start_stop_cycle","Output":"=== RUN   TestFsnotifyDeviceEventSource_StartStop/start_stop_cycle\n"}
{"Time":"2025-10-04T21:54:12.089435185+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop/start_stop_cycle","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:12.089449385+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop/start_stop_cycle","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:12.089474356+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop/start_stop_cycle","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:12.089580711+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop/start_stop_cycle","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:12.089636318+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop/start_stop_cycle","Output":"--- PASS: TestFsnotifyDeviceEventSource_StartStop/start_stop_cycle (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.08965911+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop/start_stop_cycle","Elapsed":0}
{"Time":"2025-10-04T21:54:12.089673681+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop/double_start"}
{"Time":"2025-10-04T21:54:12.08974832+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop/double_start","Output":"=== RUN   TestFsnotifyDeviceEventSource_StartStop/double_start\n"}
{"Time":"2025-10-04T21:54:12.089763945+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop/double_start","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:12.089831312+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop/double_start","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:12.089854461+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop/double_start","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:12.089869052+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop/double_start","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:12.089889469+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop/double_start","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:12.089913959+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop/double_start","Output":"--- PASS: TestFsnotifyDeviceEventSource_StartStop/double_start (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.08993223+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop/double_start","Elapsed":0}
{"Time":"2025-10-04T21:54:12.089950589+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop/start_with_cancelled_context"}
{"Time":"2025-10-04T21:54:12.089961883+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop/start_with_cancelled_context","Output":"=== RUN   TestFsnotifyDeviceEventSource_StartStop/start_with_cancelled_context\n"}
{"Time":"2025-10-04T21:54:12.08998928+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop/start_with_cancelled_context","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:12.090011264+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop/start_with_cancelled_context","Output":"--- PASS: TestFsnotifyDeviceEventSource_StartStop/start_with_cancelled_context (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.090025674+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop/start_with_cancelled_context","Elapsed":0}
{"Time":"2025-10-04T21:54:12.090038739+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop/close_without_start"}
{"Time":"2025-10-04T21:54:12.090049811+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop/close_without_start","Output":"=== RUN   TestFsnotifyDeviceEventSource_StartStop/close_without_start\n"}
{"Time":"2025-10-04T21:54:12.090064328+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop/close_without_start","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:12.090078306+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop/close_without_start","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:12.090098553+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop/close_without_start","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:12.090120261+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop/close_without_start","Output":"--- PASS: TestFsnotifyDeviceEventSource_StartStop/close_without_start (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.090135004+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop/close_without_start","Elapsed":0}
{"Time":"2025-10-04T21:54:12.090149103+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop/multiple_close_calls"}
{"Time":"2025-10-04T21:54:12.090162048+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop/multiple_close_calls","Output":"=== RUN   TestFsnotifyDeviceEventSource_StartStop/multiple_close_calls\n"}
{"Time":"2025-10-04T21:54:12.090181094+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop/multiple_close_calls","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:12.090194849+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop/multiple_close_calls","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:12.090237877+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop/multiple_close_calls","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:12.090258572+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop/multiple_close_calls","Output":"--- PASS: TestFsnotifyDeviceEventSource_StartStop/multiple_close_calls (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.090275642+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop/multiple_close_calls","Elapsed":0}
{"Time":"2025-10-04T21:54:12.0902976+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop","Output":"--- PASS: TestFsnotifyDeviceEventSource_StartStop (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.090312135+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_StartStop","Elapsed":0}
{"Time":"2025-10-04T21:54:12.090324828+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Events"}
{"Time":"2025-10-04T21:54:12.090335296+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Events","Output":"=== RUN   TestFsnotifyDeviceEventSource_Events\n"}
{"Time":"2025-10-04T21:54:12.090346349+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Events","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:12.090362995+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Events","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:12.090379882+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Events","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:12.090395332+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Events/events_channel_before_start"}
{"Time":"2025-10-04T21:54:12.090404963+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Events/events_channel_before_start","Output":"=== RUN   TestFsnotifyDeviceEventSource_Events/events_channel_before_start\n"}
{"Time":"2025-10-04T21:54:12.191518394+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Events/events_channel_before_start","Output":"--- PASS: TestFsnotifyDeviceEventSource_Events/events_channel_before_start (0.10s)\n"}
{"Time":"2025-10-04T21:54:12.191618994+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Events/events_channel_before_start","Elapsed":0.1}
{"Time":"2025-10-04T21:54:12.191658703+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Events/events_channel_after_start"}
{"Time":"2025-10-04T21:54:12.191706661+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Events/events_channel_after_start","Output":"=== RUN   TestFsnotifyDeviceEventSource_Events/events_channel_after_start\n"}
{"Time":"2025-10-04T21:54:12.19172919+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Events/events_channel_after_start","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:12.191753847+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Events/events_channel_after_start","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:12.292475112+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Events/events_channel_after_start","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:12.292786548+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Events/events_channel_after_start","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:12.292850503+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Events/events_channel_after_start","Output":"--- PASS: TestFsnotifyDeviceEventSource_Events/events_channel_after_start (0.10s)\n"}
{"Time":"2025-10-04T21:54:12.29289847+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Events/events_channel_after_start","Elapsed":0.1}
{"Time":"2025-10-04T21:54:12.292949887+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Events","Output":"--- PASS: TestFsnotifyDeviceEventSource_Events (0.20s)\n"}
{"Time":"2025-10-04T21:54:12.292981322+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Events","Elapsed":0.2}
{"Time":"2025-10-04T21:54:12.293014249+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_EventProcessing"}
{"Time":"2025-10-04T21:54:12.293039166+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_EventProcessing","Output":"=== RUN   TestFsnotifyDeviceEventSource_EventProcessing\n"}
{"Time":"2025-10-04T21:54:12.293062577+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_EventProcessing","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:12.293086871+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_EventProcessing","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:12.293119031+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_EventProcessing","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:12.293151885+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_EventProcessing/process_event_filtering"}
{"Time":"2025-10-04T21:54:12.293207014+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_EventProcessing/process_event_filtering","Output":"=== RUN   TestFsnotifyDeviceEventSource_EventProcessing/process_event_filtering\n"}
{"Time":"2025-10-04T21:54:12.293473617+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_EventProcessing/process_event_filtering","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:12.293695332+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_EventProcessing/process_event_filtering","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:12.293830847+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_EventProcessing/process_event_filtering","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:12.293951846+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_EventProcessing/process_event_filtering","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:12.294259557+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_EventProcessing/process_event_filtering","Output":"--- PASS: TestFsnotifyDeviceEventSource_EventProcessing/process_event_filtering (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.294310225+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_EventProcessing/process_event_filtering","Elapsed":0}
{"Time":"2025-10-04T21:54:12.294352228+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_EventProcessing","Output":"--- PASS: TestFsnotifyDeviceEventSource_EventProcessing (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.294382279+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_EventProcessing","Elapsed":0}
{"Time":"2025-10-04T21:54:12.294406896+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Concurrency"}
{"Time":"2025-10-04T21:54:12.294428279+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Concurrency","Output":"=== RUN   TestFsnotifyDeviceEventSource_Concurrency\n"}
{"Time":"2025-10-04T21:54:12.29445744+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Concurrency/concurrent_start_stop"}
{"Time":"2025-10-04T21:54:12.294478526+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Concurrency/concurrent_start_stop","Output":"=== RUN   TestFsnotifyDeviceEventSource_Concurrency/concurrent_start_stop\n"}
{"Time":"2025-10-04T21:54:12.294501793+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Concurrency/concurrent_start_stop","Output":"    device_event_source_test.go:240: Event source not immediately started, waiting for start event\n"}
{"Time":"2025-10-04T21:54:12.294539627+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Concurrency/concurrent_start_stop","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:12.294591119+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Concurrency/concurrent_start_stop","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:12.2946357+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Concurrency/concurrent_start_stop","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:12.29466561+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Concurrency/concurrent_start_stop","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:12.294694519+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Concurrency/concurrent_start_stop","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:12.294722272+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Concurrency/concurrent_start_stop","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:12.305129235+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Concurrency/concurrent_start_stop","Output":"    device_event_source_test.go:240: Event source started\n"}
{"Time":"2025-10-04T21:54:12.305193918+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Concurrency/concurrent_start_stop","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:12.305347913+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Concurrency/concurrent_start_stop","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:12.305407318+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Concurrency/concurrent_start_stop","Output":"--- PASS: TestFsnotifyDeviceEventSource_Concurrency/concurrent_start_stop (0.01s)\n"}
{"Time":"2025-10-04T21:54:12.305455748+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Concurrency/concurrent_start_stop","Elapsed":0.01}
{"Time":"2025-10-04T21:54:12.305484359+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Concurrency/concurrent_events_access"}
{"Time":"2025-10-04T21:54:12.305493539+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Concurrency/concurrent_events_access","Output":"=== RUN   TestFsnotifyDeviceEventSource_Concurrency/concurrent_events_access\n"}
{"Time":"2025-10-04T21:54:12.305505164+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Concurrency/concurrent_events_access","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:12.30559469+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Concurrency/concurrent_events_access","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:12.406168495+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Concurrency/concurrent_events_access","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:12.406432337+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Concurrency/concurrent_events_access","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:12.406491498+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Concurrency/concurrent_events_access","Output":"--- PASS: TestFsnotifyDeviceEventSource_Concurrency/concurrent_events_access (0.10s)\n"}
{"Time":"2025-10-04T21:54:12.406519871+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Concurrency/concurrent_events_access","Elapsed":0.1}
{"Time":"2025-10-04T21:54:12.406558458+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Concurrency","Output":"--- PASS: TestFsnotifyDeviceEventSource_Concurrency (0.11s)\n"}
{"Time":"2025-10-04T21:54:12.406594284+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_Concurrency","Elapsed":0.11}
{"Time":"2025-10-04T21:54:12.406641995+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_ErrorHandling"}
{"Time":"2025-10-04T21:54:12.406665337+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_ErrorHandling","Output":"=== RUN   TestFsnotifyDeviceEventSource_ErrorHandling\n"}
{"Time":"2025-10-04T21:54:12.40668894+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_ErrorHandling/watcher_creation_failure"}
{"Time":"2025-10-04T21:54:12.406709566+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_ErrorHandling/watcher_creation_failure","Output":"=== RUN   TestFsnotifyDeviceEventSource_ErrorHandling/watcher_creation_failure\n"}
{"Time":"2025-10-04T21:54:12.406794838+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_ErrorHandling/watcher_creation_failure","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:12.406829263+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_ErrorHandling/watcher_creation_failure","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:12.40687043+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_ErrorHandling/watcher_creation_failure","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:12.406885538+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_ErrorHandling/watcher_creation_failure","Output":"--- PASS: TestFsnotifyDeviceEventSource_ErrorHandling/watcher_creation_failure (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.406922135+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_ErrorHandling/watcher_creation_failure","Elapsed":0}
{"Time":"2025-10-04T21:54:12.406933942+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_ErrorHandling/start_with_invalid_directory"}
{"Time":"2025-10-04T21:54:12.4069477+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_ErrorHandling/start_with_invalid_directory","Output":"=== RUN   TestFsnotifyDeviceEventSource_ErrorHandling/start_with_invalid_directory\n"}
{"Time":"2025-10-04T21:54:12.406965921+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_ErrorHandling/start_with_invalid_directory","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:12.407048259+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_ErrorHandling/start_with_invalid_directory","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:12.407072942+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_ErrorHandling/start_with_invalid_directory","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:12.407170999+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_ErrorHandling/start_with_invalid_directory","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:12.407195552+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_ErrorHandling/start_with_invalid_directory","Output":"--- PASS: TestFsnotifyDeviceEventSource_ErrorHandling/start_with_invalid_directory (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.407217718+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_ErrorHandling/start_with_invalid_directory","Elapsed":0}
{"Time":"2025-10-04T21:54:12.407237531+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_ErrorHandling","Output":"--- PASS: TestFsnotifyDeviceEventSource_ErrorHandling (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.40725493+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_ErrorHandling","Elapsed":0}
{"Time":"2025-10-04T21:54:12.407268388+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Basic"}
{"Time":"2025-10-04T21:54:12.407277473+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Basic","Output":"=== RUN   TestUdevDeviceEventSource_Basic\n"}
{"Time":"2025-10-04T21:54:12.407287134+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Basic/creation"}
{"Time":"2025-10-04T21:54:12.407296049+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Basic/creation","Output":"=== RUN   TestUdevDeviceEventSource_Basic/creation\n"}
{"Time":"2025-10-04T21:54:12.407317019+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Basic/creation","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:12.407328743+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Basic/creation","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:12.407343545+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Basic/creation","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:12.407357043+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Basic/creation","Output":"--- PASS: TestUdevDeviceEventSource_Basic/creation (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.407367731+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Basic/creation","Elapsed":0}
{"Time":"2025-10-04T21:54:12.407383064+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Basic/creation_with_nil_logger"}
{"Time":"2025-10-04T21:54:12.407392661+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Basic/creation_with_nil_logger","Output":"=== RUN   TestUdevDeviceEventSource_Basic/creation_with_nil_logger\n"}
{"Time":"2025-10-04T21:54:12.407402183+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Basic/creation_with_nil_logger","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:12.407411422+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Basic/creation_with_nil_logger","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:12.407421087+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Basic/creation_with_nil_logger","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:12.407441718+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Basic/creation_with_nil_logger","Output":"--- PASS: TestUdevDeviceEventSource_Basic/creation_with_nil_logger (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.407454454+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Basic/creation_with_nil_logger","Elapsed":0}
{"Time":"2025-10-04T21:54:12.407465945+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Basic","Output":"--- PASS: TestUdevDeviceEventSource_Basic (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.407476034+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Basic","Elapsed":0}
{"Time":"2025-10-04T21:54:12.407485932+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_StartStop"}
{"Time":"2025-10-04T21:54:12.407502691+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_StartStop","Output":"=== RUN   TestUdevDeviceEventSource_StartStop\n"}
{"Time":"2025-10-04T21:54:12.407515517+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_StartStop","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:12.407530247+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_StartStop","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:12.407541942+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_StartStop","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:12.407552234+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_StartStop/start_stop_cycle"}
{"Time":"2025-10-04T21:54:12.40756119+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_StartStop/start_stop_cycle","Output":"=== RUN   TestUdevDeviceEventSource_StartStop/start_stop_cycle\n"}
{"Time":"2025-10-04T21:54:12.407573467+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_StartStop/start_stop_cycle","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:12.407613734+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_StartStop/start_stop_cycle","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:12.407635643+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_StartStop/start_stop_cycle","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:12.407724835+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_StartStop/start_stop_cycle","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:12.407748669+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_StartStop/start_stop_cycle","Output":"--- PASS: TestUdevDeviceEventSource_StartStop/start_stop_cycle (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.40776333+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_StartStop/start_stop_cycle","Elapsed":0}
{"Time":"2025-10-04T21:54:12.407774803+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_StartStop/double_start"}
{"Time":"2025-10-04T21:54:12.407783465+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_StartStop/double_start","Output":"=== RUN   TestUdevDeviceEventSource_StartStop/double_start\n"}
{"Time":"2025-10-04T21:54:12.407794994+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_StartStop/double_start","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:12.407821587+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_StartStop/double_start","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:12.407841462+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_StartStop/double_start","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:12.407884489+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_StartStop/double_start","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:12.407984354+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_StartStop/double_start","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:12.408021215+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_StartStop/double_start","Output":"--- PASS: TestUdevDeviceEventSource_StartStop/double_start (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.408057745+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_StartStop/double_start","Elapsed":0}
{"Time":"2025-10-04T21:54:12.408085826+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_StartStop/start_with_cancelled_context"}
{"Time":"2025-10-04T21:54:12.408106259+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_StartStop/start_with_cancelled_context","Output":"=== RUN   TestUdevDeviceEventSource_StartStop/start_with_cancelled_context\n"}
{"Time":"2025-10-04T21:54:12.408141246+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_StartStop/start_with_cancelled_context","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:12.408170242+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_StartStop/start_with_cancelled_context","Output":"--- PASS: TestUdevDeviceEventSource_StartStop/start_with_cancelled_context (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.408188069+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_StartStop/start_with_cancelled_context","Elapsed":0}
{"Time":"2025-10-04T21:54:12.40819966+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_StartStop","Output":"--- PASS: TestUdevDeviceEventSource_StartStop (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.408221881+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_StartStop","Elapsed":0}
{"Time":"2025-10-04T21:54:12.408244109+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Events"}
{"Time":"2025-10-04T21:54:12.4082554+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Events","Output":"=== RUN   TestUdevDeviceEventSource_Events\n"}
{"Time":"2025-10-04T21:54:12.40830422+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Events","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:12.408316444+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Events","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:12.408334429+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Events","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:12.408346861+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Events/events_channel_before_start"}
{"Time":"2025-10-04T21:54:12.408355788+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Events/events_channel_before_start","Output":"=== RUN   TestUdevDeviceEventSource_Events/events_channel_before_start\n"}
{"Time":"2025-10-04T21:54:12.508823572+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Events/events_channel_before_start","Output":"--- PASS: TestUdevDeviceEventSource_Events/events_channel_before_start (0.10s)\n"}
{"Time":"2025-10-04T21:54:12.508926836+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Events/events_channel_before_start","Elapsed":0.1}
{"Time":"2025-10-04T21:54:12.508974127+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Events/events_channel_after_start"}
{"Time":"2025-10-04T21:54:12.508998539+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Events/events_channel_after_start","Output":"=== RUN   TestUdevDeviceEventSource_Events/events_channel_after_start\n"}
{"Time":"2025-10-04T21:54:12.509025528+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Events/events_channel_after_start","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:12.509147289+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Events/events_channel_after_start","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:12.609674616+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Events/events_channel_after_start","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:12.60979874+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Events/events_channel_after_start","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:12.609848944+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Events/events_channel_after_start","Output":"--- PASS: TestUdevDeviceEventSource_Events/events_channel_after_start (0.10s)\n"}
{"Time":"2025-10-04T21:54:12.609918196+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Events/events_channel_after_start","Elapsed":0.1}
{"Time":"2025-10-04T21:54:12.609959459+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Events","Output":"--- PASS: TestUdevDeviceEventSource_Events (0.20s)\n"}
{"Time":"2025-10-04T21:54:12.609990542+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_Events","Elapsed":0.2}
{"Time":"2025-10-04T21:54:12.610033797+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventTypes"}
{"Time":"2025-10-04T21:54:12.610063216+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventTypes","Output":"=== RUN   TestDeviceEventTypes\n"}
{"Time":"2025-10-04T21:54:12.610102209+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventTypes","Output":"=== PAUSE TestDeviceEventTypes\n"}
{"Time":"2025-10-04T21:54:12.61012872+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventTypes"}
{"Time":"2025-10-04T21:54:12.610155668+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Interface"}
{"Time":"2025-10-04T21:54:12.610178261+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Interface","Output":"=== RUN   TestDeviceEventSource_Interface\n"}
{"Time":"2025-10-04T21:54:12.610205843+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Interface","Output":"=== PAUSE TestDeviceEventSource_Interface\n"}
{"Time":"2025-10-04T21:54:12.610256084+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Interface"}
{"Time":"2025-10-04T21:54:12.610282252+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Integration"}
{"Time":"2025-10-04T21:54:12.610302547+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Integration","Output":"=== RUN   TestDeviceEventSource_Integration\n"}
{"Time":"2025-10-04T21:54:12.610328153+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Integration/fsnotify_lifecycle"}
{"Time":"2025-10-04T21:54:12.610359699+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Integration/fsnotify_lifecycle","Output":"=== RUN   TestDeviceEventSource_Integration/fsnotify_lifecycle\n"}
{"Time":"2025-10-04T21:54:12.610391757+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Integration/fsnotify_lifecycle","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:12.610418175+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Integration/fsnotify_lifecycle","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:12.61044914+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Integration/fsnotify_lifecycle","Output":"    device_event_source_test.go:584: Event source already started\n"}
{"Time":"2025-10-04T21:54:12.610502632+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Integration/fsnotify_lifecycle","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:12.610973231+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Integration/fsnotify_lifecycle","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:12.611045213+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Integration/fsnotify_lifecycle","Output":"--- PASS: TestDeviceEventSource_Integration/fsnotify_lifecycle (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.61109432+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Integration/fsnotify_lifecycle","Elapsed":0}
{"Time":"2025-10-04T21:54:12.611133063+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Integration/udev_lifecycle"}
{"Time":"2025-10-04T21:54:12.611150561+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Integration/udev_lifecycle","Output":"=== RUN   TestDeviceEventSource_Integration/udev_lifecycle\n"}
{"Time":"2025-10-04T21:54:12.611253437+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Integration/udev_lifecycle","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Started udev device event source\"\n"}
{"Time":"2025-10-04T21:54:12.611311416+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Integration/udev_lifecycle","Output":"    device_event_source_test.go:611: Event source already started\n"}
{"Time":"2025-10-04T21:54:12.611357119+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Integration/udev_lifecycle","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:12.611392577+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Integration/udev_lifecycle","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Stopped udev device event source\"\n"}
{"Time":"2025-10-04T21:54:12.611430172+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Integration/udev_lifecycle","Output":"--- PASS: TestDeviceEventSource_Integration/udev_lifecycle (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.611464464+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Integration/udev_lifecycle","Elapsed":0}
{"Time":"2025-10-04T21:54:12.611496361+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Integration","Output":"--- PASS: TestDeviceEventSource_Integration (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.611524557+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Integration","Elapsed":0}
{"Time":"2025-10-04T21:54:12.611558254+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery"}
{"Time":"2025-10-04T21:54:12.611593069+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery","Output":"=== RUN   TestDeviceEventSource_ErrorRecovery\n"}
{"Time":"2025-10-04T21:54:12.611639995+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery/fsnotify_recovery_after_error"}
{"Time":"2025-10-04T21:54:12.61166525+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery/fsnotify_recovery_after_error","Output":"=== RUN   TestDeviceEventSource_ErrorRecovery/fsnotify_recovery_after_error\n"}
{"Time":"2025-10-04T21:54:12.611761575+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery/fsnotify_recovery_after_error","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:12.611796598+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery/fsnotify_recovery_after_error","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:12.611898514+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery/fsnotify_recovery_after_error","Output":"    device_event_source_test.go:637: Event source already started\n"}
{"Time":"2025-10-04T21:54:12.611931462+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery/fsnotify_recovery_after_error","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:12.612146422+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery/fsnotify_recovery_after_error","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:12.612188212+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery/fsnotify_recovery_after_error","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:12.612387603+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery/fsnotify_recovery_after_error","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:12.612436767+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery/fsnotify_recovery_after_error","Output":"    device_event_source_test.go:637: Event source already started\n"}
{"Time":"2025-10-04T21:54:12.612465982+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery/fsnotify_recovery_after_error","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:12.612581327+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery/fsnotify_recovery_after_error","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:12.612630308+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery/fsnotify_recovery_after_error","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:12.61280098+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery/fsnotify_recovery_after_error","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:12.612908893+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery/fsnotify_recovery_after_error","Output":"    device_event_source_test.go:637: Event source already started\n"}
{"Time":"2025-10-04T21:54:12.612952866+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery/fsnotify_recovery_after_error","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:12.61298896+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery/fsnotify_recovery_after_error","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:12.613038575+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery/fsnotify_recovery_after_error","Output":"--- PASS: TestDeviceEventSource_ErrorRecovery/fsnotify_recovery_after_error (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.613076954+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery/fsnotify_recovery_after_error","Elapsed":0}
{"Time":"2025-10-04T21:54:12.613116341+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery/udev_recovery_after_error"}
{"Time":"2025-10-04T21:54:12.613139697+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery/udev_recovery_after_error","Output":"=== RUN   TestDeviceEventSource_ErrorRecovery/udev_recovery_after_error\n"}
{"Time":"2025-10-04T21:54:12.613168979+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery/udev_recovery_after_error","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Started udev device event source\"\n"}
{"Time":"2025-10-04T21:54:12.613227758+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery/udev_recovery_after_error","Output":"    device_event_source_test.go:662: Event source already started\n"}
{"Time":"2025-10-04T21:54:12.613275229+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery/udev_recovery_after_error","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:12.61331101+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery/udev_recovery_after_error","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Stopped udev device event source\"\n"}
{"Time":"2025-10-04T21:54:12.613348823+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery/udev_recovery_after_error","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Started udev device event source\"\n"}
{"Time":"2025-10-04T21:54:12.613397663+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery/udev_recovery_after_error","Output":"    device_event_source_test.go:662: Event source already started\n"}
{"Time":"2025-10-04T21:54:12.613491312+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery/udev_recovery_after_error","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:12.613560536+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery/udev_recovery_after_error","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Stopped udev device event source\"\n"}
{"Time":"2025-10-04T21:54:12.613598217+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery/udev_recovery_after_error","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Started udev device event source\"\n"}
{"Time":"2025-10-04T21:54:12.613630627+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery/udev_recovery_after_error","Output":"    device_event_source_test.go:662: Event source already started\n"}
{"Time":"2025-10-04T21:54:12.61368349+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery/udev_recovery_after_error","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:12.613729063+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery/udev_recovery_after_error","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Stopped udev device event source\"\n"}
{"Time":"2025-10-04T21:54:12.613770588+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery/udev_recovery_after_error","Output":"--- PASS: TestDeviceEventSource_ErrorRecovery/udev_recovery_after_error (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.613807521+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery/udev_recovery_after_error","Elapsed":0}
{"Time":"2025-10-04T21:54:12.613840117+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery","Output":"--- PASS: TestDeviceEventSource_ErrorRecovery (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.613875455+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorRecovery","Elapsed":0}
{"Time":"2025-10-04T21:54:12.613906291+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_EventsSupported"}
{"Time":"2025-10-04T21:54:12.613939579+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_EventsSupported","Output":"=== RUN   TestUdevDeviceEventSource_EventsSupported\n"}
{"Time":"2025-10-04T21:54:12.613980929+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_EventsSupported","Output":"--- PASS: TestUdevDeviceEventSource_EventsSupported (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.614018103+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestUdevDeviceEventSource_EventsSupported","Elapsed":0}
{"Time":"2025-10-04T21:54:12.614057216+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_ProcessEventTypes"}
{"Time":"2025-10-04T21:54:12.61408398+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_ProcessEventTypes","Output":"=== RUN   TestFsnotifyDeviceEventSource_ProcessEventTypes\n"}
{"Time":"2025-10-04T21:54:12.614134209+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_ProcessEventTypes","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:12.614253508+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_ProcessEventTypes","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:12.614545808+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_ProcessEventTypes","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:12.614738871+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_ProcessEventTypes","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:12.61500615+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_ProcessEventTypes","Output":"--- PASS: TestFsnotifyDeviceEventSource_ProcessEventTypes (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.61505413+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestFsnotifyDeviceEventSource_ProcessEventTypes","Elapsed":0}
{"Time":"2025-10-04T21:54:12.61510118+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ConstructorEdgeCases"}
{"Time":"2025-10-04T21:54:12.615125643+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ConstructorEdgeCases","Output":"=== RUN   TestDeviceEventSource_ConstructorEdgeCases\n"}
{"Time":"2025-10-04T21:54:12.615150278+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ConstructorEdgeCases/fsnotify_with_nil_logger"}
{"Time":"2025-10-04T21:54:12.615171345+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ConstructorEdgeCases/fsnotify_with_nil_logger","Output":"=== RUN   TestDeviceEventSource_ConstructorEdgeCases/fsnotify_with_nil_logger\n"}
{"Time":"2025-10-04T21:54:12.6152366+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ConstructorEdgeCases/fsnotify_with_nil_logger","Output":"--- PASS: TestDeviceEventSource_ConstructorEdgeCases/fsnotify_with_nil_logger (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.615268387+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ConstructorEdgeCases/fsnotify_with_nil_logger","Elapsed":0}
{"Time":"2025-10-04T21:54:12.615291863+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ConstructorEdgeCases/udev_with_nil_logger"}
{"Time":"2025-10-04T21:54:12.615313626+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ConstructorEdgeCases/udev_with_nil_logger","Output":"=== RUN   TestDeviceEventSource_ConstructorEdgeCases/udev_with_nil_logger\n"}
{"Time":"2025-10-04T21:54:12.615357749+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ConstructorEdgeCases/udev_with_nil_logger","Output":"--- PASS: TestDeviceEventSource_ConstructorEdgeCases/udev_with_nil_logger (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.615406835+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ConstructorEdgeCases/udev_with_nil_logger","Elapsed":0}
{"Time":"2025-10-04T21:54:12.61544203+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ConstructorEdgeCases","Output":"--- PASS: TestDeviceEventSource_ConstructorEdgeCases (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.615466439+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ConstructorEdgeCases","Elapsed":0}
{"Time":"2025-10-04T21:54:12.615489898+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorPathCoverage"}
{"Time":"2025-10-04T21:54:12.615510737+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorPathCoverage","Output":"=== RUN   TestDeviceEventSource_ErrorPathCoverage\n"}
{"Time":"2025-10-04T21:54:12.615538379+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorPathCoverage/fsnotify_start_with_cancelled_context"}
{"Time":"2025-10-04T21:54:12.615576575+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorPathCoverage/fsnotify_start_with_cancelled_context","Output":"=== RUN   TestDeviceEventSource_ErrorPathCoverage/fsnotify_start_with_cancelled_context\n"}
{"Time":"2025-10-04T21:54:12.615610007+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorPathCoverage/fsnotify_start_with_cancelled_context","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:12.615649721+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorPathCoverage/fsnotify_start_with_cancelled_context","Output":"--- PASS: TestDeviceEventSource_ErrorPathCoverage/fsnotify_start_with_cancelled_context (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.615680034+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorPathCoverage/fsnotify_start_with_cancelled_context","Elapsed":0}
{"Time":"2025-10-04T21:54:12.615704419+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorPathCoverage/udev_start_stop_cycle"}
{"Time":"2025-10-04T21:54:12.61572555+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorPathCoverage/udev_start_stop_cycle","Output":"=== RUN   TestDeviceEventSource_ErrorPathCoverage/udev_start_stop_cycle\n"}
{"Time":"2025-10-04T21:54:12.615763619+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorPathCoverage/udev_start_stop_cycle","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Started udev device event source\"\n"}
{"Time":"2025-10-04T21:54:12.615810639+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorPathCoverage/udev_start_stop_cycle","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:12.61585217+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorPathCoverage/udev_start_stop_cycle","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Stopped udev device event source\"\n"}
{"Time":"2025-10-04T21:54:12.615909446+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorPathCoverage/udev_start_stop_cycle","Output":"--- PASS: TestDeviceEventSource_ErrorPathCoverage/udev_start_stop_cycle (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.615940117+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorPathCoverage/udev_start_stop_cycle","Elapsed":0}
{"Time":"2025-10-04T21:54:12.615968216+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorPathCoverage","Output":"--- PASS: TestDeviceEventSource_ErrorPathCoverage (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.615997621+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_ErrorPathCoverage","Elapsed":0}
{"Time":"2025-10-04T21:54:12.616022866+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_EnvironmentDetection"}
{"Time":"2025-10-04T21:54:12.616053005+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_EnvironmentDetection","Output":"=== RUN   TestDeviceEventSource_EnvironmentDetection\n"}
{"Time":"2025-10-04T21:54:12.616078677+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_EnvironmentDetection/container_environment_detection"}
{"Time":"2025-10-04T21:54:12.616098824+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_EnvironmentDetection/container_environment_detection","Output":"=== RUN   TestDeviceEventSource_EnvironmentDetection/container_environment_detection\n"}
{"Time":"2025-10-04T21:54:12.616132725+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_EnvironmentDetection/container_environment_detection","Output":"--- PASS: TestDeviceEventSource_EnvironmentDetection/container_environment_detection (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.616162942+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_EnvironmentDetection/container_environment_detection","Elapsed":0}
{"Time":"2025-10-04T21:54:12.616192386+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_EnvironmentDetection/udev_availability_detection"}
{"Time":"2025-10-04T21:54:12.616230145+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_EnvironmentDetection/udev_availability_detection","Output":"=== RUN   TestDeviceEventSource_EnvironmentDetection/udev_availability_detection\n"}
{"Time":"2025-10-04T21:54:12.616324008+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_EnvironmentDetection/udev_availability_detection","Output":"--- PASS: TestDeviceEventSource_EnvironmentDetection/udev_availability_detection (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.616365079+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_EnvironmentDetection/udev_availability_detection","Elapsed":0}
{"Time":"2025-10-04T21:54:12.616397596+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_EnvironmentDetection/smart_device_event_source_selection"}
{"Time":"2025-10-04T21:54:12.616418941+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_EnvironmentDetection/smart_device_event_source_selection","Output":"=== RUN   TestDeviceEventSource_EnvironmentDetection/smart_device_event_source_selection\n"}
{"Time":"2025-10-04T21:54:12.616464475+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_EnvironmentDetection/smart_device_event_source_selection","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:12.616495191+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_EnvironmentDetection/smart_device_event_source_selection","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:12.616526857+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_EnvironmentDetection/smart_device_event_source_selection","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:12.616566692+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_EnvironmentDetection/smart_device_event_source_selection","Output":"--- PASS: TestDeviceEventSource_EnvironmentDetection/smart_device_event_source_selection (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.616599053+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_EnvironmentDetection/smart_device_event_source_selection","Elapsed":0}
{"Time":"2025-10-04T21:54:12.616626512+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_EnvironmentDetection","Output":"--- PASS: TestDeviceEventSource_EnvironmentDetection (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.616649889+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_EnvironmentDetection","Elapsed":0}
{"Time":"2025-10-04T21:54:12.616672804+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolIntegration"}
{"Time":"2025-10-04T21:54:12.61669349+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolIntegration","Output":"=== RUN   TestHybridMonitor_WorkerPoolIntegration\n"}
{"Time":"2025-10-04T21:54:12.616721174+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolIntegration","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:12.616744449+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolIntegration","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:12.616783042+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolIntegration","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:12.616813779+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolIntegration","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:12.616837114+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolIntegration","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:12.61689057+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolIntegration","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:12.617049654+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolIntegration","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:12.617092794+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolIntegration","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:12.617124346+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolIntegration","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:12.617148094+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolIntegration","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:12.617170912+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolIntegration","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:12.617198244+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolIntegration","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:12.617252991+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolIntegration","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:12.617303373+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolIntegration","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:12.617334074+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolIntegration","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:12.617416682+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolIntegration","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:12.617636942+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolIntegration","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Failed to probe device capabilities\"\n"}
{"Time":"2025-10-04T21:54:12.617688683+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolIntegration","Output":"time=\"2025-10-04 21:54:12\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:12.617717065+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolIntegration","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:12.617763643+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolIntegration","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:12.617788949+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolIntegration","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:12.617811526+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolIntegration","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:12.618041377+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolIntegration","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:12.618084541+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolIntegration","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:12.618109693+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolIntegration","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:12.61813262+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolIntegration","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:12.618162154+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolIntegration","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:12.618196139+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolIntegration","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:12.618249586+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolIntegration","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:12.618274966+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolIntegration","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:12.618304224+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolIntegration","Output":"--- PASS: TestHybridMonitor_WorkerPoolIntegration (0.00s)\n"}
{"Time":"2025-10-04T21:54:12.618328095+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolIntegration","Elapsed":0}
{"Time":"2025-10-04T21:54:12.618360417+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement"}
{"Time":"2025-10-04T21:54:12.618380714+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement","Output":"=== RUN   TestHybridMonitor_EventHandlerResourceManagement\n"}
{"Time":"2025-10-04T21:54:12.618433596+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:12.618469753+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:12.61849455+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:12.618523735+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:12.618546162+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:12.618572869+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:12.618695194+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:12.618744455+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:12.618769851+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:12.618797502+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:12.618820594+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:12.618851998+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:12.618876101+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:12.618932952+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:12.633324987+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement","Output":"time=\"2025-10-04 21:54:12\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:12.633426723+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:12.63345149+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:12.633477875+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:12.633501421+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:12.633519188+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:12.633534333+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:12.639357844+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Added camera event handler\"\n"}
{"Time":"2025-10-04T21:54:12.739884742+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:12.73996837+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:12.740000643+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:12.740035618+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:12.740238296+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:12.740313442+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:12.740361599+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:12.740390628+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:12.740414261+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:12.740444075+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement","Output":"    hybrid_monitor_resource_test.go:134: ✅ Event handler resource management validated\n"}
{"Time":"2025-10-04T21:54:12.740478357+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:12.740530099+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement","Output":"--- PASS: TestHybridMonitor_EventHandlerResourceManagement (0.12s)\n"}
{"Time":"2025-10-04T21:54:12.740566334+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_EventHandlerResourceManagement","Elapsed":0.12}
{"Time":"2025-10-04T21:54:12.740601288+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool"}
{"Time":"2025-10-04T21:54:12.740625026+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"=== RUN   TestHybridMonitor_GracefulShutdownWithWorkerPool\n"}
{"Time":"2025-10-04T21:54:12.740726172+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:12.740781836+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:12.740821226+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:12.740849764+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:12.740906008+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:12.740939674+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:12.741107263+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:12.741159664+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:12.741197528+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:12.741262281+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:12.741291863+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:12.74131709+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:12.741348648+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:12.741562998+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:12.754332116+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"time=\"2025-10-04 21:54:12\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:12.75442785+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:12.754452656+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:12.754475309+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:12.754513709+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:12.7545308+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:12.754544845+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"time=\"2025-10-04 21:54:12\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:13.562760359+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:13.562841408+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:13.562858091+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:13.742298038+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Added camera event handler\"\n"}
{"Time":"2025-10-04T21:54:13.752818901+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:13.752875217+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:13.752910724+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:13.752946691+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:13.75316173+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:13.753233734+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:13.943294182+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:13.943389913+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:13.943406048+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:13.943423894+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"    hybrid_monitor_resource_test.go:214: ✅ Graceful shutdown completed in 190.596807ms (handler work: 200ms)\n"}
{"Time":"2025-10-04T21:54:13.943446768+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Output":"--- PASS: TestHybridMonitor_GracefulShutdownWithWorkerPool (1.20s)\n"}
{"Time":"2025-10-04T21:54:13.943458212+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_GracefulShutdownWithWorkerPool","Elapsed":1.2}
{"Time":"2025-10-04T21:54:13.943473185+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling"}
{"Time":"2025-10-04T21:54:13.943482088+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Output":"=== RUN   TestHybridMonitor_WorkerPoolFailureHandling\n"}
{"Time":"2025-10-04T21:54:13.9434941+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:13.943504424+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:13.943515821+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:13.943536196+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:13.943548451+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:13.943644168+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:13.943728514+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:13.943762313+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:13.943780093+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:13.943800371+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:13.943812825+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:13.943822642+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:13.943833937+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:13.943895428+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:13.956413667+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Output":"time=\"2025-10-04 21:54:13\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:13.956504229+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:13.956525868+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:13.956541964+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:13.956557276+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:13.956572692+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:13.956587896+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:13.964170921+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Added camera event handler\"\n"}
{"Time":"2025-10-04T21:54:13.964196438+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Output":"time=\"2025-10-04 21:54:13\" level=error msg=\"Error in camera event handler\"\n"}
{"Time":"2025-10-04T21:54:13.974578739+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:13.97468175+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:13.974710315+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:13.974722467+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:13.975028723+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:13.975063728+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:13.975081769+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:13.975094192+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:13.975128581+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:13.975144053+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Output":"    hybrid_monitor_resource_test.go:287: ✅ Worker pool failure handling validated - system remains stable\n"}
{"Time":"2025-10-04T21:54:13.975155171+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Output":"time=\"2025-10-04 21:54:13\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:13.975174393+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Output":"--- PASS: TestHybridMonitor_WorkerPoolFailureHandling (0.03s)\n"}
{"Time":"2025-10-04T21:54:13.975225677+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridMonitor_WorkerPoolFailureHandling","Elapsed":0.03}
{"Time":"2025-10-04T21:54:13.975252102+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraEvent_Constants"}
{"Time":"2025-10-04T21:54:13.975262946+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraEvent_Constants","Output":"=== RUN   TestCameraEvent_Constants\n"}
{"Time":"2025-10-04T21:54:13.975274664+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraEvent_Constants","Output":"=== PAUSE TestCameraEvent_Constants\n"}
{"Time":"2025-10-04T21:54:13.975285092+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraEvent_Constants"}
{"Time":"2025-10-04T21:54:13.975295248+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraEventData_Structure"}
{"Time":"2025-10-04T21:54:13.975303681+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraEventData_Structure","Output":"=== RUN   TestCameraEventData_Structure\n"}
{"Time":"2025-10-04T21:54:13.975316935+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraEventData_Structure","Output":"=== PAUSE TestCameraEventData_Structure\n"}
{"Time":"2025-10-04T21:54:13.975326361+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraEventData_Structure"}
{"Time":"2025-10-04T21:54:13.975340128+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceChecker_RealImplementation"}
{"Time":"2025-10-04T21:54:13.975355925+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceChecker_RealImplementation","Output":"=== RUN   TestDeviceChecker_RealImplementation\n"}
{"Time":"2025-10-04T21:54:13.975369444+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceChecker_RealImplementation/real_filesystem_checks"}
{"Time":"2025-10-04T21:54:13.975379815+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceChecker_RealImplementation/real_filesystem_checks","Output":"=== RUN   TestDeviceChecker_RealImplementation/real_filesystem_checks\n"}
{"Time":"2025-10-04T21:54:13.975392269+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceChecker_RealImplementation/real_filesystem_checks","Output":"--- PASS: TestDeviceChecker_RealImplementation/real_filesystem_checks (0.00s)\n"}
{"Time":"2025-10-04T21:54:13.975402429+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceChecker_RealImplementation/real_filesystem_checks","Elapsed":0}
{"Time":"2025-10-04T21:54:13.97541358+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceChecker_RealImplementation/camera_device_checks"}
{"Time":"2025-10-04T21:54:13.975422566+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceChecker_RealImplementation/camera_device_checks","Output":"=== RUN   TestDeviceChecker_RealImplementation/camera_device_checks\n"}
{"Time":"2025-10-04T21:54:13.97544882+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceChecker_RealImplementation/camera_device_checks","Output":"    interfaces_test.go:72: Found real camera device: /dev/video0\n"}
{"Time":"2025-10-04T21:54:13.975469864+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceChecker_RealImplementation/camera_device_checks","Output":"    interfaces_test.go:72: Found real camera device: /dev/video1\n"}
{"Time":"2025-10-04T21:54:13.975480468+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceChecker_RealImplementation/camera_device_checks","Output":"    interfaces_test.go:74: No camera at: /dev/video2\n"}
{"Time":"2025-10-04T21:54:13.975498061+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceChecker_RealImplementation/camera_device_checks","Output":"--- PASS: TestDeviceChecker_RealImplementation/camera_device_checks (0.00s)\n"}
{"Time":"2025-10-04T21:54:13.975509537+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceChecker_RealImplementation/camera_device_checks","Elapsed":0}
{"Time":"2025-10-04T21:54:13.975522228+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceChecker_RealImplementation","Output":"--- PASS: TestDeviceChecker_RealImplementation (0.00s)\n"}
{"Time":"2025-10-04T21:54:13.975533894+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceChecker_RealImplementation","Elapsed":0}
{"Time":"2025-10-04T21:54:13.975569184+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2CommandExecutor_RealImplementation"}
{"Time":"2025-10-04T21:54:13.975584363+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2CommandExecutor_RealImplementation","Output":"=== RUN   TestV4L2CommandExecutor_RealImplementation\n"}
{"Time":"2025-10-04T21:54:13.975610161+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2CommandExecutor_RealImplementation/basic_command_execution"}
{"Time":"2025-10-04T21:54:13.975637437+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2CommandExecutor_RealImplementation/basic_command_execution","Output":"=== RUN   TestV4L2CommandExecutor_RealImplementation/basic_command_execution\n"}
{"Time":"2025-10-04T21:54:13.978992474+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2CommandExecutor_RealImplementation/basic_command_execution","Output":"    interfaces_test.go:94: Command execution failed (expected on some systems): v4l2-ctl command failed with exit status 1\n"}
{"Time":"2025-10-04T21:54:13.979097488+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2CommandExecutor_RealImplementation/basic_command_execution","Output":"--- PASS: TestV4L2CommandExecutor_RealImplementation/basic_command_execution (0.00s)\n"}
{"Time":"2025-10-04T21:54:13.979125681+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2CommandExecutor_RealImplementation/basic_command_execution","Elapsed":0}
{"Time":"2025-10-04T21:54:13.979141633+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2CommandExecutor_RealImplementation/camera_device_commands"}
{"Time":"2025-10-04T21:54:13.979152045+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2CommandExecutor_RealImplementation/camera_device_commands","Output":"=== RUN   TestV4L2CommandExecutor_RealImplementation/camera_device_commands\n"}
{"Time":"2025-10-04T21:54:13.979182758+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2CommandExecutor_RealImplementation/camera_device_commands","Output":"    interfaces_test.go:107: Testing V4L2 commands on /dev/video0\n"}
{"Time":"2025-10-04T21:54:13.982181231+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2CommandExecutor_RealImplementation/camera_device_commands","Output":"    interfaces_test.go:115: Could not query /dev/video0: v4l2-ctl error: v4l2-ctl: unrecognized option '--device-info'\n"}
{"Time":"2025-10-04T21:54:13.982264244+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2CommandExecutor_RealImplementation/camera_device_commands","Output":"    interfaces_test.go:107: Testing V4L2 commands on /dev/video1\n"}
{"Time":"2025-10-04T21:54:13.985316197+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2CommandExecutor_RealImplementation/camera_device_commands","Output":"    interfaces_test.go:115: Could not query /dev/video1: v4l2-ctl error: v4l2-ctl: unrecognized option '--device-info'\n"}
{"Time":"2025-10-04T21:54:13.985392543+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2CommandExecutor_RealImplementation/camera_device_commands","Output":"--- PASS: TestV4L2CommandExecutor_RealImplementation/camera_device_commands (0.01s)\n"}
{"Time":"2025-10-04T21:54:13.98540963+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2CommandExecutor_RealImplementation/camera_device_commands","Elapsed":0.01}
{"Time":"2025-10-04T21:54:13.985430971+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2CommandExecutor_RealImplementation","Output":"--- PASS: TestV4L2CommandExecutor_RealImplementation (0.01s)\n"}
{"Time":"2025-10-04T21:54:13.985443285+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2CommandExecutor_RealImplementation","Elapsed":0.01}
{"Time":"2025-10-04T21:54:13.985455175+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceInfoParser_RealImplementation"}
{"Time":"2025-10-04T21:54:13.985464845+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceInfoParser_RealImplementation","Output":"=== RUN   TestDeviceInfoParser_RealImplementation\n"}
{"Time":"2025-10-04T21:54:13.98547694+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceInfoParser_RealImplementation/parse_device_info"}
{"Time":"2025-10-04T21:54:13.98549097+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceInfoParser_RealImplementation/parse_device_info","Output":"=== RUN   TestDeviceInfoParser_RealImplementation/parse_device_info\n"}
{"Time":"2025-10-04T21:54:13.990852665+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceInfoParser_RealImplementation/parse_device_info","Output":"    test_helpers_test.go:104: Found accessible camera device: /dev/video0\n"}
{"Time":"2025-10-04T21:54:13.999883796+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceInfoParser_RealImplementation/parse_device_info","Output":"    interfaces_test.go:150: Parsed real device: Driver=uvcvideo, Card=USB 2.0 Camera: USB 2.0 Camera\n"}
{"Time":"2025-10-04T21:54:13.999968777+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceInfoParser_RealImplementation/parse_device_info","Output":"--- PASS: TestDeviceInfoParser_RealImplementation/parse_device_info (0.01s)\n"}
{"Time":"2025-10-04T21:54:14.000014825+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceInfoParser_RealImplementation/parse_device_info","Elapsed":0.01}
{"Time":"2025-10-04T21:54:14.000033838+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceInfoParser_RealImplementation/parse_device_formats"}
{"Time":"2025-10-04T21:54:14.000040874+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceInfoParser_RealImplementation/parse_device_formats","Output":"=== RUN   TestDeviceInfoParser_RealImplementation/parse_device_formats\n"}
{"Time":"2025-10-04T21:54:14.000049127+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceInfoParser_RealImplementation/parse_device_formats","Output":"--- PASS: TestDeviceInfoParser_RealImplementation/parse_device_formats (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.000057534+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceInfoParser_RealImplementation/parse_device_formats","Elapsed":0}
{"Time":"2025-10-04T21:54:14.000068198+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceInfoParser_RealImplementation/parse_device_frame_rates"}
{"Time":"2025-10-04T21:54:14.000078281+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceInfoParser_RealImplementation/parse_device_frame_rates","Output":"=== RUN   TestDeviceInfoParser_RealImplementation/parse_device_frame_rates\n"}
{"Time":"2025-10-04T21:54:14.00101472+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceInfoParser_RealImplementation/parse_device_frame_rates","Output":"--- PASS: TestDeviceInfoParser_RealImplementation/parse_device_frame_rates (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.001052828+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceInfoParser_RealImplementation/parse_device_frame_rates","Elapsed":0}
{"Time":"2025-10-04T21:54:14.001070919+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceInfoParser_RealImplementation","Output":"--- PASS: TestDeviceInfoParser_RealImplementation (0.02s)\n"}
{"Time":"2025-10-04T21:54:14.001089332+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceInfoParser_RealImplementation","Elapsed":0.02}
{"Time":"2025-10-04T21:54:14.001104652+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEventNotifier_RealImplementation"}
{"Time":"2025-10-04T21:54:14.001116089+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEventNotifier_RealImplementation","Output":"=== RUN   TestEventNotifier_RealImplementation\n"}
{"Time":"2025-10-04T21:54:14.001128211+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEventNotifier_RealImplementation/notify_camera_connected"}
{"Time":"2025-10-04T21:54:14.001138747+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEventNotifier_RealImplementation/notify_camera_connected","Output":"=== RUN   TestEventNotifier_RealImplementation/notify_camera_connected\n"}
{"Time":"2025-10-04T21:54:14.001152089+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEventNotifier_RealImplementation/notify_camera_connected","Output":"--- PASS: TestEventNotifier_RealImplementation/notify_camera_connected (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.001183582+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEventNotifier_RealImplementation/notify_camera_connected","Elapsed":0}
{"Time":"2025-10-04T21:54:14.001204096+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEventNotifier_RealImplementation/notify_camera_disconnected"}
{"Time":"2025-10-04T21:54:14.001227989+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEventNotifier_RealImplementation/notify_camera_disconnected","Output":"=== RUN   TestEventNotifier_RealImplementation/notify_camera_disconnected\n"}
{"Time":"2025-10-04T21:54:14.001242955+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEventNotifier_RealImplementation/notify_camera_disconnected","Output":"--- PASS: TestEventNotifier_RealImplementation/notify_camera_disconnected (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.0012559+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEventNotifier_RealImplementation/notify_camera_disconnected","Elapsed":0}
{"Time":"2025-10-04T21:54:14.00126849+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEventNotifier_RealImplementation/notify_status_change"}
{"Time":"2025-10-04T21:54:14.001284768+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEventNotifier_RealImplementation/notify_status_change","Output":"=== RUN   TestEventNotifier_RealImplementation/notify_status_change\n"}
{"Time":"2025-10-04T21:54:14.001300733+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEventNotifier_RealImplementation/notify_status_change","Output":"--- PASS: TestEventNotifier_RealImplementation/notify_status_change (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.001313744+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEventNotifier_RealImplementation/notify_status_change","Elapsed":0}
{"Time":"2025-10-04T21:54:14.001330095+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEventNotifier_RealImplementation/notify_capability_detected"}
{"Time":"2025-10-04T21:54:14.001341934+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEventNotifier_RealImplementation/notify_capability_detected","Output":"=== RUN   TestEventNotifier_RealImplementation/notify_capability_detected\n"}
{"Time":"2025-10-04T21:54:14.001360136+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEventNotifier_RealImplementation/notify_capability_detected","Output":"--- PASS: TestEventNotifier_RealImplementation/notify_capability_detected (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.001374056+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEventNotifier_RealImplementation/notify_capability_detected","Elapsed":0}
{"Time":"2025-10-04T21:54:14.001395843+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEventNotifier_RealImplementation/notify_capability_error"}
{"Time":"2025-10-04T21:54:14.001408281+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEventNotifier_RealImplementation/notify_capability_error","Output":"=== RUN   TestEventNotifier_RealImplementation/notify_capability_error\n"}
{"Time":"2025-10-04T21:54:14.001421586+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEventNotifier_RealImplementation/notify_capability_error","Output":"--- PASS: TestEventNotifier_RealImplementation/notify_capability_error (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.001446632+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEventNotifier_RealImplementation/notify_capability_error","Elapsed":0}
{"Time":"2025-10-04T21:54:14.00146153+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEventNotifier_RealImplementation","Output":"--- PASS: TestEventNotifier_RealImplementation (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.001473506+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEventNotifier_RealImplementation","Elapsed":0}
{"Time":"2025-10-04T21:54:14.001484039+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_RealImplementation"}
{"Time":"2025-10-04T21:54:14.001493132+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_RealImplementation","Output":"=== RUN   TestCameraMonitor_RealImplementation\n"}
{"Time":"2025-10-04T21:54:14.001511362+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_RealImplementation/monitor_creation"}
{"Time":"2025-10-04T21:54:14.001521587+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_RealImplementation/monitor_creation","Output":"=== RUN   TestCameraMonitor_RealImplementation/monitor_creation\n"}
{"Time":"2025-10-04T21:54:14.00153337+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_RealImplementation/monitor_creation","Output":"--- PASS: TestCameraMonitor_RealImplementation/monitor_creation (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.001543133+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_RealImplementation/monitor_creation","Elapsed":0}
{"Time":"2025-10-04T21:54:14.001561688+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_RealImplementation/interface_compliance"}
{"Time":"2025-10-04T21:54:14.001579123+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_RealImplementation/interface_compliance","Output":"=== RUN   TestCameraMonitor_RealImplementation/interface_compliance\n"}
{"Time":"2025-10-04T21:54:14.011992234+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_RealImplementation/interface_compliance","Output":"    test_helpers_test.go:104: Found accessible camera device: /dev/video0\n"}
{"Time":"2025-10-04T21:54:14.022075392+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_RealImplementation/interface_compliance","Output":"--- PASS: TestCameraMonitor_RealImplementation/interface_compliance (0.02s)\n"}
{"Time":"2025-10-04T21:54:14.022162404+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_RealImplementation/interface_compliance","Elapsed":0.02}
{"Time":"2025-10-04T21:54:14.022188862+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_RealImplementation","Output":"--- PASS: TestCameraMonitor_RealImplementation (0.02s)\n"}
{"Time":"2025-10-04T21:54:14.022197618+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_RealImplementation","Elapsed":0.02}
{"Time":"2025-10-04T21:54:14.022248911+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_TakeDirectSnapshot"}
{"Time":"2025-10-04T21:54:14.02226464+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_TakeDirectSnapshot","Output":"=== RUN   TestCameraMonitor_TakeDirectSnapshot\n"}
{"Time":"2025-10-04T21:54:14.022273036+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_TakeDirectSnapshot/interface_compliance"}
{"Time":"2025-10-04T21:54:14.022278997+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_TakeDirectSnapshot/interface_compliance","Output":"=== RUN   TestCameraMonitor_TakeDirectSnapshot/interface_compliance\n"}
{"Time":"2025-10-04T21:54:14.022285148+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_TakeDirectSnapshot/interface_compliance","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:14.022291446+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_TakeDirectSnapshot/interface_compliance","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:14.022300745+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_TakeDirectSnapshot/interface_compliance","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:14.022335195+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_TakeDirectSnapshot/interface_compliance","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Taking V4L2 direct snapshot\"\n"}
{"Time":"2025-10-04T21:54:14.022384495+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_TakeDirectSnapshot/interface_compliance","Output":"--- PASS: TestCameraMonitor_TakeDirectSnapshot/interface_compliance (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.022401201+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_TakeDirectSnapshot/interface_compliance","Elapsed":0}
{"Time":"2025-10-04T21:54:14.02241712+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_TakeDirectSnapshot/direct_snapshot_interface"}
{"Time":"2025-10-04T21:54:14.022433688+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_TakeDirectSnapshot/direct_snapshot_interface","Output":"=== RUN   TestCameraMonitor_TakeDirectSnapshot/direct_snapshot_interface\n"}
{"Time":"2025-10-04T21:54:14.022451437+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_TakeDirectSnapshot/direct_snapshot_interface","Output":"--- PASS: TestCameraMonitor_TakeDirectSnapshot/direct_snapshot_interface (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.022465213+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_TakeDirectSnapshot/direct_snapshot_interface","Elapsed":0}
{"Time":"2025-10-04T21:54:14.02248172+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_TakeDirectSnapshot","Output":"--- PASS: TestCameraMonitor_TakeDirectSnapshot (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.022507361+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraMonitor_TakeDirectSnapshot","Elapsed":0}
{"Time":"2025-10-04T21:54:14.022522877+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMonitorStats_Structure"}
{"Time":"2025-10-04T21:54:14.022538244+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMonitorStats_Structure","Output":"=== RUN   TestMonitorStats_Structure\n"}
{"Time":"2025-10-04T21:54:14.022553634+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMonitorStats_Structure","Output":"=== PAUSE TestMonitorStats_Structure\n"}
{"Time":"2025-10-04T21:54:14.022560159+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMonitorStats_Structure"}
{"Time":"2025-10-04T21:54:14.022566701+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCapabilityDetectionResult_Structure"}
{"Time":"2025-10-04T21:54:14.022575891+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCapabilityDetectionResult_Structure","Output":"=== RUN   TestCapabilityDetectionResult_Structure\n"}
{"Time":"2025-10-04T21:54:14.022587342+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCapabilityDetectionResult_Structure","Output":"=== PAUSE TestCapabilityDetectionResult_Structure\n"}
{"Time":"2025-10-04T21:54:14.022597719+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCapabilityDetectionResult_Structure"}
{"Time":"2025-10-04T21:54:14.022608884+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_DEPRECATED"}
{"Time":"2025-10-04T21:54:14.022623351+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_DEPRECATED","Output":"=== RUN   TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_DEPRECATED\n"}
{"Time":"2025-10-04T21:54:14.022636166+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_DEPRECATED","Output":"    monitor_advanced_functionality_test.go:14: DEPRECATED: This test uses old API. Use refactored version instead.\n"}
{"Time":"2025-10-04T21:54:14.022654876+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_DEPRECATED","Output":"--- SKIP: TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_DEPRECATED (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.022667934+04:00","Action":"skip","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_AdvancedFunctionality_ReqCAM001_Success_DEPRECATED","Elapsed":0}
{"Time":"2025-10-04T21:54:14.022679735+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreationAdvanced_ReqCAM001_Success_DEPRECATED"}
{"Time":"2025-10-04T21:54:14.022690066+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreationAdvanced_ReqCAM001_Success_DEPRECATED","Output":"=== RUN   TestHybridCameraMonitor_DeviceCreationAdvanced_ReqCAM001_Success_DEPRECATED\n"}
{"Time":"2025-10-04T21:54:14.022700863+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreationAdvanced_ReqCAM001_Success_DEPRECATED","Output":"    monitor_advanced_functionality_test.go:20: DEPRECATED: This test uses old API. Use refactored version instead.\n"}
{"Time":"2025-10-04T21:54:14.022721937+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreationAdvanced_ReqCAM001_Success_DEPRECATED","Output":"--- SKIP: TestHybridCameraMonitor_DeviceCreationAdvanced_ReqCAM001_Success_DEPRECATED (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.022741087+04:00","Action":"skip","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_DeviceCreationAdvanced_ReqCAM001_Success_DEPRECATED","Elapsed":0}
{"Time":"2025-10-04T21:54:14.022758599+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventProcessingAdvanced_ReqCAM001_Success_DEPRECATED"}
{"Time":"2025-10-04T21:54:14.022769383+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventProcessingAdvanced_ReqCAM001_Success_DEPRECATED","Output":"=== RUN   TestHybridCameraMonitor_EventProcessingAdvanced_ReqCAM001_Success_DEPRECATED\n"}
{"Time":"2025-10-04T21:54:14.022785167+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventProcessingAdvanced_ReqCAM001_Success_DEPRECATED","Output":"    monitor_advanced_functionality_test.go:26: DEPRECATED: This test uses old API. Use refactored version instead.\n"}
{"Time":"2025-10-04T21:54:14.022797+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventProcessingAdvanced_ReqCAM001_Success_DEPRECATED","Output":"--- SKIP: TestHybridCameraMonitor_EventProcessingAdvanced_ReqCAM001_Success_DEPRECATED (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.022803984+04:00","Action":"skip","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventProcessingAdvanced_ReqCAM001_Success_DEPRECATED","Elapsed":0}
{"Time":"2025-10-04T21:54:14.022815269+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventNotifierAdvanced_ReqCAM001_Success_DEPRECATED"}
{"Time":"2025-10-04T21:54:14.022823348+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventNotifierAdvanced_ReqCAM001_Success_DEPRECATED","Output":"=== RUN   TestHybridCameraMonitor_EventNotifierAdvanced_ReqCAM001_Success_DEPRECATED\n"}
{"Time":"2025-10-04T21:54:14.02283375+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventNotifierAdvanced_ReqCAM001_Success_DEPRECATED","Output":"    monitor_advanced_functionality_test.go:32: DEPRECATED: This test uses old API. Use refactored version instead.\n"}
{"Time":"2025-10-04T21:54:14.022847067+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventNotifierAdvanced_ReqCAM001_Success_DEPRECATED","Output":"--- SKIP: TestHybridCameraMonitor_EventNotifierAdvanced_ReqCAM001_Success_DEPRECATED (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.022859363+04:00","Action":"skip","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_EventNotifierAdvanced_ReqCAM001_Success_DEPRECATED","Elapsed":0}
{"Time":"2025-10-04T21:54:14.022871599+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingAdvanced_ReqCAM001_Success_DEPRECATED"}
{"Time":"2025-10-04T21:54:14.022889716+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingAdvanced_ReqCAM001_Success_DEPRECATED","Output":"=== RUN   TestHybridCameraMonitor_PollingAdvanced_ReqCAM001_Success_DEPRECATED\n"}
{"Time":"2025-10-04T21:54:14.022898382+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingAdvanced_ReqCAM001_Success_DEPRECATED","Output":"    monitor_advanced_functionality_test.go:38: DEPRECATED: This test uses old API. Use refactored version instead.\n"}
{"Time":"2025-10-04T21:54:14.022906677+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingAdvanced_ReqCAM001_Success_DEPRECATED","Output":"--- SKIP: TestHybridCameraMonitor_PollingAdvanced_ReqCAM001_Success_DEPRECATED (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.022921867+04:00","Action":"skip","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_PollingAdvanced_ReqCAM001_Success_DEPRECATED","Elapsed":0}
{"Time":"2025-10-04T21:54:14.022934973+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctionsAdvanced_ReqCAM001_Success_DEPRECATED"}
{"Time":"2025-10-04T21:54:14.022948731+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctionsAdvanced_ReqCAM001_Success_DEPRECATED","Output":"=== RUN   TestHybridCameraMonitor_UtilityFunctionsAdvanced_ReqCAM001_Success_DEPRECATED\n"}
{"Time":"2025-10-04T21:54:14.022960353+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctionsAdvanced_ReqCAM001_Success_DEPRECATED","Output":"    monitor_advanced_functionality_test.go:44: DEPRECATED: This test uses old API. Use refactored version instead.\n"}
{"Time":"2025-10-04T21:54:14.022969021+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctionsAdvanced_ReqCAM001_Success_DEPRECATED","Output":"--- SKIP: TestHybridCameraMonitor_UtilityFunctionsAdvanced_ReqCAM001_Success_DEPRECATED (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.022975787+04:00","Action":"skip","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_UtilityFunctionsAdvanced_ReqCAM001_Success_DEPRECATED","Elapsed":0}
{"Time":"2025-10-04T21:54:14.022982969+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ConfigurationAdvanced_ReqCAM001_Success_DEPRECATED"}
{"Time":"2025-10-04T21:54:14.022988568+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ConfigurationAdvanced_ReqCAM001_Success_DEPRECATED","Output":"=== RUN   TestHybridCameraMonitor_ConfigurationAdvanced_ReqCAM001_Success_DEPRECATED\n"}
{"Time":"2025-10-04T21:54:14.022994916+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ConfigurationAdvanced_ReqCAM001_Success_DEPRECATED","Output":"    monitor_advanced_functionality_test.go:50: DEPRECATED: This test uses old API. Use refactored version instead.\n"}
{"Time":"2025-10-04T21:54:14.023006505+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ConfigurationAdvanced_ReqCAM001_Success_DEPRECATED","Output":"--- SKIP: TestHybridCameraMonitor_ConfigurationAdvanced_ReqCAM001_Success_DEPRECATED (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.023022734+04:00","Action":"skip","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestHybridCameraMonitor_ConfigurationAdvanced_ReqCAM001_Success_DEPRECATED","Elapsed":0}
{"Time":"2025-10-04T21:54:14.023045413+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_Smoke"}
{"Time":"2025-10-04T21:54:14.023057696+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_Smoke","Output":"=== RUN   Test_MonitorStart_Smoke\n"}
{"Time":"2025-10-04T21:54:14.023075582+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_Smoke","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:14.023087383+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_Smoke","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:14.02309891+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_Smoke","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:14.023110161+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_Smoke","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:14.023125064+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_Smoke","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:14.023137709+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_Smoke","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:14.023148088+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_Smoke","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:14.02315785+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_Smoke","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:14.023167649+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_Smoke","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:14.023178213+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_Smoke","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:14.023187865+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_Smoke","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:14.023197228+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_Smoke","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:14.023276063+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_Smoke","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:14.023374651+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_Smoke","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:14.035155498+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_Smoke","Output":"time=\"2025-10-04 21:54:14\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:14.035259622+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_Smoke","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:14.03529067+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_Smoke","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:14.035307112+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_Smoke","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:14.035320518+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_Smoke","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:14.035330013+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_Smoke","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:14.035339435+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_Smoke","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:14.124436953+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_Smoke","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:14.124529143+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_Smoke","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:14.124559911+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_Smoke","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:14.124592614+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_Smoke","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:14.125152293+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_Smoke","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:14.125205394+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_Smoke","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:14.125277046+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_Smoke","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:14.125332941+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_Smoke","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:14.125367467+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_Smoke","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:14.125394655+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_Smoke","Output":"    monitor_startup_smoke_test.go:79: Monitor startup completed in 184.599µs\n"}
{"Time":"2025-10-04T21:54:14.125418245+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_Smoke","Output":"--- PASS: Test_MonitorStart_Smoke (0.10s)\n"}
{"Time":"2025-10-04T21:54:14.125435167+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_Smoke","Elapsed":0.1}
{"Time":"2025-10-04T21:54:14.125455121+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_SingleStartInvariant"}
{"Time":"2025-10-04T21:54:14.12547084+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_SingleStartInvariant","Output":"=== RUN   Test_MonitorStart_SingleStartInvariant\n"}
{"Time":"2025-10-04T21:54:14.125553837+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_SingleStartInvariant","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:14.125580524+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_SingleStartInvariant","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:14.125597094+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_SingleStartInvariant","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:14.125610235+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_SingleStartInvariant","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Starting hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:14.125620463+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_SingleStartInvariant","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Starting device event source\"\n"}
{"Time":"2025-10-04T21:54:14.125662824+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_SingleStartInvariant","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:14.125739713+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_SingleStartInvariant","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:14.125763079+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_SingleStartInvariant","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Device event source started successfully\"\n"}
{"Time":"2025-10-04T21:54:14.12578427+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_SingleStartInvariant","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Running in event-first mode with fsnotify support\"\n"}
{"Time":"2025-10-04T21:54:14.125797508+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_SingleStartInvariant","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Bounded worker pool started\"\n"}
{"Time":"2025-10-04T21:54:14.125807485+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_SingleStartInvariant","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Spawning monitor loops\"\n"}
{"Time":"2025-10-04T21:54:14.125817133+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_SingleStartInvariant","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Monitor start completed successfully\"\n"}
{"Time":"2025-10-04T21:54:14.125831413+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_SingleStartInvariant","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Stopping hybrid camera monitor\"\n"}
{"Time":"2025-10-04T21:54:14.125844726+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_SingleStartInvariant","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:14.125854861+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_SingleStartInvariant","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Starting seed discovery\"\n"}
{"Time":"2025-10-04T21:54:14.12591553+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_SingleStartInvariant","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Error checking device\"\n"}
{"Time":"2025-10-04T21:54:14.125976371+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_SingleStartInvariant","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Failed to probe device capabilities\"\n"}
{"Time":"2025-10-04T21:54:14.125994579+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_SingleStartInvariant","Output":"time=\"2025-10-04 21:54:14\" level=warning msg=\"Device check error occurred\"\n"}
{"Time":"2025-10-04T21:54:14.126007118+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_SingleStartInvariant","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"New V4L2 device discovered\"\n"}
{"Time":"2025-10-04T21:54:14.126024843+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_SingleStartInvariant","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Seed discovery completed\"\n"}
{"Time":"2025-10-04T21:54:14.126035714+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_SingleStartInvariant","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Monitor is now ready\"\n"}
{"Time":"2025-10-04T21:54:14.126047272+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_SingleStartInvariant","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Starting event-first camera monitoring\"\n"}
{"Time":"2025-10-04T21:54:14.126082573+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_SingleStartInvariant","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Device event loop started\"\n"}
{"Time":"2025-10-04T21:54:14.1261078+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_SingleStartInvariant","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Device event loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:14.126145201+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_SingleStartInvariant","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Camera reconcile loop started\"\n"}
{"Time":"2025-10-04T21:54:14.126158166+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_SingleStartInvariant","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Camera reconcile loop stopped due to context cancellation\"\n"}
{"Time":"2025-10-04T21:54:14.126194942+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_SingleStartInvariant","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:14.12622706+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_SingleStartInvariant","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Stopping bounded worker pool...\"\n"}
{"Time":"2025-10-04T21:54:14.12624382+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_SingleStartInvariant","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"All worker pool tasks completed gracefully\"\n"}
{"Time":"2025-10-04T21:54:14.126256163+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_SingleStartInvariant","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Bounded worker pool stopped\"\n"}
{"Time":"2025-10-04T21:54:14.126265948+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_SingleStartInvariant","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Hybrid camera monitor stopped\"\n"}
{"Time":"2025-10-04T21:54:14.12629104+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_SingleStartInvariant","Output":"--- PASS: Test_MonitorStart_SingleStartInvariant (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.126302414+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"Test_MonitorStart_SingleStartInvariant","Elapsed":0}
{"Time":"2025-10-04T21:54:14.126322383+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand"}
{"Time":"2025-10-04T21:54:14.126335633+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand","Output":"=== RUN   TestRealV4L2CommandExecutor_ExecuteCommand\n"}
{"Time":"2025-10-04T21:54:14.1263469+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/valid_device_command"}
{"Time":"2025-10-04T21:54:14.126355625+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/valid_device_command","Output":"=== RUN   TestRealV4L2CommandExecutor_ExecuteCommand/valid_device_command\n"}
{"Time":"2025-10-04T21:54:14.13190376+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/valid_device_command","Output":"    test_helpers_test.go:104: Found accessible camera device: /dev/video0\n"}
{"Time":"2025-10-04T21:54:14.142953195+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/valid_device_command","Output":"--- PASS: TestRealV4L2CommandExecutor_ExecuteCommand/valid_device_command (0.02s)\n"}
{"Time":"2025-10-04T21:54:14.143045163+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/valid_device_command","Elapsed":0.02}
{"Time":"2025-10-04T21:54:14.14306392+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/invalid_device"}
{"Time":"2025-10-04T21:54:14.143071769+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/invalid_device","Output":"=== RUN   TestRealV4L2CommandExecutor_ExecuteCommand/invalid_device\n"}
{"Time":"2025-10-04T21:54:14.147103183+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/invalid_device","Output":"--- PASS: TestRealV4L2CommandExecutor_ExecuteCommand/invalid_device (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.14716805+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/invalid_device","Elapsed":0}
{"Time":"2025-10-04T21:54:14.147189249+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/invalid_command"}
{"Time":"2025-10-04T21:54:14.147203422+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/invalid_command","Output":"=== RUN   TestRealV4L2CommandExecutor_ExecuteCommand/invalid_command\n"}
{"Time":"2025-10-04T21:54:14.154029324+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/invalid_command","Output":"    test_helpers_test.go:104: Found accessible camera device: /dev/video0\n"}
{"Time":"2025-10-04T21:54:14.161302396+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/invalid_command","Output":"--- PASS: TestRealV4L2CommandExecutor_ExecuteCommand/invalid_command (0.01s)\n"}
{"Time":"2025-10-04T21:54:14.161385409+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/invalid_command","Elapsed":0.01}
{"Time":"2025-10-04T21:54:14.161413408+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/multiple_arguments"}
{"Time":"2025-10-04T21:54:14.161425601+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/multiple_arguments","Output":"=== RUN   TestRealV4L2CommandExecutor_ExecuteCommand/multiple_arguments\n"}
{"Time":"2025-10-04T21:54:14.168027903+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/multiple_arguments","Output":"    test_helpers_test.go:104: Found accessible camera device: /dev/video0\n"}
{"Time":"2025-10-04T21:54:14.178998843+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/multiple_arguments","Output":"--- PASS: TestRealV4L2CommandExecutor_ExecuteCommand/multiple_arguments (0.02s)\n"}
{"Time":"2025-10-04T21:54:14.17910499+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/multiple_arguments","Elapsed":0.02}
{"Time":"2025-10-04T21:54:14.179135579+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/context_cancellation"}
{"Time":"2025-10-04T21:54:14.179148265+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/context_cancellation","Output":"=== RUN   TestRealV4L2CommandExecutor_ExecuteCommand/context_cancellation\n"}
{"Time":"2025-10-04T21:54:14.186440969+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/context_cancellation","Output":"    test_helpers_test.go:104: Found accessible camera device: /dev/video0\n"}
{"Time":"2025-10-04T21:54:14.190873754+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/context_cancellation","Output":"--- PASS: TestRealV4L2CommandExecutor_ExecuteCommand/context_cancellation (0.01s)\n"}
{"Time":"2025-10-04T21:54:14.190945986+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/context_cancellation","Elapsed":0.01}
{"Time":"2025-10-04T21:54:14.190977474+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/context_timeout"}
{"Time":"2025-10-04T21:54:14.190989348+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/context_timeout","Output":"=== RUN   TestRealV4L2CommandExecutor_ExecuteCommand/context_timeout\n"}
{"Time":"2025-10-04T21:54:14.196990967+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/context_timeout","Output":"    test_helpers_test.go:104: Found accessible camera device: /dev/video0\n"}
{"Time":"2025-10-04T21:54:14.20056031+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/context_timeout","Output":"--- PASS: TestRealV4L2CommandExecutor_ExecuteCommand/context_timeout (0.01s)\n"}
{"Time":"2025-10-04T21:54:14.200623254+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/context_timeout","Elapsed":0.01}
{"Time":"2025-10-04T21:54:14.200648608+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/device_path_special_characters"}
{"Time":"2025-10-04T21:54:14.200664614+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/device_path_special_characters","Output":"=== RUN   TestRealV4L2CommandExecutor_ExecuteCommand/device_path_special_characters\n"}
{"Time":"2025-10-04T21:54:14.204448387+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/device_path_special_characters","Output":"--- PASS: TestRealV4L2CommandExecutor_ExecuteCommand/device_path_special_characters (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.204503112+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/device_path_special_characters","Elapsed":0}
{"Time":"2025-10-04T21:54:14.204545113+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/command_special_characters"}
{"Time":"2025-10-04T21:54:14.204556009+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/command_special_characters","Output":"=== RUN   TestRealV4L2CommandExecutor_ExecuteCommand/command_special_characters\n"}
{"Time":"2025-10-04T21:54:14.2099913+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/command_special_characters","Output":"    test_helpers_test.go:104: Found accessible camera device: /dev/video0\n"}
{"Time":"2025-10-04T21:54:14.216449907+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/command_special_characters","Output":"--- PASS: TestRealV4L2CommandExecutor_ExecuteCommand/command_special_characters (0.01s)\n"}
{"Time":"2025-10-04T21:54:14.216522279+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/command_special_characters","Elapsed":0.01}
{"Time":"2025-10-04T21:54:14.216545818+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/very_long_device_path"}
{"Time":"2025-10-04T21:54:14.216553143+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/very_long_device_path","Output":"=== RUN   TestRealV4L2CommandExecutor_ExecuteCommand/very_long_device_path\n"}
{"Time":"2025-10-04T21:54:14.221615051+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/very_long_device_path","Output":"--- PASS: TestRealV4L2CommandExecutor_ExecuteCommand/very_long_device_path (0.01s)\n"}
{"Time":"2025-10-04T21:54:14.22170829+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/very_long_device_path","Elapsed":0.01}
{"Time":"2025-10-04T21:54:14.221731017+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/very_long_command_arguments"}
{"Time":"2025-10-04T21:54:14.22174029+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/very_long_command_arguments","Output":"=== RUN   TestRealV4L2CommandExecutor_ExecuteCommand/very_long_command_arguments\n"}
{"Time":"2025-10-04T21:54:14.229012753+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/very_long_command_arguments","Output":"    test_helpers_test.go:104: Found accessible camera device: /dev/video0\n"}
{"Time":"2025-10-04T21:54:14.237169335+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/very_long_command_arguments","Output":"--- PASS: TestRealV4L2CommandExecutor_ExecuteCommand/very_long_command_arguments (0.02s)\n"}
{"Time":"2025-10-04T21:54:14.237312631+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/very_long_command_arguments","Elapsed":0.02}
{"Time":"2025-10-04T21:54:14.237341157+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/empty_device_path"}
{"Time":"2025-10-04T21:54:14.237377343+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/empty_device_path","Output":"=== RUN   TestRealV4L2CommandExecutor_ExecuteCommand/empty_device_path\n"}
{"Time":"2025-10-04T21:54:14.241192032+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/empty_device_path","Output":"--- PASS: TestRealV4L2CommandExecutor_ExecuteCommand/empty_device_path (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.241264965+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/empty_device_path","Elapsed":0}
{"Time":"2025-10-04T21:54:14.24128705+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/empty_command_arguments"}
{"Time":"2025-10-04T21:54:14.241298088+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/empty_command_arguments","Output":"=== RUN   TestRealV4L2CommandExecutor_ExecuteCommand/empty_command_arguments\n"}
{"Time":"2025-10-04T21:54:14.246886545+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/empty_command_arguments","Output":"    test_helpers_test.go:104: Found accessible camera device: /dev/video0\n"}
{"Time":"2025-10-04T21:54:14.256081283+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/empty_command_arguments","Output":"    real_implementations_test.go:221: Empty command arguments handled gracefully: \n"}
{"Time":"2025-10-04T21:54:14.25618597+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/empty_command_arguments","Output":"--- PASS: TestRealV4L2CommandExecutor_ExecuteCommand/empty_command_arguments (0.01s)\n"}
{"Time":"2025-10-04T21:54:14.256205549+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/empty_command_arguments","Elapsed":0.01}
{"Time":"2025-10-04T21:54:14.256253421+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/device_path_with_spaces"}
{"Time":"2025-10-04T21:54:14.256262396+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/device_path_with_spaces","Output":"=== RUN   TestRealV4L2CommandExecutor_ExecuteCommand/device_path_with_spaces\n"}
{"Time":"2025-10-04T21:54:14.260115649+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/device_path_with_spaces","Output":"--- PASS: TestRealV4L2CommandExecutor_ExecuteCommand/device_path_with_spaces (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.260193524+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/device_path_with_spaces","Elapsed":0}
{"Time":"2025-10-04T21:54:14.260240952+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/command_with_newlines"}
{"Time":"2025-10-04T21:54:14.260259979+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/command_with_newlines","Output":"=== RUN   TestRealV4L2CommandExecutor_ExecuteCommand/command_with_newlines\n"}
{"Time":"2025-10-04T21:54:14.267023979+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/command_with_newlines","Output":"    test_helpers_test.go:104: Found accessible camera device: /dev/video0\n"}
{"Time":"2025-10-04T21:54:14.274819686+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/command_with_newlines","Output":"--- PASS: TestRealV4L2CommandExecutor_ExecuteCommand/command_with_newlines (0.01s)\n"}
{"Time":"2025-10-04T21:54:14.274899427+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/command_with_newlines","Elapsed":0.01}
{"Time":"2025-10-04T21:54:14.274940081+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/command_with_tabs"}
{"Time":"2025-10-04T21:54:14.274956275+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/command_with_tabs","Output":"=== RUN   TestRealV4L2CommandExecutor_ExecuteCommand/command_with_tabs\n"}
{"Time":"2025-10-04T21:54:14.281045972+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/command_with_tabs","Output":"    test_helpers_test.go:104: Found accessible camera device: /dev/video0\n"}
{"Time":"2025-10-04T21:54:14.289578821+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/command_with_tabs","Output":"    real_implementations_test.go:273: Command with tabs handled gracefully: \n"}
{"Time":"2025-10-04T21:54:14.289651925+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/command_with_tabs","Output":"        General/Common options:\n"}
{"Time":"2025-10-04T21:54:14.289671556+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/command_with_tabs","Output":"          --all              display all information available\n"}
{"Time":"2025-10-04T21:54:14.289686825+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/command_with_tabs","Output":"          -C, --get-ctrl \u003cct\n"}
{"Time":"2025-10-04T21:54:14.289712371+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/command_with_tabs","Output":"--- PASS: TestRealV4L2CommandExecutor_ExecuteCommand/command_with_tabs (0.01s)\n"}
{"Time":"2025-10-04T21:54:14.289736207+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/command_with_tabs","Elapsed":0.01}
{"Time":"2025-10-04T21:54:14.289759656+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/multiple_command_arguments"}
{"Time":"2025-10-04T21:54:14.289775826+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/multiple_command_arguments","Output":"=== RUN   TestRealV4L2CommandExecutor_ExecuteCommand/multiple_command_arguments\n"}
{"Time":"2025-10-04T21:54:14.297028572+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/multiple_command_arguments","Output":"    test_helpers_test.go:104: Found accessible camera device: /dev/video0\n"}
{"Time":"2025-10-04T21:54:14.306852571+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/multiple_command_arguments","Output":"--- PASS: TestRealV4L2CommandExecutor_ExecuteCommand/multiple_command_arguments (0.02s)\n"}
{"Time":"2025-10-04T21:54:14.306926136+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/multiple_command_arguments","Elapsed":0.02}
{"Time":"2025-10-04T21:54:14.306949643+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/command_with_quotes"}
{"Time":"2025-10-04T21:54:14.306958903+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/command_with_quotes","Output":"=== RUN   TestRealV4L2CommandExecutor_ExecuteCommand/command_with_quotes\n"}
{"Time":"2025-10-04T21:54:14.312916013+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/command_with_quotes","Output":"    test_helpers_test.go:104: Found accessible camera device: /dev/video0\n"}
{"Time":"2025-10-04T21:54:14.321956094+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/command_with_quotes","Output":"    real_implementations_test.go:319: Command with quotes handled gracefully: Driver Info:\n"}
{"Time":"2025-10-04T21:54:14.322036273+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/command_with_quotes","Output":"        \tDriver name      : uvcvideo\n"}
{"Time":"2025-10-04T21:54:14.322061683+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/command_with_quotes","Output":"        \tCard type        : USB 2.0 Camera: USB 2.0 Camera\n"}
{"Time":"2025-10-04T21:54:14.322076024+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/command_with_quotes","Output":"        \tBus in\n"}
{"Time":"2025-10-04T21:54:14.32209802+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/command_with_quotes","Output":"--- PASS: TestRealV4L2CommandExecutor_ExecuteCommand/command_with_quotes (0.02s)\n"}
{"Time":"2025-10-04T21:54:14.32210952+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/command_with_quotes","Elapsed":0.02}
{"Time":"2025-10-04T21:54:14.322134189+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/command_with_backslashes"}
{"Time":"2025-10-04T21:54:14.322151129+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/command_with_backslashes","Output":"=== RUN   TestRealV4L2CommandExecutor_ExecuteCommand/command_with_backslashes\n"}
{"Time":"2025-10-04T21:54:14.328995917+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/command_with_backslashes","Output":"    test_helpers_test.go:104: Found accessible camera device: /dev/video0\n"}
{"Time":"2025-10-04T21:54:14.336575649+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/command_with_backslashes","Output":"--- PASS: TestRealV4L2CommandExecutor_ExecuteCommand/command_with_backslashes (0.01s)\n"}
{"Time":"2025-10-04T21:54:14.336649311+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand/command_with_backslashes","Elapsed":0.01}
{"Time":"2025-10-04T21:54:14.336681947+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand","Output":"--- PASS: TestRealV4L2CommandExecutor_ExecuteCommand (0.21s)\n"}
{"Time":"2025-10-04T21:54:14.336697431+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealV4L2CommandExecutor_ExecuteCommand","Elapsed":0.21}
{"Time":"2025-10-04T21:54:14.336717275+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceInfo"}
{"Time":"2025-10-04T21:54:14.336730433+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceInfo","Output":"=== RUN   TestRealDeviceInfoParser_ParseDeviceInfo\n"}
{"Time":"2025-10-04T21:54:14.336742455+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceInfo/valid_device_info"}
{"Time":"2025-10-04T21:54:14.336753342+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceInfo/valid_device_info","Output":"=== RUN   TestRealDeviceInfoParser_ParseDeviceInfo/valid_device_info\n"}
{"Time":"2025-10-04T21:54:14.336766248+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceInfo/valid_device_info","Output":"--- PASS: TestRealDeviceInfoParser_ParseDeviceInfo/valid_device_info (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.336778848+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceInfo/valid_device_info","Elapsed":0}
{"Time":"2025-10-04T21:54:14.336791461+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceInfo/empty_output"}
{"Time":"2025-10-04T21:54:14.336808251+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceInfo/empty_output","Output":"=== RUN   TestRealDeviceInfoParser_ParseDeviceInfo/empty_output\n"}
{"Time":"2025-10-04T21:54:14.336823613+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceInfo/empty_output","Output":"--- PASS: TestRealDeviceInfoParser_ParseDeviceInfo/empty_output (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.336840714+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceInfo/empty_output","Elapsed":0}
{"Time":"2025-10-04T21:54:14.336854589+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceInfo/partial_output"}
{"Time":"2025-10-04T21:54:14.33686586+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceInfo/partial_output","Output":"=== RUN   TestRealDeviceInfoParser_ParseDeviceInfo/partial_output\n"}
{"Time":"2025-10-04T21:54:14.336899781+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceInfo/partial_output","Output":"--- PASS: TestRealDeviceInfoParser_ParseDeviceInfo/partial_output (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.336919834+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceInfo/partial_output","Elapsed":0}
{"Time":"2025-10-04T21:54:14.336936548+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceInfo/malformed_output"}
{"Time":"2025-10-04T21:54:14.336948215+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceInfo/malformed_output","Output":"=== RUN   TestRealDeviceInfoParser_ParseDeviceInfo/malformed_output\n"}
{"Time":"2025-10-04T21:54:14.336960426+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceInfo/malformed_output","Output":"--- PASS: TestRealDeviceInfoParser_ParseDeviceInfo/malformed_output (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.336978823+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceInfo/malformed_output","Elapsed":0}
{"Time":"2025-10-04T21:54:14.336997967+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceInfo/capabilities_without_names"}
{"Time":"2025-10-04T21:54:14.337009166+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceInfo/capabilities_without_names","Output":"=== RUN   TestRealDeviceInfoParser_ParseDeviceInfo/capabilities_without_names\n"}
{"Time":"2025-10-04T21:54:14.337023062+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceInfo/capabilities_without_names","Output":"--- PASS: TestRealDeviceInfoParser_ParseDeviceInfo/capabilities_without_names (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.337047908+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceInfo/capabilities_without_names","Elapsed":0}
{"Time":"2025-10-04T21:54:14.337062391+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceInfo","Output":"--- PASS: TestRealDeviceInfoParser_ParseDeviceInfo (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.337073317+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceInfo","Elapsed":0}
{"Time":"2025-10-04T21:54:14.337083524+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats"}
{"Time":"2025-10-04T21:54:14.337092562+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats","Output":"=== RUN   TestRealDeviceInfoParser_ParseDeviceFormats\n"}
{"Time":"2025-10-04T21:54:14.337107543+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/valid_formats_output"}
{"Time":"2025-10-04T21:54:14.337119241+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/valid_formats_output","Output":"=== RUN   TestRealDeviceInfoParser_ParseDeviceFormats/valid_formats_output\n"}
{"Time":"2025-10-04T21:54:14.337146645+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/valid_formats_output","Output":"--- PASS: TestRealDeviceInfoParser_ParseDeviceFormats/valid_formats_output (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.337162497+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/valid_formats_output","Elapsed":0}
{"Time":"2025-10-04T21:54:14.337175434+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/empty_output"}
{"Time":"2025-10-04T21:54:14.337190914+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/empty_output","Output":"=== RUN   TestRealDeviceInfoParser_ParseDeviceFormats/empty_output\n"}
{"Time":"2025-10-04T21:54:14.337225648+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/empty_output","Output":"--- PASS: TestRealDeviceInfoParser_ParseDeviceFormats/empty_output (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.337242713+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/empty_output","Elapsed":0}
{"Time":"2025-10-04T21:54:14.337255411+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/malformed_output"}
{"Time":"2025-10-04T21:54:14.337266096+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/malformed_output","Output":"=== RUN   TestRealDeviceInfoParser_ParseDeviceFormats/malformed_output\n"}
{"Time":"2025-10-04T21:54:14.337284991+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/malformed_output","Output":"--- PASS: TestRealDeviceInfoParser_ParseDeviceFormats/malformed_output (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.337303125+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/malformed_output","Elapsed":0}
{"Time":"2025-10-04T21:54:14.337315993+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/single_format"}
{"Time":"2025-10-04T21:54:14.337326339+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/single_format","Output":"=== RUN   TestRealDeviceInfoParser_ParseDeviceFormats/single_format\n"}
{"Time":"2025-10-04T21:54:14.337342639+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/single_format","Output":"--- PASS: TestRealDeviceInfoParser_ParseDeviceFormats/single_format (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.337360774+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/single_format","Elapsed":0}
{"Time":"2025-10-04T21:54:14.337382025+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_with_multiple_frame_rates"}
{"Time":"2025-10-04T21:54:14.33739449+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_with_multiple_frame_rates","Output":"=== RUN   TestRealDeviceInfoParser_ParseDeviceFormats/format_with_multiple_frame_rates\n"}
{"Time":"2025-10-04T21:54:14.337421246+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_with_multiple_frame_rates","Output":"--- PASS: TestRealDeviceInfoParser_ParseDeviceFormats/format_with_multiple_frame_rates (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.337440961+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_with_multiple_frame_rates","Elapsed":0}
{"Time":"2025-10-04T21:54:14.337458278+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_without_size"}
{"Time":"2025-10-04T21:54:14.337474106+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_without_size","Output":"=== RUN   TestRealDeviceInfoParser_ParseDeviceFormats/format_without_size\n"}
{"Time":"2025-10-04T21:54:14.337488488+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_without_size","Output":"--- PASS: TestRealDeviceInfoParser_ParseDeviceFormats/format_without_size (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.337505295+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_without_size","Elapsed":0}
{"Time":"2025-10-04T21:54:14.337522497+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_with_invalid_size"}
{"Time":"2025-10-04T21:54:14.337533995+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_with_invalid_size","Output":"=== RUN   TestRealDeviceInfoParser_ParseDeviceFormats/format_with_invalid_size\n"}
{"Time":"2025-10-04T21:54:14.337551229+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_with_invalid_size","Output":"--- PASS: TestRealDeviceInfoParser_ParseDeviceFormats/format_with_invalid_size (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.337565721+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_with_invalid_size","Elapsed":0}
{"Time":"2025-10-04T21:54:14.337578341+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_with_malformed_frame_rate"}
{"Time":"2025-10-04T21:54:14.337593128+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_with_malformed_frame_rate","Output":"=== RUN   TestRealDeviceInfoParser_ParseDeviceFormats/format_with_malformed_frame_rate\n"}
{"Time":"2025-10-04T21:54:14.337611124+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_with_malformed_frame_rate","Output":"--- PASS: TestRealDeviceInfoParser_ParseDeviceFormats/format_with_malformed_frame_rate (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.337624655+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_with_malformed_frame_rate","Elapsed":0}
{"Time":"2025-10-04T21:54:14.337640152+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/multiple_formats_mixed_data"}
{"Time":"2025-10-04T21:54:14.337661243+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/multiple_formats_mixed_data","Output":"=== RUN   TestRealDeviceInfoParser_ParseDeviceFormats/multiple_formats_mixed_data\n"}
{"Time":"2025-10-04T21:54:14.337729503+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/multiple_formats_mixed_data","Output":"--- PASS: TestRealDeviceInfoParser_ParseDeviceFormats/multiple_formats_mixed_data (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.33775257+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/multiple_formats_mixed_data","Elapsed":0}
{"Time":"2025-10-04T21:54:14.337771925+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_with_large_dimensions"}
{"Time":"2025-10-04T21:54:14.337784249+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_with_large_dimensions","Output":"=== RUN   TestRealDeviceInfoParser_ParseDeviceFormats/format_with_large_dimensions\n"}
{"Time":"2025-10-04T21:54:14.337801048+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_with_large_dimensions","Output":"--- PASS: TestRealDeviceInfoParser_ParseDeviceFormats/format_with_large_dimensions (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.337819249+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_with_large_dimensions","Elapsed":0}
{"Time":"2025-10-04T21:54:14.337838319+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_with_zero_dimensions"}
{"Time":"2025-10-04T21:54:14.337850014+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_with_zero_dimensions","Output":"=== RUN   TestRealDeviceInfoParser_ParseDeviceFormats/format_with_zero_dimensions\n"}
{"Time":"2025-10-04T21:54:14.337866656+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_with_zero_dimensions","Output":"--- PASS: TestRealDeviceInfoParser_ParseDeviceFormats/format_with_zero_dimensions (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.337883266+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_with_zero_dimensions","Elapsed":0}
{"Time":"2025-10-04T21:54:14.33790138+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_with_negative_frame_rate"}
{"Time":"2025-10-04T21:54:14.337913262+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_with_negative_frame_rate","Output":"=== RUN   TestRealDeviceInfoParser_ParseDeviceFormats/format_with_negative_frame_rate\n"}
{"Time":"2025-10-04T21:54:14.337939534+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_with_negative_frame_rate","Output":"--- PASS: TestRealDeviceInfoParser_ParseDeviceFormats/format_with_negative_frame_rate (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.337968356+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_with_negative_frame_rate","Elapsed":0}
{"Time":"2025-10-04T21:54:14.337989419+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_with_extreme_frame_rate"}
{"Time":"2025-10-04T21:54:14.33800043+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_with_extreme_frame_rate","Output":"=== RUN   TestRealDeviceInfoParser_ParseDeviceFormats/format_with_extreme_frame_rate\n"}
{"Time":"2025-10-04T21:54:14.338017518+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_with_extreme_frame_rate","Output":"--- PASS: TestRealDeviceInfoParser_ParseDeviceFormats/format_with_extreme_frame_rate (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.338034412+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_with_extreme_frame_rate","Elapsed":0}
{"Time":"2025-10-04T21:54:14.338329517+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_with_empty_pixel_format"}
{"Time":"2025-10-04T21:54:14.338365187+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_with_empty_pixel_format","Output":"=== RUN   TestRealDeviceInfoParser_ParseDeviceFormats/format_with_empty_pixel_format\n"}
{"Time":"2025-10-04T21:54:14.338387755+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_with_empty_pixel_format","Output":"--- PASS: TestRealDeviceInfoParser_ParseDeviceFormats/format_with_empty_pixel_format (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.33840168+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_with_empty_pixel_format","Elapsed":0}
{"Time":"2025-10-04T21:54:14.338415819+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_with_long_pixel_format"}
{"Time":"2025-10-04T21:54:14.338426271+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_with_long_pixel_format","Output":"=== RUN   TestRealDeviceInfoParser_ParseDeviceFormats/format_with_long_pixel_format\n"}
{"Time":"2025-10-04T21:54:14.338440239+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_with_long_pixel_format","Output":"--- PASS: TestRealDeviceInfoParser_ParseDeviceFormats/format_with_long_pixel_format (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.338450446+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_with_long_pixel_format","Elapsed":0}
{"Time":"2025-10-04T21:54:14.338462781+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/index_pattern_format"}
{"Time":"2025-10-04T21:54:14.338471734+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/index_pattern_format","Output":"=== RUN   TestRealDeviceInfoParser_ParseDeviceFormats/index_pattern_format\n"}
{"Time":"2025-10-04T21:54:14.338552903+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/index_pattern_format","Output":"--- PASS: TestRealDeviceInfoParser_ParseDeviceFormats/index_pattern_format (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.338578382+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/index_pattern_format","Elapsed":0}
{"Time":"2025-10-04T21:54:14.338599628+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/index_pattern_invalid_size"}
{"Time":"2025-10-04T21:54:14.338612285+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/index_pattern_invalid_size","Output":"=== RUN   TestRealDeviceInfoParser_ParseDeviceFormats/index_pattern_invalid_size\n"}
{"Time":"2025-10-04T21:54:14.338626866+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/index_pattern_invalid_size","Output":"--- PASS: TestRealDeviceInfoParser_ParseDeviceFormats/index_pattern_invalid_size (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.338639523+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/index_pattern_invalid_size","Elapsed":0}
{"Time":"2025-10-04T21:54:14.338659667+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/index_pattern_empty_fps"}
{"Time":"2025-10-04T21:54:14.338671995+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/index_pattern_empty_fps","Output":"=== RUN   TestRealDeviceInfoParser_ParseDeviceFormats/index_pattern_empty_fps\n"}
{"Time":"2025-10-04T21:54:14.338689101+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/index_pattern_empty_fps","Output":"--- PASS: TestRealDeviceInfoParser_ParseDeviceFormats/index_pattern_empty_fps (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.338702776+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/index_pattern_empty_fps","Elapsed":0}
{"Time":"2025-10-04T21:54:14.338719086+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/test_case_pattern_invalid_size"}
{"Time":"2025-10-04T21:54:14.338730707+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/test_case_pattern_invalid_size","Output":"=== RUN   TestRealDeviceInfoParser_ParseDeviceFormats/test_case_pattern_invalid_size\n"}
{"Time":"2025-10-04T21:54:14.338748051+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/test_case_pattern_invalid_size","Output":"--- PASS: TestRealDeviceInfoParser_ParseDeviceFormats/test_case_pattern_invalid_size (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.338766856+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/test_case_pattern_invalid_size","Elapsed":0}
{"Time":"2025-10-04T21:54:14.338784084+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_malformed_interval"}
{"Time":"2025-10-04T21:54:14.338807062+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_malformed_interval","Output":"=== RUN   TestRealDeviceInfoParser_ParseDeviceFormats/format_malformed_interval\n"}
{"Time":"2025-10-04T21:54:14.338828783+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_malformed_interval","Output":"--- PASS: TestRealDeviceInfoParser_ParseDeviceFormats/format_malformed_interval (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.338848738+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_malformed_interval","Elapsed":0}
{"Time":"2025-10-04T21:54:14.338862533+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_interval_no_fps"}
{"Time":"2025-10-04T21:54:14.338873143+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_interval_no_fps","Output":"=== RUN   TestRealDeviceInfoParser_ParseDeviceFormats/format_interval_no_fps\n"}
{"Time":"2025-10-04T21:54:14.338891002+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_interval_no_fps","Output":"--- PASS: TestRealDeviceInfoParser_ParseDeviceFormats/format_interval_no_fps (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.33890806+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_interval_no_fps","Elapsed":0}
{"Time":"2025-10-04T21:54:14.338925485+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_interval_empty_fps"}
{"Time":"2025-10-04T21:54:14.338936966+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_interval_empty_fps","Output":"=== RUN   TestRealDeviceInfoParser_ParseDeviceFormats/format_interval_empty_fps\n"}
{"Time":"2025-10-04T21:54:14.338954592+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_interval_empty_fps","Output":"--- PASS: TestRealDeviceInfoParser_ParseDeviceFormats/format_interval_empty_fps (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.338968627+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_interval_empty_fps","Elapsed":0}
{"Time":"2025-10-04T21:54:14.33898616+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_declaration_no_quotes"}
{"Time":"2025-10-04T21:54:14.339000681+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_declaration_no_quotes","Output":"=== RUN   TestRealDeviceInfoParser_ParseDeviceFormats/format_declaration_no_quotes\n"}
{"Time":"2025-10-04T21:54:14.339019829+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_declaration_no_quotes","Output":"--- PASS: TestRealDeviceInfoParser_ParseDeviceFormats/format_declaration_no_quotes (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.339033935+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_declaration_no_quotes","Elapsed":0}
{"Time":"2025-10-04T21:54:14.339054232+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_existing_dimensions_before_size"}
{"Time":"2025-10-04T21:54:14.339071272+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_existing_dimensions_before_size","Output":"=== RUN   TestRealDeviceInfoParser_ParseDeviceFormats/format_existing_dimensions_before_size\n"}
{"Time":"2025-10-04T21:54:14.339089441+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_existing_dimensions_before_size","Output":"--- PASS: TestRealDeviceInfoParser_ParseDeviceFormats/format_existing_dimensions_before_size (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.339102884+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats/format_existing_dimensions_before_size","Elapsed":0}
{"Time":"2025-10-04T21:54:14.339116945+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats","Output":"--- PASS: TestRealDeviceInfoParser_ParseDeviceFormats (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.339129372+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_ParseDeviceFormats","Elapsed":0}
{"Time":"2025-10-04T21:54:14.339150064+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseCapabilities"}
{"Time":"2025-10-04T21:54:14.339162247+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseCapabilities","Output":"=== RUN   TestRealDeviceInfoParser_parseCapabilities\n"}
{"Time":"2025-10-04T21:54:14.339174772+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseCapabilities","Output":"=== PAUSE TestRealDeviceInfoParser_parseCapabilities\n"}
{"Time":"2025-10-04T21:54:14.339185299+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseCapabilities"}
{"Time":"2025-10-04T21:54:14.339196387+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseSize"}
{"Time":"2025-10-04T21:54:14.339206941+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseSize","Output":"=== RUN   TestRealDeviceInfoParser_parseSize\n"}
{"Time":"2025-10-04T21:54:14.339245304+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseSize","Output":"=== PAUSE TestRealDeviceInfoParser_parseSize\n"}
{"Time":"2025-10-04T21:54:14.339257163+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseSize"}
{"Time":"2025-10-04T21:54:14.339276115+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_extractValue"}
{"Time":"2025-10-04T21:54:14.339288305+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_extractValue","Output":"=== RUN   TestRealDeviceInfoParser_extractValue\n"}
{"Time":"2025-10-04T21:54:14.339310306+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_extractValue","Output":"=== PAUSE TestRealDeviceInfoParser_extractValue\n"}
{"Time":"2025-10-04T21:54:14.339322379+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_extractValue"}
{"Time":"2025-10-04T21:54:14.339334119+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_normalizeFrameRate"}
{"Time":"2025-10-04T21:54:14.339348944+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_normalizeFrameRate","Output":"=== RUN   TestRealDeviceInfoParser_normalizeFrameRate\n"}
{"Time":"2025-10-04T21:54:14.339362258+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_normalizeFrameRate","Output":"=== PAUSE TestRealDeviceInfoParser_normalizeFrameRate\n"}
{"Time":"2025-10-04T21:54:14.339372879+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_normalizeFrameRate"}
{"Time":"2025-10-04T21:54:14.3393838+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraDevice"}
{"Time":"2025-10-04T21:54:14.339394385+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraDevice","Output":"=== RUN   TestCameraDevice\n"}
{"Time":"2025-10-04T21:54:14.339406113+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraDevice","Output":"=== PAUSE TestCameraDevice\n"}
{"Time":"2025-10-04T21:54:14.339415606+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraDevice"}
{"Time":"2025-10-04T21:54:14.339435407+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceStatus"}
{"Time":"2025-10-04T21:54:14.339447628+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceStatus","Output":"=== RUN   TestDeviceStatus\n"}
{"Time":"2025-10-04T21:54:14.339458574+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceStatus","Output":"=== PAUSE TestDeviceStatus\n"}
{"Time":"2025-10-04T21:54:14.339467585+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceStatus"}
{"Time":"2025-10-04T21:54:14.339478038+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Capabilities"}
{"Time":"2025-10-04T21:54:14.33948691+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Capabilities","Output":"=== RUN   TestV4L2Capabilities\n"}
{"Time":"2025-10-04T21:54:14.339496458+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Capabilities","Output":"=== PAUSE TestV4L2Capabilities\n"}
{"Time":"2025-10-04T21:54:14.339504644+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Capabilities"}
{"Time":"2025-10-04T21:54:14.339514491+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Format"}
{"Time":"2025-10-04T21:54:14.339528894+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Format","Output":"=== RUN   TestV4L2Format\n"}
{"Time":"2025-10-04T21:54:14.339542313+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Format","Output":"=== PAUSE TestV4L2Format\n"}
{"Time":"2025-10-04T21:54:14.339561593+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Format"}
{"Time":"2025-10-04T21:54:14.33957493+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCapabilityState"}
{"Time":"2025-10-04T21:54:14.339585493+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCapabilityState","Output":"=== RUN   TestDeviceCapabilityState\n"}
{"Time":"2025-10-04T21:54:14.339597593+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCapabilityState","Output":"=== PAUSE TestDeviceCapabilityState\n"}
{"Time":"2025-10-04T21:54:14.339608264+04:00","Action":"pause","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCapabilityState"}
{"Time":"2025-10-04T21:54:14.339623771+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSmartDeviceEventSourceSelection"}
{"Time":"2025-10-04T21:54:14.339634715+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSmartDeviceEventSourceSelection","Output":"=== CONT  TestSmartDeviceEventSourceSelection\n"}
{"Time":"2025-10-04T21:54:14.339646534+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSmartDeviceEventSourceSelection/factory_creates_instance"}
{"Time":"2025-10-04T21:54:14.339656474+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSmartDeviceEventSourceSelection/factory_creates_instance","Output":"=== RUN   TestSmartDeviceEventSourceSelection/factory_creates_instance\n"}
{"Time":"2025-10-04T21:54:14.339672076+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseSize"}
{"Time":"2025-10-04T21:54:14.339683157+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseSize","Output":"=== CONT  TestRealDeviceInfoParser_parseSize\n"}
{"Time":"2025-10-04T21:54:14.339694748+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseSize/valid_size"}
{"Time":"2025-10-04T21:54:14.33970826+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseSize/valid_size","Output":"=== RUN   TestRealDeviceInfoParser_parseSize/valid_size\n"}
{"Time":"2025-10-04T21:54:14.33971917+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseSize/valid_size","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:14.339732091+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseSize/valid_size","Output":"--- PASS: TestRealDeviceInfoParser_parseSize/valid_size (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.339743621+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseSize/valid_size","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:14.339754294+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseSize/valid_size","Elapsed":0}
{"Time":"2025-10-04T21:54:14.339776225+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseSize/invalid_size_format"}
{"Time":"2025-10-04T21:54:14.339789741+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseSize/invalid_size_format","Output":"=== RUN   TestRealDeviceInfoParser_parseSize/invalid_size_format\n"}
{"Time":"2025-10-04T21:54:14.339805758+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseSize/invalid_size_format","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:14.339820897+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseSize/invalid_size_format","Output":"--- PASS: TestRealDeviceInfoParser_parseSize/invalid_size_format (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.339834272+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseSize/invalid_size_format","Elapsed":0}
{"Time":"2025-10-04T21:54:14.33984584+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSmartDeviceEventSourceSelection/factory_creates_instance","Output":"--- PASS: TestSmartDeviceEventSourceSelection/factory_creates_instance (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.339860117+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSmartDeviceEventSourceSelection/factory_creates_instance","Elapsed":0}
{"Time":"2025-10-04T21:54:14.339872173+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Format"}
{"Time":"2025-10-04T21:54:14.339881696+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Format","Output":"=== CONT  TestV4L2Format\n"}
{"Time":"2025-10-04T21:54:14.339893653+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Format/v4l2_format_creation"}
{"Time":"2025-10-04T21:54:14.339908126+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Format/v4l2_format_creation","Output":"=== RUN   TestV4L2Format/v4l2_format_creation\n"}
{"Time":"2025-10-04T21:54:14.339921378+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSmartDeviceEventSourceSelection/environment_detection_functions"}
{"Time":"2025-10-04T21:54:14.339932279+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSmartDeviceEventSourceSelection/environment_detection_functions","Output":"=== RUN   TestSmartDeviceEventSourceSelection/environment_detection_functions\n"}
{"Time":"2025-10-04T21:54:14.339949647+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Format/v4l2_format_creation","Output":"--- PASS: TestV4L2Format/v4l2_format_creation (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.339961811+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Format/v4l2_format_creation","Elapsed":0}
{"Time":"2025-10-04T21:54:14.339972659+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Format/v4l2_format_json_marshaling"}
{"Time":"2025-10-04T21:54:14.339982272+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Format/v4l2_format_json_marshaling","Output":"=== RUN   TestV4L2Format/v4l2_format_json_marshaling\n"}
{"Time":"2025-10-04T21:54:14.340028497+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Format/v4l2_format_json_marshaling","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:14.340044885+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Format/v4l2_format_json_marshaling","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:14.34005845+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSmartDeviceEventSourceSelection/environment_detection_functions","Output":"    device_event_source_smart_test.go:54: Environment detection results: container=true, udev=false, selected=fsnotify\n"}
{"Time":"2025-10-04T21:54:14.340067998+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSmartDeviceEventSourceSelection/environment_detection_functions","Output":"--- PASS: TestSmartDeviceEventSourceSelection/environment_detection_functions (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.340079544+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSmartDeviceEventSourceSelection/environment_detection_functions","Elapsed":0}
{"Time":"2025-10-04T21:54:14.340086617+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Format/v4l2_format_json_marshaling","Output":"--- PASS: TestV4L2Format/v4l2_format_json_marshaling (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.340094777+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Format/v4l2_format_json_marshaling","Elapsed":0}
{"Time":"2025-10-04T21:54:14.340106131+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Format/v4l2_format_empty_frame_rates"}
{"Time":"2025-10-04T21:54:14.340116151+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Format/v4l2_format_empty_frame_rates","Output":"=== RUN   TestV4L2Format/v4l2_format_empty_frame_rates\n"}
{"Time":"2025-10-04T21:54:14.340127661+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseSize/size_with_extra_characters"}
{"Time":"2025-10-04T21:54:14.34013786+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseSize/size_with_extra_characters","Output":"=== RUN   TestRealDeviceInfoParser_parseSize/size_with_extra_characters\n"}
{"Time":"2025-10-04T21:54:14.340151205+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Format/v4l2_format_empty_frame_rates","Output":"--- PASS: TestV4L2Format/v4l2_format_empty_frame_rates (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.340163038+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Format/v4l2_format_empty_frame_rates","Elapsed":0}
{"Time":"2025-10-04T21:54:14.340183622+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCapabilityState"}
{"Time":"2025-10-04T21:54:14.340194447+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCapabilityState","Output":"=== CONT  TestDeviceCapabilityState\n"}
{"Time":"2025-10-04T21:54:14.340207143+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Format","Output":"--- PASS: TestV4L2Format (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.340276297+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Format","Elapsed":0}
{"Time":"2025-10-04T21:54:14.340290394+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseCapabilities"}
{"Time":"2025-10-04T21:54:14.340301023+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseCapabilities","Output":"=== CONT  TestRealDeviceInfoParser_parseCapabilities\n"}
{"Time":"2025-10-04T21:54:14.340313331+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCapabilityState/device_capability_state_creation"}
{"Time":"2025-10-04T21:54:14.340323226+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCapabilityState/device_capability_state_creation","Output":"=== RUN   TestDeviceCapabilityState/device_capability_state_creation\n"}
{"Time":"2025-10-04T21:54:14.34033463+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseCapabilities/valid_capability_line"}
{"Time":"2025-10-04T21:54:14.34034875+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseCapabilities/valid_capability_line","Output":"=== RUN   TestRealDeviceInfoParser_parseCapabilities/valid_capability_line\n"}
{"Time":"2025-10-04T21:54:14.340363508+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCapabilityState/device_capability_state_creation","Output":"--- PASS: TestDeviceCapabilityState/device_capability_state_creation (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.340376013+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCapabilityState/device_capability_state_creation","Elapsed":0}
{"Time":"2025-10-04T21:54:14.340388168+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSmartDeviceEventSourceSelection/smart_selection_logging"}
{"Time":"2025-10-04T21:54:14.3403986+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSmartDeviceEventSourceSelection/smart_selection_logging","Output":"=== RUN   TestSmartDeviceEventSourceSelection/smart_selection_logging\n"}
{"Time":"2025-10-04T21:54:14.340411739+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseSize/size_with_extra_characters","Output":"--- PASS: TestRealDeviceInfoParser_parseSize/size_with_extra_characters (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.340421263+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseSize/size_with_extra_characters","Elapsed":0}
{"Time":"2025-10-04T21:54:14.34042807+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseSize","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:14.340436375+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseSize","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:14.340452009+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseSize/empty_string"}
{"Time":"2025-10-04T21:54:14.340472388+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseSize/empty_string","Output":"=== RUN   TestRealDeviceInfoParser_parseSize/empty_string\n"}
{"Time":"2025-10-04T21:54:14.340488599+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseSize/empty_string","Output":"--- PASS: TestRealDeviceInfoParser_parseSize/empty_string (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.3405059+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseSize/empty_string","Elapsed":0}
{"Time":"2025-10-04T21:54:14.340520807+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseSize","Output":"--- PASS: TestRealDeviceInfoParser_parseSize (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.340533966+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseSize","Elapsed":0}
{"Time":"2025-10-04T21:54:14.340554117+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCapabilityDetectionResult_Structure"}
{"Time":"2025-10-04T21:54:14.34056985+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCapabilityDetectionResult_Structure","Output":"=== CONT  TestCapabilityDetectionResult_Structure\n"}
{"Time":"2025-10-04T21:54:14.340588645+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCapabilityDetectionResult_Structure","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:14.340601159+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCapabilityDetectionResult_Structure","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:14.340614831+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCapabilityDetectionResult_Structure","Output":"--- PASS: TestCapabilityDetectionResult_Structure (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.340626738+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCapabilityDetectionResult_Structure","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:14.340645416+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCapabilityDetectionResult_Structure","Elapsed":0}
{"Time":"2025-10-04T21:54:14.3406588+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseCapabilities/valid_capability_line","Output":"--- PASS: TestRealDeviceInfoParser_parseCapabilities/valid_capability_line (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.340671547+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseCapabilities/valid_capability_line","Elapsed":0}
{"Time":"2025-10-04T21:54:14.340683141+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseCapabilities","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:14.340695493+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseCapabilities/empty_line"}
{"Time":"2025-10-04T21:54:14.340714297+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseCapabilities/empty_line","Output":"=== RUN   TestRealDeviceInfoParser_parseCapabilities/empty_line\n"}
{"Time":"2025-10-04T21:54:14.340730518+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseCapabilities/empty_line","Output":"--- PASS: TestRealDeviceInfoParser_parseCapabilities/empty_line (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.340751464+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseCapabilities/empty_line","Elapsed":0}
{"Time":"2025-10-04T21:54:14.340764619+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseCapabilities/line_without_colon"}
{"Time":"2025-10-04T21:54:14.340775518+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseCapabilities/line_without_colon","Output":"=== RUN   TestRealDeviceInfoParser_parseCapabilities/line_without_colon\n"}
{"Time":"2025-10-04T21:54:14.340788999+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseCapabilities/line_without_colon","Output":"--- PASS: TestRealDeviceInfoParser_parseCapabilities/line_without_colon (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.340801584+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseCapabilities/line_without_colon","Elapsed":0}
{"Time":"2025-10-04T21:54:14.340813514+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseCapabilities","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:14.340825009+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseCapabilities/line_with_only_hex"}
{"Time":"2025-10-04T21:54:14.340834981+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseCapabilities/line_with_only_hex","Output":"=== RUN   TestRealDeviceInfoParser_parseCapabilities/line_with_only_hex\n"}
{"Time":"2025-10-04T21:54:14.340847879+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSmartDeviceEventSourceSelection/smart_selection_logging","Output":"--- PASS: TestSmartDeviceEventSourceSelection/smart_selection_logging (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.340860669+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSmartDeviceEventSourceSelection/smart_selection_logging","Elapsed":0}
{"Time":"2025-10-04T21:54:14.340873511+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSmartDeviceEventSourceSelection/multiple_instances_isolation"}
{"Time":"2025-10-04T21:54:14.340885924+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSmartDeviceEventSourceSelection/multiple_instances_isolation","Output":"=== RUN   TestSmartDeviceEventSourceSelection/multiple_instances_isolation\n"}
{"Time":"2025-10-04T21:54:14.340904492+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMonitorStats_Structure"}
{"Time":"2025-10-04T21:54:14.340916639+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMonitorStats_Structure","Output":"=== CONT  TestMonitorStats_Structure\n"}
{"Time":"2025-10-04T21:54:14.340939176+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMonitorStats_Structure","Output":"--- PASS: TestMonitorStats_Structure (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.340953861+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestMonitorStats_Structure","Elapsed":0}
{"Time":"2025-10-04T21:54:14.340969765+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraEventData_Structure"}
{"Time":"2025-10-04T21:54:14.340980398+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraEventData_Structure","Output":"=== CONT  TestCameraEventData_Structure\n"}
{"Time":"2025-10-04T21:54:14.340991375+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraEventData_Structure","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:14.341002969+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraEventData_Structure","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:14.341014318+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraEventData_Structure","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:14.341025831+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraEventData_Structure","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:14.341036908+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraEventData_Structure","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:14.341052615+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraEventData_Structure","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Created fresh device event source instance with smart selection\"\n"}
{"Time":"2025-10-04T21:54:14.341067762+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraEventData_Structure","Output":"--- PASS: TestCameraEventData_Structure (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.341088907+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraEventData_Structure","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:14.341104283+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraEventData_Structure","Elapsed":0}
{"Time":"2025-10-04T21:54:14.341116434+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseCapabilities/line_with_only_hex","Output":"--- PASS: TestRealDeviceInfoParser_parseCapabilities/line_with_only_hex (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.34113285+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseCapabilities/line_with_only_hex","Elapsed":0}
{"Time":"2025-10-04T21:54:14.341145584+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseCapabilities","Output":"--- PASS: TestRealDeviceInfoParser_parseCapabilities (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.341162865+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_parseCapabilities","Elapsed":0}
{"Time":"2025-10-04T21:54:14.341173142+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Interface"}
{"Time":"2025-10-04T21:54:14.341181748+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Interface","Output":"=== CONT  TestDeviceEventSource_Interface\n"}
{"Time":"2025-10-04T21:54:14.34119199+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Interface","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:14.341203828+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Interface/fsnotify_interface_compliance"}
{"Time":"2025-10-04T21:54:14.341226773+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Interface/fsnotify_interface_compliance","Output":"=== RUN   TestDeviceEventSource_Interface/fsnotify_interface_compliance\n"}
{"Time":"2025-10-04T21:54:14.341243148+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Interface/fsnotify_interface_compliance","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:14.341250286+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Interface/fsnotify_interface_compliance","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:14.341256546+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Interface/fsnotify_interface_compliance","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Device event source Start() called\"\n"}
{"Time":"2025-10-04T21:54:14.341267467+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Interface/fsnotify_interface_compliance","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:14.341276413+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Interface/fsnotify_interface_compliance","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Started fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:14.3412877+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Interface/fsnotify_interface_compliance","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:14.341298471+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Interface/fsnotify_interface_compliance","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:14.341309078+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Interface/fsnotify_interface_compliance","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:14.341321838+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraEvent_Constants"}
{"Time":"2025-10-04T21:54:14.341344762+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraEvent_Constants","Output":"=== CONT  TestCameraEvent_Constants\n"}
{"Time":"2025-10-04T21:54:14.341361674+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraEvent_Constants","Output":"--- PASS: TestCameraEvent_Constants (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.341374262+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraEvent_Constants","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:14.341385808+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraEvent_Constants","Elapsed":0}
{"Time":"2025-10-04T21:54:14.341396699+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventTypes"}
{"Time":"2025-10-04T21:54:14.341406531+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventTypes","Output":"=== CONT  TestDeviceEventTypes\n"}
{"Time":"2025-10-04T21:54:14.341425535+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventTypes/event_type_constants"}
{"Time":"2025-10-04T21:54:14.34143703+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventTypes/event_type_constants","Output":"=== RUN   TestDeviceEventTypes/event_type_constants\n"}
{"Time":"2025-10-04T21:54:14.341448021+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventTypes/event_type_constants","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Stopped fsnotify device event source\"\n"}
{"Time":"2025-10-04T21:54:14.341460368+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventTypes/event_type_constants/add_event"}
{"Time":"2025-10-04T21:54:14.341475398+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventTypes/event_type_constants/add_event","Output":"=== RUN   TestDeviceEventTypes/event_type_constants/add_event\n"}
{"Time":"2025-10-04T21:54:14.341490507+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Interface/fsnotify_interface_compliance","Output":"--- PASS: TestDeviceEventSource_Interface/fsnotify_interface_compliance (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.341504502+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Interface/fsnotify_interface_compliance","Elapsed":0}
{"Time":"2025-10-04T21:54:14.34151634+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventTypes/event_type_constants/add_event","Output":"--- PASS: TestDeviceEventTypes/event_type_constants/add_event (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.341533281+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventTypes/event_type_constants/add_event","Elapsed":0}
{"Time":"2025-10-04T21:54:14.341548068+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Interface/udev_interface_compliance"}
{"Time":"2025-10-04T21:54:14.341558807+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Interface/udev_interface_compliance","Output":"=== RUN   TestDeviceEventSource_Interface/udev_interface_compliance\n"}
{"Time":"2025-10-04T21:54:14.341579399+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventTypes/event_type_constants/remove_event"}
{"Time":"2025-10-04T21:54:14.341597075+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventTypes/event_type_constants/remove_event","Output":"=== RUN   TestDeviceEventTypes/event_type_constants/remove_event\n"}
{"Time":"2025-10-04T21:54:14.341609128+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventTypes/event_type_constants/remove_event","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Started udev device event source\"\n"}
{"Time":"2025-10-04T21:54:14.341622963+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventTypes/event_type_constants/remove_event","Output":"--- PASS: TestDeviceEventTypes/event_type_constants/remove_event (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.341641673+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventTypes/event_type_constants/remove_event","Elapsed":0}
{"Time":"2025-10-04T21:54:14.341655452+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventTypes/event_type_constants","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Event loop stopped\"\n"}
{"Time":"2025-10-04T21:54:14.341668232+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventTypes/event_type_constants/change_event"}
{"Time":"2025-10-04T21:54:14.341678896+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventTypes/event_type_constants/change_event","Output":"=== RUN   TestDeviceEventTypes/event_type_constants/change_event\n"}
{"Time":"2025-10-04T21:54:14.341694056+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventTypes/event_type_constants/change_event","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Stopped udev device event source\"\n"}
{"Time":"2025-10-04T21:54:14.341708773+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventTypes/event_type_constants/change_event","Output":"--- PASS: TestDeviceEventTypes/event_type_constants/change_event (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.341721325+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventTypes/event_type_constants/change_event","Elapsed":0}
{"Time":"2025-10-04T21:54:14.341734696+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventTypes/event_type_constants","Output":"--- PASS: TestDeviceEventTypes/event_type_constants (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.341751267+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventTypes/event_type_constants","Elapsed":0}
{"Time":"2025-10-04T21:54:14.34176453+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCapabilityState/device_capability_state_json_marshaling"}
{"Time":"2025-10-04T21:54:14.341774337+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCapabilityState/device_capability_state_json_marshaling","Output":"=== RUN   TestDeviceCapabilityState/device_capability_state_json_marshaling\n"}
{"Time":"2025-10-04T21:54:14.341792283+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCapabilityState/device_capability_state_json_marshaling","Output":"--- PASS: TestDeviceCapabilityState/device_capability_state_json_marshaling (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.341819546+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCapabilityState/device_capability_state_json_marshaling","Elapsed":0}
{"Time":"2025-10-04T21:54:14.341834838+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCapabilityState/device_capability_state_without_result"}
{"Time":"2025-10-04T21:54:14.341844742+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCapabilityState/device_capability_state_without_result","Output":"=== RUN   TestDeviceCapabilityState/device_capability_state_without_result\n"}
{"Time":"2025-10-04T21:54:14.341862352+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSmartDeviceEventSourceSelection/multiple_instances_isolation","Output":"--- PASS: TestSmartDeviceEventSourceSelection/multiple_instances_isolation (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.341876712+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSmartDeviceEventSourceSelection/multiple_instances_isolation","Elapsed":0}
{"Time":"2025-10-04T21:54:14.341890641+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSmartDeviceEventSourceSelection","Output":"--- PASS: TestSmartDeviceEventSourceSelection (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.341903773+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestSmartDeviceEventSourceSelection","Elapsed":0}
{"Time":"2025-10-04T21:54:14.341921663+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Interface/udev_interface_compliance","Output":"--- PASS: TestDeviceEventSource_Interface/udev_interface_compliance (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.341934504+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Interface/udev_interface_compliance","Elapsed":0}
{"Time":"2025-10-04T21:54:14.34194393+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEnvironmentDetectionAccuracy"}
{"Time":"2025-10-04T21:54:14.341953061+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEnvironmentDetectionAccuracy","Output":"=== CONT  TestEnvironmentDetectionAccuracy\n"}
{"Time":"2025-10-04T21:54:14.341968283+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEnvironmentDetectionAccuracy/container_detection"}
{"Time":"2025-10-04T21:54:14.34197921+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEnvironmentDetectionAccuracy/container_detection","Output":"=== RUN   TestEnvironmentDetectionAccuracy/container_detection\n"}
{"Time":"2025-10-04T21:54:14.341989619+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEnvironmentDetectionAccuracy/container_detection","Output":"    device_event_source_smart_test.go:108: Container detection result: true\n"}
{"Time":"2025-10-04T21:54:14.342002265+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEnvironmentDetectionAccuracy/container_detection","Output":"--- PASS: TestEnvironmentDetectionAccuracy/container_detection (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.342022358+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEnvironmentDetectionAccuracy/container_detection","Elapsed":0}
{"Time":"2025-10-04T21:54:14.342041327+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEnvironmentDetectionAccuracy/udev_detection"}
{"Time":"2025-10-04T21:54:14.342053208+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEnvironmentDetectionAccuracy/udev_detection","Output":"=== RUN   TestEnvironmentDetectionAccuracy/udev_detection\n"}
{"Time":"2025-10-04T21:54:14.342063708+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEnvironmentDetectionAccuracy/udev_detection","Output":"    device_event_source_smart_test.go:117: Udev detection result: false\n"}
{"Time":"2025-10-04T21:54:14.342076517+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEnvironmentDetectionAccuracy/udev_detection","Output":"--- PASS: TestEnvironmentDetectionAccuracy/udev_detection (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.342088052+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEnvironmentDetectionAccuracy/udev_detection","Elapsed":0}
{"Time":"2025-10-04T21:54:14.34210012+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEnvironmentDetectionAccuracy/selection_logic"}
{"Time":"2025-10-04T21:54:14.34211455+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEnvironmentDetectionAccuracy/selection_logic","Output":"=== RUN   TestEnvironmentDetectionAccuracy/selection_logic\n"}
{"Time":"2025-10-04T21:54:14.342126349+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEnvironmentDetectionAccuracy/selection_logic","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Detecting optimal device event source\"\n"}
{"Time":"2025-10-04T21:54:14.342137709+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEnvironmentDetectionAccuracy/selection_logic","Output":"time=\"2025-10-04 21:54:14\" level=info msg=\"Container environment detected - using fsnotify for device discovery\"\n"}
{"Time":"2025-10-04T21:54:14.342148926+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEnvironmentDetectionAccuracy/selection_logic","Output":"    device_event_source_smart_test.go:136: Selection logic: container=true, udev=false, selected=fsnotify\n"}
{"Time":"2025-10-04T21:54:14.342162124+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEnvironmentDetectionAccuracy/selection_logic","Output":"--- PASS: TestEnvironmentDetectionAccuracy/selection_logic (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.342174787+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEnvironmentDetectionAccuracy/selection_logic","Elapsed":0}
{"Time":"2025-10-04T21:54:14.342187157+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEnvironmentDetectionAccuracy","Output":"--- PASS: TestEnvironmentDetectionAccuracy (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.342205421+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestEnvironmentDetectionAccuracy","Elapsed":0}
{"Time":"2025-10-04T21:54:14.342244955+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCapabilityState/device_capability_state_without_result","Output":"--- PASS: TestDeviceCapabilityState/device_capability_state_without_result (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.34226834+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCapabilityState/device_capability_state_without_result","Elapsed":0}
{"Time":"2025-10-04T21:54:14.342283685+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCapabilityState","Output":"--- PASS: TestDeviceCapabilityState (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.342296903+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceCapabilityState","Elapsed":0}
{"Time":"2025-10-04T21:54:14.342312068+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceStatus"}
{"Time":"2025-10-04T21:54:14.342323013+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceStatus","Output":"=== CONT  TestDeviceStatus\n"}
{"Time":"2025-10-04T21:54:14.342334697+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceStatus/device_status_constants"}
{"Time":"2025-10-04T21:54:14.342345139+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceStatus/device_status_constants","Output":"=== RUN   TestDeviceStatus/device_status_constants\n"}
{"Time":"2025-10-04T21:54:14.342357794+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceStatus/device_status_constants","Output":"--- PASS: TestDeviceStatus/device_status_constants (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.34236948+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceStatus/device_status_constants","Elapsed":0}
{"Time":"2025-10-04T21:54:14.342381045+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceStatus/device_status_json_marshaling"}
{"Time":"2025-10-04T21:54:14.342394991+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceStatus/device_status_json_marshaling","Output":"=== RUN   TestDeviceStatus/device_status_json_marshaling\n"}
{"Time":"2025-10-04T21:54:14.342408736+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceStatus/device_status_json_marshaling","Output":"--- PASS: TestDeviceStatus/device_status_json_marshaling (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.342426734+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceStatus/device_status_json_marshaling","Elapsed":0}
{"Time":"2025-10-04T21:54:14.342442463+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceStatus","Output":"--- PASS: TestDeviceStatus (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.342455268+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceStatus","Elapsed":0}
{"Time":"2025-10-04T21:54:14.342470522+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraDevice"}
{"Time":"2025-10-04T21:54:14.342481525+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraDevice","Output":"=== CONT  TestCameraDevice\n"}
{"Time":"2025-10-04T21:54:14.342493113+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraDevice/camera_device_creation"}
{"Time":"2025-10-04T21:54:14.34250347+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraDevice/camera_device_creation","Output":"=== RUN   TestCameraDevice/camera_device_creation\n"}
{"Time":"2025-10-04T21:54:14.342526136+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraDevice/camera_device_creation","Output":"--- PASS: TestCameraDevice/camera_device_creation (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.342548933+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraDevice/camera_device_creation","Elapsed":0}
{"Time":"2025-10-04T21:54:14.342564474+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraDevice/camera_device_json_marshaling"}
{"Time":"2025-10-04T21:54:14.342575394+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraDevice/camera_device_json_marshaling","Output":"=== RUN   TestCameraDevice/camera_device_json_marshaling\n"}
{"Time":"2025-10-04T21:54:14.34258914+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraDevice/camera_device_json_marshaling","Output":"--- PASS: TestCameraDevice/camera_device_json_marshaling (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.342606075+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraDevice/camera_device_json_marshaling","Elapsed":0}
{"Time":"2025-10-04T21:54:14.342617144+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraDevice/camera_device_with_error"}
{"Time":"2025-10-04T21:54:14.342625481+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraDevice/camera_device_with_error","Output":"=== RUN   TestCameraDevice/camera_device_with_error\n"}
{"Time":"2025-10-04T21:54:14.342634859+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Capabilities"}
{"Time":"2025-10-04T21:54:14.342643923+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Capabilities","Output":"=== CONT  TestV4L2Capabilities\n"}
{"Time":"2025-10-04T21:54:14.34265481+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Capabilities/v4l2_capabilities_creation"}
{"Time":"2025-10-04T21:54:14.342669081+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Capabilities/v4l2_capabilities_creation","Output":"=== RUN   TestV4L2Capabilities/v4l2_capabilities_creation\n"}
{"Time":"2025-10-04T21:54:14.34268409+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Interface","Output":"--- PASS: TestDeviceEventSource_Interface (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.342696819+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventSource_Interface","Elapsed":0}
{"Time":"2025-10-04T21:54:14.342707906+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_normalizeFrameRate"}
{"Time":"2025-10-04T21:54:14.342718255+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_normalizeFrameRate","Output":"=== CONT  TestRealDeviceInfoParser_normalizeFrameRate\n"}
{"Time":"2025-10-04T21:54:14.342735911+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraDevice/camera_device_with_error","Output":"--- PASS: TestCameraDevice/camera_device_with_error (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.342749056+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraDevice/camera_device_with_error","Elapsed":0}
{"Time":"2025-10-04T21:54:14.342771049+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_normalizeFrameRate/valid_frame_rate"}
{"Time":"2025-10-04T21:54:14.342788159+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_normalizeFrameRate/valid_frame_rate","Output":"=== RUN   TestRealDeviceInfoParser_normalizeFrameRate/valid_frame_rate\n"}
{"Time":"2025-10-04T21:54:14.342805069+04:00","Action":"cont","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_extractValue"}
{"Time":"2025-10-04T21:54:14.342815518+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_extractValue","Output":"=== CONT  TestRealDeviceInfoParser_extractValue\n"}
{"Time":"2025-10-04T21:54:14.34282615+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_extractValue/valid_key_value"}
{"Time":"2025-10-04T21:54:14.342835565+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_extractValue/valid_key_value","Output":"=== RUN   TestRealDeviceInfoParser_extractValue/valid_key_value\n"}
{"Time":"2025-10-04T21:54:14.342847124+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_normalizeFrameRate/valid_frame_rate","Output":"--- PASS: TestRealDeviceInfoParser_normalizeFrameRate/valid_frame_rate (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.342862424+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_normalizeFrameRate/valid_frame_rate","Elapsed":0}
{"Time":"2025-10-04T21:54:14.342873684+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventTypes/device_event_creation"}
{"Time":"2025-10-04T21:54:14.342882224+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventTypes/device_event_creation","Output":"=== RUN   TestDeviceEventTypes/device_event_creation\n"}
{"Time":"2025-10-04T21:54:14.342892905+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_extractValue/valid_key_value","Output":"--- PASS: TestRealDeviceInfoParser_extractValue/valid_key_value (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.342902267+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_extractValue/valid_key_value","Elapsed":0}
{"Time":"2025-10-04T21:54:14.342911726+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Capabilities/v4l2_capabilities_creation","Output":"--- PASS: TestV4L2Capabilities/v4l2_capabilities_creation (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.342924732+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Capabilities/v4l2_capabilities_creation","Elapsed":0}
{"Time":"2025-10-04T21:54:14.342939612+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraDevice","Output":"--- PASS: TestCameraDevice (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.34295125+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestCameraDevice","Elapsed":0}
{"Time":"2025-10-04T21:54:14.342963121+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventTypes/device_event_creation","Output":"--- PASS: TestDeviceEventTypes/device_event_creation (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.342982058+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventTypes/device_event_creation","Elapsed":0}
{"Time":"2025-10-04T21:54:14.342999467+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventTypes/device_event_json_marshaling"}
{"Time":"2025-10-04T21:54:14.343009953+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventTypes/device_event_json_marshaling","Output":"=== RUN   TestDeviceEventTypes/device_event_json_marshaling\n"}
{"Time":"2025-10-04T21:54:14.343021659+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Capabilities/v4l2_capabilities_json_marshaling"}
{"Time":"2025-10-04T21:54:14.343030411+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Capabilities/v4l2_capabilities_json_marshaling","Output":"=== RUN   TestV4L2Capabilities/v4l2_capabilities_json_marshaling\n"}
{"Time":"2025-10-04T21:54:14.343042167+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Capabilities/v4l2_capabilities_json_marshaling","Output":"--- PASS: TestV4L2Capabilities/v4l2_capabilities_json_marshaling (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.34305934+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Capabilities/v4l2_capabilities_json_marshaling","Elapsed":0}
{"Time":"2025-10-04T21:54:14.343071723+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventTypes/device_event_json_marshaling","Output":"--- PASS: TestDeviceEventTypes/device_event_json_marshaling (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.343084072+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventTypes/device_event_json_marshaling","Elapsed":0}
{"Time":"2025-10-04T21:54:14.343096539+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventTypes","Output":"--- PASS: TestDeviceEventTypes (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.343115678+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestDeviceEventTypes","Elapsed":0}
{"Time":"2025-10-04T21:54:14.343126045+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_normalizeFrameRate/frame_rate_with_extra_text"}
{"Time":"2025-10-04T21:54:14.343134752+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_normalizeFrameRate/frame_rate_with_extra_text","Output":"=== RUN   TestRealDeviceInfoParser_normalizeFrameRate/frame_rate_with_extra_text\n"}
{"Time":"2025-10-04T21:54:14.34314623+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_normalizeFrameRate/frame_rate_with_extra_text","Output":"--- PASS: TestRealDeviceInfoParser_normalizeFrameRate/frame_rate_with_extra_text (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.34315657+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_normalizeFrameRate/frame_rate_with_extra_text","Elapsed":0}
{"Time":"2025-10-04T21:54:14.343166509+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Capabilities/v4l2_capabilities_empty_fields"}
{"Time":"2025-10-04T21:54:14.343187337+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Capabilities/v4l2_capabilities_empty_fields","Output":"=== RUN   TestV4L2Capabilities/v4l2_capabilities_empty_fields\n"}
{"Time":"2025-10-04T21:54:14.343206997+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Capabilities/v4l2_capabilities_empty_fields","Output":"--- PASS: TestV4L2Capabilities/v4l2_capabilities_empty_fields (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.343234092+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Capabilities/v4l2_capabilities_empty_fields","Elapsed":0}
{"Time":"2025-10-04T21:54:14.343247279+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Capabilities","Output":"--- PASS: TestV4L2Capabilities (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.343268717+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestV4L2Capabilities","Elapsed":0}
{"Time":"2025-10-04T21:54:14.3432802+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_extractValue/line_without_colon"}
{"Time":"2025-10-04T21:54:14.343288868+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_extractValue/line_without_colon","Output":"=== RUN   TestRealDeviceInfoParser_extractValue/line_without_colon\n"}
{"Time":"2025-10-04T21:54:14.34330007+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_extractValue/line_without_colon","Output":"--- PASS: TestRealDeviceInfoParser_extractValue/line_without_colon (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.343310728+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_extractValue/line_without_colon","Elapsed":0}
{"Time":"2025-10-04T21:54:14.343326394+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_extractValue/empty_line"}
{"Time":"2025-10-04T21:54:14.343336997+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_extractValue/empty_line","Output":"=== RUN   TestRealDeviceInfoParser_extractValue/empty_line\n"}
{"Time":"2025-10-04T21:54:14.343348227+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_extractValue/empty_line","Output":"--- PASS: TestRealDeviceInfoParser_extractValue/empty_line (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.343359563+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_extractValue/empty_line","Elapsed":0}
{"Time":"2025-10-04T21:54:14.343370808+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_extractValue/value_with_spaces"}
{"Time":"2025-10-04T21:54:14.34338036+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_extractValue/value_with_spaces","Output":"=== RUN   TestRealDeviceInfoParser_extractValue/value_with_spaces\n"}
{"Time":"2025-10-04T21:54:14.343397865+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_extractValue/value_with_spaces","Output":"--- PASS: TestRealDeviceInfoParser_extractValue/value_with_spaces (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.343410033+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_extractValue/value_with_spaces","Elapsed":0}
{"Time":"2025-10-04T21:54:14.343431489+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_extractValue","Output":"--- PASS: TestRealDeviceInfoParser_extractValue (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.343444409+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_extractValue","Elapsed":0}
{"Time":"2025-10-04T21:54:14.34345971+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_normalizeFrameRate/invalid_frame_rate"}
{"Time":"2025-10-04T21:54:14.343469851+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_normalizeFrameRate/invalid_frame_rate","Output":"=== RUN   TestRealDeviceInfoParser_normalizeFrameRate/invalid_frame_rate\n"}
{"Time":"2025-10-04T21:54:14.343484481+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_normalizeFrameRate/invalid_frame_rate","Output":"--- PASS: TestRealDeviceInfoParser_normalizeFrameRate/invalid_frame_rate (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.343496132+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_normalizeFrameRate/invalid_frame_rate","Elapsed":0}
{"Time":"2025-10-04T21:54:14.343510793+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_normalizeFrameRate/empty_string"}
{"Time":"2025-10-04T21:54:14.343520186+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_normalizeFrameRate/empty_string","Output":"=== RUN   TestRealDeviceInfoParser_normalizeFrameRate/empty_string\n"}
{"Time":"2025-10-04T21:54:14.343531293+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_normalizeFrameRate/empty_string","Output":"--- PASS: TestRealDeviceInfoParser_normalizeFrameRate/empty_string (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.343541537+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_normalizeFrameRate/empty_string","Elapsed":0}
{"Time":"2025-10-04T21:54:14.343551445+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_normalizeFrameRate/out_of_range_frame_rate"}
{"Time":"2025-10-04T21:54:14.343560304+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_normalizeFrameRate/out_of_range_frame_rate","Output":"=== RUN   TestRealDeviceInfoParser_normalizeFrameRate/out_of_range_frame_rate\n"}
{"Time":"2025-10-04T21:54:14.343574673+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_normalizeFrameRate/out_of_range_frame_rate","Output":"--- PASS: TestRealDeviceInfoParser_normalizeFrameRate/out_of_range_frame_rate (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.343585583+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_normalizeFrameRate/out_of_range_frame_rate","Elapsed":0}
{"Time":"2025-10-04T21:54:14.343595598+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_normalizeFrameRate/minimum_valid_rate"}
{"Time":"2025-10-04T21:54:14.343604029+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_normalizeFrameRate/minimum_valid_rate","Output":"=== RUN   TestRealDeviceInfoParser_normalizeFrameRate/minimum_valid_rate\n"}
{"Time":"2025-10-04T21:54:14.343623133+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_normalizeFrameRate/minimum_valid_rate","Output":"--- PASS: TestRealDeviceInfoParser_normalizeFrameRate/minimum_valid_rate (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.343637392+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_normalizeFrameRate/minimum_valid_rate","Elapsed":0}
{"Time":"2025-10-04T21:54:14.343648225+04:00","Action":"run","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_normalizeFrameRate/maximum_valid_rate"}
{"Time":"2025-10-04T21:54:14.343656791+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_normalizeFrameRate/maximum_valid_rate","Output":"=== RUN   TestRealDeviceInfoParser_normalizeFrameRate/maximum_valid_rate\n"}
{"Time":"2025-10-04T21:54:14.343667899+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_normalizeFrameRate/maximum_valid_rate","Output":"--- PASS: TestRealDeviceInfoParser_normalizeFrameRate/maximum_valid_rate (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.343677968+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_normalizeFrameRate/maximum_valid_rate","Elapsed":0}
{"Time":"2025-10-04T21:54:14.343688572+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_normalizeFrameRate","Output":"--- PASS: TestRealDeviceInfoParser_normalizeFrameRate (0.00s)\n"}
{"Time":"2025-10-04T21:54:14.343701272+04:00","Action":"pass","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Test":"TestRealDeviceInfoParser_normalizeFrameRate","Elapsed":0}
{"Time":"2025-10-04T21:54:14.343710916+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Output":"FAIL\n"}
{"Time":"2025-10-04T21:54:14.349018322+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Output":"coverage: 7.3% of statements in ./...\n"}
{"Time":"2025-10-04T21:54:14.377076965+04:00","Action":"output","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Output":"FAIL\tgithub.com/camerarecorder/mediamtx-camera-service-go/internal/camera\t21.036s\n"}
{"Time":"2025-10-04T21:54:14.3771351+04:00","Action":"fail","Package":"github.com/camerarecorder/mediamtx-camera-service-go/internal/camera","Elapsed":21.04}
