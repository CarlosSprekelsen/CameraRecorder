name: Duplication Detection

# Automated duplication detection for MediaMTX Camera Service Client
# Prevents violations of "SINGLE mock implementation per API concern" rule

on:
  push:
    branches: [ main, develop, feature/* ]
    paths:
      - 'client/tests/**'
      - 'client/scripts/detect-duplications.js'
      - '.github/workflows/duplication-detection.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'client/tests/**'
      - 'client/scripts/detect-duplications.js'
      - '.github/workflows/duplication-detection.yml'
  workflow_dispatch:

env:
  NODE_VERSION: '20.19.0'
  NPM_VERSION: '10.8.0'

jobs:
  detect-duplications:
    name: 🔍 Detect Mock Duplications
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.19.0]
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for better analysis
    
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'client/package-lock.json'
    
    - name: 📦 Install dependencies
      working-directory: ./client
      run: |
        npm ci --prefer-offline --no-audit
    
    - name: 🔍 Run duplication detection
      working-directory: ./client
      run: |
        echo "🚀 Starting duplication detection..."
        node scripts/detect-duplications.js
    
    - name: 📊 Upload duplication report
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: duplication-report
        path: |
          client/coverage/
          client/test-results/
        retention-days: 30
    
    - name: 💬 Comment on PR (if failure)
      if: failure() && github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          let comment = `## 🚨 Duplication Detection Failed
          
          The duplication detection found violations of the "SINGLE mock implementation per API concern" rule.
          
          ### Required Actions:
          1. **Remove duplicate service mocks** from individual test files
          2. **Use centralized mocks** from \`tests/utils/mocks.ts\`
          3. **Import MockDataFactory methods** instead of creating custom mocks
          4. **Run locally**: \`npm run test:duplication-check\`
          
          ### Key Rules:
          - ❌ Don't create \`const mockWebSocketService = { sendRPC: jest.fn() }\`
          - ✅ Do use \`import { MockDataFactory } from '../utils/mocks'\`
          - ❌ Don't duplicate \`jest.fn()\` implementations
          - ✅ Do consolidate all mocks in centralized files
          
          Please fix these issues before merging.`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
    
    - name: ✅ Success notification
      if: success()
      run: |
        echo "✅ Duplication detection passed!"
        echo "All mocks are properly centralized."

  test-consistency:
    name: 🧪 Test Mock Consistency
    runs-on: ubuntu-latest
    needs: detect-duplications
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'client/package-lock.json'
    
    - name: 📦 Install dependencies
      working-directory: ./client
      run: npm ci --prefer-offline --no-audit
    
    - name: 🧪 Run unit tests
      working-directory: ./client
      run: npm run test:unit
    
    - name: 📊 Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          client/coverage/
          client/test-results/
        retention-days: 30

  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'client/package-lock.json'
    
    - name: 📦 Install dependencies
      working-directory: ./client
      run: npm ci --prefer-offline --no-audit
    
    - name: 🔒 Run security audit
      working-directory: ./client
      run: npm audit --audit-level moderate
    
    - name: 🔍 Check for hardcoded secrets
      run: |
        echo "🔍 Scanning for potential secrets..."
        if grep -r -i "password\|secret\|key\|token" client/tests/ --exclude-dir=node_modules | grep -v "mock\|test\|example"; then
          echo "⚠️  Potential secrets found in test files"
          exit 1
        fi
        echo "✅ No hardcoded secrets found"

  notify-on-failure:
    name: 📢 Notify on Failure
    runs-on: ubuntu-latest
    needs: [detect-duplications, test-consistency]
    if: failure()
    
    steps:
    - name: 📧 Send notification
      run: |
        echo "🚨 CI/CD Duplication Detection Failed"
        echo "Please check the workflow logs for details"
        echo "Repository: ${{ github.repository }}"
        echo "Branch: ${{ github.ref }}"
        echo "Commit: ${{ github.sha }}"
