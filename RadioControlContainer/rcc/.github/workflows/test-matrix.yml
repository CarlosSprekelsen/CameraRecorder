name: Test Matrix (3 Teams Parallel)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  unit:
    name: Unit Tests (Team 1)
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
            
      - name: Run unit tests
        run: make test-unit-team
        
      - name: Run unit coverage
        run: make coverage-auth coverage-command
        
      - name: Upload unit coverage
        uses: codecov/codecov-action@v3
        with:
          flags: unit
          file: coverage.out
          fail_ci_if_error: false

  integration:
    name: Integration Tests (Team 2)
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
            
      - name: Run integration tests
        run: make test-integration-team
        
      - name: Run integration coverage
        run: make integration-cover
        
      - name: Upload integration coverage
        uses: codecov/codecov-action@v3
        with:
          flags: integration
          file: coverage/integration.out
          fail_ci_if_error: false

  e2e:
    name: E2E Tests (Team 3)
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
            
      - name: Run E2E tests
        run: make test-e2e-team
        
      - name: Run anti-peek check
        run: ./scripts/anti-peek-check.sh
        
      - name: Upload E2E coverage
        uses: codecov/codecov-action@v3
        with:
          flags: e2e
          fail_ci_if_error: false

  gate:
    name: Quality Gate
    needs: [unit, integration, e2e]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          
      - name: Run lint check
        run: make lint
        
      - name: Run race detection
        run: make race
        
      - name: Run coverage check
        run: make cover
        
      - name: Check coverage thresholds
        run: make check-coverage
        
      - name: Quality gate passed
        run: |
          echo "✅ All quality gates passed"
          echo "✅ Unit tests: $(make test-unit-team 2>&1 | grep -c 'PASS' || echo '0') tests passed"
          echo "✅ Integration tests: $(make test-integration-team 2>&1 | grep -c 'PASS' || echo '0') tests passed"
          echo "✅ E2E tests: $(make test-e2e-team 2>&1 | grep -c 'PASS' || echo '0') tests passed"
          echo "✅ Anti-peek enforcement: PASS"
          echo "✅ Coverage thresholds: PASS"
          echo "✅ Lint check: PASS"
          echo "✅ Race detection: PASS"

  quarantine:
    name: Flaky Test Quarantine
    runs-on: ubuntu-latest
    timeout-minutes: 30
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          
      - name: Run quarantined tests
        run: make test-quarantine
        continue-on-error: true
        
      - name: Upload quarantine results
        uses: actions/upload-artifact@v3
        with:
          name: quarantine-results
          path: quarantine.log
          retention-days: 7
