/usr/lib/python3/dist-packages/pytest_asyncio/plugin.py:207: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
============================= test session starts ==============================
platform linux -- Python 3.13.3, pytest-8.3.5, pluggy-1.6.0
rootdir: /home/carlossprekelsen/CameraRecorder/mediamtx-camera-service
configfile: pytest.ini
plugins: cov-6.2.1, asyncio-0.25.1, typeguard-4.4.2
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None
collected 15 items

tests/integration/test_security_authentication.py ...F....FFF....        [100%]

=================================== FAILURES ===================================
__________ TestJWTAuthenticationFlow.test_jwt_invalid_token_rejection __________
tests/integration/test_security_authentication.py:121: in test_jwt_invalid_token_rejection
    assert result.auth_method == "jwt"
E   AssertionError: assert None == 'jwt'
E    +  where None = AuthResult(authenticated=False, user_id=None, role=None, auth_method=None, error_message='No authentication token provided').auth_method
------------------------------ Captured log call -------------------------------
WARNING  src.security.jwt_handler.JWTHandler:jwt_handler.py:153 Invalid JWT token: Not enough segments
WARNING  src.security.jwt_handler.JWTHandler:jwt_handler.py:153 Invalid JWT token: Not enough segments
WARNING  src.security.jwt_handler.JWTHandler:jwt_handler.py:153 Invalid JWT token: Invalid crypto padding
_____ TestAuthenticationErrorHandling.test_authentication_with_empty_token _____
tests/integration/test_security_authentication.py:214: in test_authentication_with_empty_token
    assert result.auth_method == "jwt"
E   AssertionError: assert None == 'jwt'
E    +  where None = AuthResult(authenticated=False, user_id=None, role=None, auth_method=None, error_message='No authentication token provided').auth_method
_____ TestAuthenticationErrorHandling.test_authentication_with_none_token ______
tests/integration/test_security_authentication.py:221: in test_authentication_with_none_token
    assert result.auth_method == "jwt"
E   AssertionError: assert None == 'jwt'
E    +  where None = AuthResult(authenticated=False, user_id=None, role=None, auth_method=None, error_message='No authentication token provided').auth_method
__ TestAuthenticationErrorHandling.test_authentication_with_invalid_auth_type __
tests/integration/test_security_authentication.py:229: in test_authentication_with_invalid_auth_type
    assert result.authenticated is True
E   AssertionError: assert False is True
E    +  where False = AuthResult(authenticated=False, user_id=None, role=None, auth_method='jwt', error_message='Invalid authentication token').authenticated
=========================== short test summary info ============================
FAILED tests/integration/test_security_authentication.py::TestJWTAuthenticationFlow::test_jwt_invalid_token_rejection
FAILED tests/integration/test_security_authentication.py::TestAuthenticationErrorHandling::test_authentication_with_empty_token
FAILED tests/integration/test_security_authentication.py::TestAuthenticationErrorHandling::test_authentication_with_none_token
FAILED tests/integration/test_security_authentication.py::TestAuthenticationErrorHandling::test_authentication_with_invalid_auth_type
========================= 4 failed, 11 passed in 0.21s =========================
