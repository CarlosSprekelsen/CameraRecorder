/usr/lib/python3/dist-packages/pytest_asyncio/plugin.py:207: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
============================= test session starts ==============================
platform linux -- Python 3.13.3, pytest-8.3.5, pluggy-1.6.0
rootdir: /home/carlossprekelsen/CameraRecorder/mediamtx-camera-service
configfile: pytest.ini
plugins: cov-6.2.1, asyncio-0.25.1, typeguard-4.4.2
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None
collected 16 items

tests/installation/test_fresh_installation.py FFFFFFF.FF.FFF..           [100%]

=================================== FAILURES ===================================
_________ TestFreshInstallationProcess.test_ubuntu_22_04_compatibility _________
tests/installation/test_fresh_installation.py:34: in test_ubuntu_22_04_compatibility
    assert "Ubuntu 22.04" in result.stdout, "System must be Ubuntu 22.04"
E   AssertionError: System must be Ubuntu 22.04
E   assert 'Ubuntu 22.04' in 'Distributor ID:\tUbuntu\nDescription:\tUbuntu 25.04\nRelease:\t25.04\nCodename:\tplucky\n'
E    +  where 'Distributor ID:\tUbuntu\nDescription:\tUbuntu 25.04\nRelease:\t25.04\nCodename:\tplucky\n' = CompletedProcess(args=['lsb_release', '-a'], returncode=0, stdout='Distributor ID:\tUbuntu\nDescription:\tUbuntu 25.04\nRelease:\t25.04\nCodename:\tplucky\n', stderr='').stdout
______ TestFreshInstallationProcess.test_system_dependencies_availability ______
tests/installation/test_fresh_installation.py:63: in test_system_dependencies_availability
    assert result.returncode == 0, f"Required package {package} not found"
E   AssertionError: Required package python3-venv not found
E   assert 1 == 0
E    +  where 1 = CompletedProcess(args=['which', 'python3-venv'], returncode=1, stdout=b'', stderr=b'').returncode
_______ TestFreshInstallationProcess.test_installation_script_execution ________
tests/installation/test_fresh_installation.py:86: in test_installation_script_execution
    assert result.returncode == 0, f"Installation failed: {result.stderr}"
E   AssertionError: Installation failed: bash: deployment/scripts/install.sh: No such file or directory
E     
E   assert 127 == 0
E    +  where 127 = CompletedProcess(args=['bash', 'deployment/scripts/install.sh'], returncode=127, stdout='', stderr='bash: deployment/scripts/install.sh: No such file or directory\n').returncode
____ TestFreshInstallationProcess.test_security_configuration_verification _____
tests/installation/test_fresh_installation.py:92: in test_security_configuration_verification
    assert env_file.exists(), "Environment file not created"
E   AssertionError: Environment file not created
E   assert False
E    +  where False = exists()
E    +    where exists = PosixPath('/opt/camera-service/.env').exists
_____ TestFreshInstallationProcess.test_service_startup_and_health_checks ______
tests/installation/test_fresh_installation.py:128: in test_service_startup_and_health_checks
    assert result.returncode == 0, "Health endpoint not responding"
E   AssertionError: Health endpoint not responding
E   assert 7 == 0
E    +  where 7 = CompletedProcess(args=['curl', '-f', 'http://localhost:8003/health/ready'], returncode=7, stdout='', stderr='  % Total...--:--:-- --:--:--     0\ncurl: (7) Failed to connect to localhost port 8003 after 0 ms: Could not connect to server\n').returncode
_______ TestFreshInstallationProcess.test_authentication_flow_end_to_end _______
tests/installation/test_fresh_installation.py:146: in test_authentication_flow_end_to_end
    assert result.returncode == 0, "JWT token generation failed"
E   AssertionError: JWT token generation failed
E   assert 1 == 0
E    +  where 1 = CompletedProcess(args=['python3', '-c', 'from src.security.jwt_handler import JWTHandler; import os; secret = os.geten...(token)\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nModuleNotFoundError: No module named \'src.security\'\n').returncode
____ TestFreshInstallationProcess.test_websocket_authentication_integration ____
tests/installation/test_fresh_installation.py:174: in test_websocket_authentication_integration
    assert result.returncode == 0, "WebSocket server creation failed"
E   AssertionError: WebSocket server creation failed
E   assert 1 == 0
E    +  where 1 = CompletedProcess(args=['python3', '-c', 'from src.websocket_server.server import WebSocketJsonRpcServer; import asynci...bSocketJsonRpcServer.__init__() missing 2 required positional arguments: \'websocket_path\' and \'max_connections\'\n').returncode
_ TestInstallationIssuesAndResolutions.test_dependency_installation_verification _
tests/installation/test_fresh_installation.py:216: in test_dependency_installation_verification
    assert result.returncode == 0, f"System package {package} not found"
E   AssertionError: System package v4l-utils not found
E   assert 1 == 0
E    +  where 1 = CompletedProcess(args=['which', 'v4l-utils'], returncode=1, stdout=b'', stderr=b'').returncode
___ TestInstallationIssuesAndResolutions.test_configuration_file_validation ____
tests/installation/test_fresh_installation.py:227: in test_configuration_file_validation
    assert Path(config_file).exists(), f"Configuration file {config_file} not found"
/usr/lib/python3.13/pathlib/_abc.py:450: in exists
    self.stat(follow_symlinks=follow_symlinks)
/usr/lib/python3.13/pathlib/_local.py:517: in stat
    return os.stat(self, follow_symlinks=follow_symlinks)
E   PermissionError: [Errno 13] Permission denied: '/opt/camera-service/config/camera-service.yaml'
__________ TestPostInstallationHealthChecks.test_network_connectivity __________
tests/installation/test_fresh_installation.py:259: in test_network_connectivity
    assert result.returncode == 0, "Health endpoint not responding"
E   AssertionError: Health endpoint not responding
E   assert 7 == 0
E    +  where 7 = CompletedProcess(args=['curl', '-f', 'http://localhost:8003/health/system'], returncode=7, stdout='', stderr='  % Tota...--:--:-- --:--:--     0\ncurl: (7) Failed to connect to localhost port 8003 after 0 ms: Could not connect to server\n').returncode
___________ TestPostInstallationHealthChecks.test_log_file_creation ____________
tests/installation/test_fresh_installation.py:271: in test_log_file_creation
    assert log_dir.exists(), f"Log directory {log_dir} not created"
E   AssertionError: Log directory /var/log/camera-service not created
E   assert False
E    +  where False = exists()
E    +    where exists = PosixPath('/var/log/camera-service').exists
__________ TestInstallationAutomation.test_install_script_idempotency __________
tests/installation/test_fresh_installation.py:288: in test_install_script_idempotency
    assert result.returncode == 0, "Installation script not idempotent"
E   AssertionError: Installation script not idempotent
E   assert 1 == 0
E    +  where 1 = CompletedProcess(args=['bash', 'deployment/scripts/install.sh'], returncode=1, stdout='\n\x1b[0;34m=== MediaMTX Camera...0m Starting installation process...\n\x1b[0;31m[ERROR]\x1b[0m This script must be run as root (use sudo)\n', stderr='').returncode
=========================== short test summary info ============================
FAILED tests/installation/test_fresh_installation.py::TestFreshInstallationProcess::test_ubuntu_22_04_compatibility
FAILED tests/installation/test_fresh_installation.py::TestFreshInstallationProcess::test_system_dependencies_availability
FAILED tests/installation/test_fresh_installation.py::TestFreshInstallationProcess::test_installation_script_execution
FAILED tests/installation/test_fresh_installation.py::TestFreshInstallationProcess::test_security_configuration_verification
FAILED tests/installation/test_fresh_installation.py::TestFreshInstallationProcess::test_service_startup_and_health_checks
FAILED tests/installation/test_fresh_installation.py::TestFreshInstallationProcess::test_authentication_flow_end_to_end
FAILED tests/installation/test_fresh_installation.py::TestFreshInstallationProcess::test_websocket_authentication_integration
FAILED tests/installation/test_fresh_installation.py::TestInstallationIssuesAndResolutions::test_dependency_installation_verification
FAILED tests/installation/test_fresh_installation.py::TestInstallationIssuesAndResolutions::test_configuration_file_validation
FAILED tests/installation/test_fresh_installation.py::TestPostInstallationHealthChecks::test_network_connectivity
FAILED tests/installation/test_fresh_installation.py::TestPostInstallationHealthChecks::test_log_file_creation
FAILED tests/installation/test_fresh_installation.py::TestInstallationAutomation::test_install_script_idempotency
========================= 12 failed, 4 passed in 6.73s =========================
